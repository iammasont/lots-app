{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://lots-app/webpack/bootstrap","webpack://lots-app/webpack/runtime/define property getters","webpack://lots-app/webpack/runtime/hasOwnProperty shorthand","webpack://lots-app/webpack/runtime/make namespace object","webpack://lots-app/./lots-app/src/components/curves/curves-panel.js","webpack://lots-app/./lots-app/src/components/basic-corrections/basic-corrections.js","webpack://lots-app/./lots-app/src/components/creative/creative-effects.js","webpack://lots-app/./lots-app/src/components/color-wheels/color-wheels.js","webpack://lots-app/./lots-app/src/components/image-preview/preview-controller.js","webpack://lots-app/./lots-app/src/components/presets/presets.js","webpack://lots-app/./lots-app/src/components/common/ui-elements.js","webpack://lots-app/./lots-app/src/services/file-service.js","webpack://lots-app/./lots-app/src/services/lut-generator.js","webpack://lots-app/./lots-app/src/services/export-service.js","webpack://lots-app/./lots-app/src/models/image-processor.js","webpack://lots-app/./lots-app/src/app.js","webpack://lots-app/./lots-app/src/components/image-preview/image-comparison.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// components/curves/curves-panel.js\n// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Default curve parameters\nexport const defaultCurveParams = {\n  rgb: [\n    { x: 0, y: 0 },      // Shadow point\n    { x: 0.25, y: 0.25 }, // Quarter tone\n    { x: 0.5, y: 0.5 },   // Midtone\n    { x: 0.75, y: 0.75 }, // Three-quarter tone\n    { x: 1, y: 1 }       // Highlight point\n  ],\n  red: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  green: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  blue: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  currentChannel: 'rgb'\n};\n\n// Check if a curve is linear (no adjustments)\nexport function isLinearCurve(points) {\n  for (let i = 0; i < points.length; i++) {\n    const expectedY = points[i].x;\n    if (Math.abs(points[i].y - expectedY) > 0.01) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Interpolate a value through a curve\nexport function interpolateCurve(points, value) {\n  // Handle edge cases\n  if (value <= 0) return points[0].y;\n  if (value >= 1) return points[points.length - 1].y;\n  \n  // Find the segment containing the value\n  let i = 0;\n  while (i < points.length - 1 && points[i + 1].x < value) {\n    i++;\n  }\n  \n  // Linear interpolation between points\n  const p1 = points[i];\n  const p2 = points[i + 1];\n  const t = (value - p1.x) / (p2.x - p1.x);\n  \n  return p1.y + t * (p2.y - p1.y);\n}\n\n// Main Curves class\nclass CurvesPanel {\n  constructor(params = {}) {\n    // Merge provided params with defaults\n    this.params = {\n      ...JSON.parse(JSON.stringify(defaultCurveParams)),\n      ...params\n    };\n    \n    // DOM references\n    this.curveCanvas = null;\n    this.curveCtx = null;\n    this.channelButtons = {};\n    this.activePoint = null;\n    \n    // Bind methods to maintain correct context\n    this.init = this.init.bind(this);\n    this.drawCurve = this.drawCurve.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.resetCurve = this.resetCurve.bind(this);\n  }\n  \n  // Initialize the curves panel UI\n  init() {\n    console.log('Initializing Curves Panel');\n    \n    // Get references to curve UI elements\n    this.curveCanvas = document.getElementById('curve-canvas');\n    \n    if (!this.curveCanvas) {\n      console.warn('Curve canvas not found');\n      return;\n    }\n    \n    this.curveCtx = this.curveCanvas.getContext('2d');\n    \n    // Get channel selector buttons\n    this.channelButtons = {\n      rgb: document.getElementById('curve-rgb'),\n      red: document.getElementById('curve-red'),\n      green: document.getElementById('curve-green'),\n      blue: document.getElementById('curve-blue')\n    };\n    \n    // Set up event listeners\n    this.setupEvents();\n    \n    // Initial UI setup\n    this.updateChannelButtonUI();\n    \n    // Initialize by drawing the curve\n    this.drawCurve();\n  }\n  \n  // Set up all event listeners\n  setupEvents() {\n    // Ensure methods are bound\n    if (!this.curveCanvas) return;\n    \n    // Canvas event handling\n    this.curveCanvas.addEventListener('mousedown', this.handleMouseDown);\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n    \n    // Channel selector buttons\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        btn.addEventListener('click', () => {\n          // Set active channel\n          this.params.currentChannel = channel;\n          \n          // Update UI\n          this.updateChannelButtonUI();\n          this.drawCurve();\n        });\n      }\n    }\n    \n    // Reset button\n    const resetCurveBtn = document.getElementById('reset-curve-btn');\n    if (resetCurveBtn) {\n      resetCurveBtn.addEventListener('click', this.resetCurve);\n    }\n  }\n  \n  // Update channel button UI\n  updateChannelButtonUI() {\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        if (channel === this.params.currentChannel) {\n          btn.classList.add('active');\n        } else {\n          btn.classList.remove('active');\n        }\n      }\n    }\n  }\n  \n  // Reset curve to linear\n  resetCurve() {\n    console.log('Resetting curve');\n    \n    // Reset current channel to default linear curve\n    this.params[this.params.currentChannel] = \n      JSON.parse(JSON.stringify(defaultCurveParams[this.params.currentChannel]));\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply to image if available\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Draw the curve onto the canvas\n  drawCurve() {\n    if (!this.curveCanvas || !this.curveCtx) {\n      console.warn('Canvas not ready for drawing');\n      return;\n    }\n    \n    const width = this.curveCanvas.width;\n    const height = this.curveCanvas.height;\n    \n    // Clear canvas\n    this.curveCtx.clearRect(0, 0, width, height);\n    \n    // Get current channel curve points\n    const points = this.params[this.params.currentChannel];\n    \n    // Draw curve background\n    this.curveCtx.fillStyle = 'rgba(20, 20, 20, 0.3)';\n    this.curveCtx.fillRect(0, 0, width, height);\n    \n    // Set curve color based on channel\n    let curveColor;\n    switch (this.params.currentChannel) {\n      case 'red':\n        curveColor = 'rgba(255, 100, 100, 0.8)';\n        break;\n      case 'green':\n        curveColor = 'rgba(100, 255, 100, 0.8)';\n        break;\n      case 'blue':\n        curveColor = 'rgba(100, 100, 255, 0.8)';\n        break;\n      default:\n        curveColor = 'rgba(255, 255, 255, 0.8)';\n    }\n    \n    // Start drawing the curve\n    this.curveCtx.beginPath();\n    \n    // Move to first point\n    this.curveCtx.moveTo(points[0].x * width, (1 - points[0].y) * height);\n    \n    // Draw line segments\n    for (let i = 1; i < points.length; i++) {\n      this.curveCtx.lineTo(points[i].x * width, (1 - points[i].y) * height);\n    }\n    \n    // Style and stroke the path\n    this.curveCtx.strokeStyle = curveColor;\n    this.curveCtx.lineWidth = 2;\n    this.curveCtx.stroke();\n    \n    // Draw control points\n    points.forEach((point, index) => {\n      this.curveCtx.beginPath();\n      this.curveCtx.arc(\n        point.x * width,\n        (1 - point.y) * height,\n        5,\n        0,\n        Math.PI * 2\n      );\n      \n      // Style based on whether it's an endpoint (fixed) or not\n      if (index === 0 || index === points.length - 1) {\n        this.curveCtx.fillStyle = 'rgba(150, 150, 150, 0.8)';\n      } else {\n        this.curveCtx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n      }\n      \n      this.curveCtx.fill();\n      this.curveCtx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n      this.curveCtx.lineWidth = 1;\n      this.curveCtx.stroke();\n    });\n  }\n  \n  // Handle mouse down on curve\n  handleMouseDown(e) {\n    if (!this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Get current channel points\n    const points = this.params[this.params.currentChannel];\n    \n    // Find closest control point\n    let minDistance = Infinity;\n    let closestPoint = null;\n    let pointIndex = -1;\n    \n    points.forEach((point, index) => {\n      const dx = point.x - x;\n      const dy = point.y - y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance < minDistance) {\n        minDistance = distance;\n        closestPoint = point;\n        pointIndex = index;\n      }\n    });\n    \n    // If close enough to a point, make it active\n    if (minDistance < 0.05) {\n      // Don't allow moving first or last point\n      if (pointIndex > 0 && pointIndex < points.length - 1) {\n        this.activePoint = {\n          point: closestPoint,\n          index: pointIndex\n        };\n      }\n    }\n  }\n  \n  // Handle mouse move for curve editing\n  handleMouseMove(e) {\n    if (!this.activePoint || !this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    let x = (e.clientX - rect.left) / rect.width;\n    let y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Clamp values\n    x = Math.max(0, Math.min(1, x));\n    y = Math.max(0, Math.min(1, y));\n    \n    const points = this.params[this.params.currentChannel];\n    const index = this.activePoint.index;\n    \n    // Enforce x ordering and prevent moving end points\n    const prevX = points[index - 1].x;\n    const nextX = points[index + 1].x;\n    \n    // Ensure point stays between its neighbors\n    x = Math.max(prevX + 0.01, Math.min(nextX - 0.01, x));\n    \n    // Update point\n    points[index].x = x;\n    points[index].y = y;\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply adjustments if function exists\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Handle mouse up for curve editing\n  handleMouseUp() {\n    // Clear active point\n    this.activePoint = null;\n  }\n  \n  // Apply curves to RGB values\n  applyCurves(r, g, b) {\n    // Apply RGB curve\n    const rgbPoints = this.params.rgb;\n    \n    r = interpolateCurve(rgbPoints, r);\n    g = interpolateCurve(rgbPoints, g);\n    b = interpolateCurve(rgbPoints, b);\n    \n    // Apply individual channel curves if not linear\n    if (!isLinearCurve(this.params.red)) {\n      r = interpolateCurve(this.params.red, r);\n    }\n    \n    if (!isLinearCurve(this.params.green)) {\n      g = interpolateCurve(this.params.green, g);\n    }\n    \n    if (!isLinearCurve(this.params.blue)) {\n      b = interpolateCurve(this.params.blue, b);\n    }\n    \n    return { r, g, b };\n  }\n  \n  // Apply curves to an entire image\n  applyCurvesToImage(imageData) {\n    const data = imageData.data;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      // Get RGB values and normalize to 0-1\n      let r = data[i] / 255;\n      let g = data[i + 1] / 255;\n      let b = data[i + 2] / 255;\n      \n      // Apply curves\n      const result = this.applyCurves(r, g, b);\n      \n      // Convert back to 0-255 range\n      data[i] = Math.round(result.r * 255);\n      data[i + 1] = Math.round(result.g * 255);\n      data[i + 2] = Math.round(result.b * 255);\n      // Alpha remains unchanged\n    }\n    \n    return imageData;\n  }\n}\n\n// Single instance for the app\nlet curvesPanel = null;\n\n// Initialize the curves panel\nexport function initCurvesPanel() {\n  console.log('Setting up Curves Panel');\n  \n  // Initialize curves parameters in app state if not present\n  if (!appState.currentLutParams.curves) {\n    appState.currentLutParams.curves = JSON.parse(JSON.stringify(defaultCurveParams));\n  }\n  \n  // Create the curves panel with parameters from app state\n  curvesPanel = new CurvesPanel(appState.currentLutParams.curves);\n  \n  // Set up section toggle\n  setupSectionToggle('curves-toggle', 'curves-section');\n  \n  // Initialize when DOM is ready\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    setTimeout(() => curvesPanel.init(), 0);\n  } else {\n    document.addEventListener('DOMContentLoaded', () => curvesPanel.init());\n  }\n  \n  // Store reference in app state\n  appState.curvesPanel = curvesPanel;\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Apply curves to an image\nexport function applyCurvesToImage(imageData) {\n  if (curvesPanel) {\n    return curvesPanel.applyCurvesToImage(imageData);\n  }\n  return imageData;\n}","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Basic Corrections component\nexport function initBasicCorrections() {\n  console.log('Initializing Basic Corrections');\n  \n  // Initialize basic correction parameters if not present\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {\n      contrast: 1.2,\n      saturation: 1.15,\n      redBalance: 1.05,\n      greenBalance: 0.95,\n      blueBalance: 1.1\n    };\n  }\n  \n  // Initialize advanced parameters if not present\n  if (!appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri = {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    };\n  }\n  \n  // Set up basic mode controls\n  setupBasicControls();\n  \n  // Set up advanced mode controls\n  setupAdvancedControls();\n  \n  // Initialize LUT title and size controls\n  initTitleAndSizeControls();\n}\n\n// Set up basic mode slider controls\nfunction setupBasicControls() {\n  // Get slider references\n  const contrastSlider = document.getElementById('contrast');\n  const saturationSlider = document.getElementById('saturation');\n  const redBalanceSlider = document.getElementById('red-balance');\n  const greenBalanceSlider = document.getElementById('green-balance');\n  const blueBalanceSlider = document.getElementById('blue-balance');\n  \n  // Display value references\n  const contrastValue = document.getElementById('contrast-value');\n  const saturationValue = document.getElementById('saturation-value');\n  const redBalanceValue = document.getElementById('red-balance-value');\n  const greenBalanceValue = document.getElementById('green-balance-value');\n  const blueBalanceValue = document.getElementById('blue-balance-value');\n  \n  // Set up event listeners for sliders\n  setupSlider(contrastSlider, contrastValue, 'contrast');\n  setupSlider(saturationSlider, saturationValue, 'saturation');\n  setupSlider(redBalanceSlider, redBalanceValue, 'redBalance');\n  setupSlider(greenBalanceSlider, greenBalanceValue, 'greenBalance');\n  setupSlider(blueBalanceSlider, blueBalanceValue, 'blueBalance');\n}\n\n// Set up advanced mode controls\nfunction setupAdvancedControls() {\n  const basicCorrectionSection = document.getElementById('basic-correction-section');\n  if (!basicCorrectionSection) return;\n  \n  // Clear any existing content\n  basicCorrectionSection.innerHTML = '';\n  \n  // Create advanced basic correction controls\n  \n  // Create exposure control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'exposure-advanced',\n    label: 'Exposure',\n    min: -5,\n    max: 5,\n    step: 0.1,\n    initialValue: appState.currentLutParams.lumetri.exposure || 0,\n    paramName: 'exposure'\n  });\n  \n  // Create contrast control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'contrast-advanced',\n    label: 'Contrast',\n    min: -100,\n    max: 100,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.contrast || 0,\n    paramName: 'contrast'\n  });\n  \n  // Create highlights control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'highlights-advanced',\n    label: 'Highlights',\n    min: -100,\n    max: 100,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.highlights || 0,\n    paramName: 'highlights'\n  });\n  \n  // Create shadows control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'shadows-advanced',\n    label: 'Shadows',\n    min: -100,\n    max: 100,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.shadows || 0,\n    paramName: 'shadows'\n  });\n  \n  // Create whites control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'whites-advanced',\n    label: 'Whites',\n    min: -100,\n    max: 100,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.whites || 0,\n    paramName: 'whites'\n  });\n  \n  // Create blacks control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'blacks-advanced',\n    label: 'Blacks',\n    min: -100,\n    max: 100,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.blacks || 0,\n    paramName: 'blacks'\n  });\n  \n  // Create temperature control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'temperature-advanced',\n    label: 'Temperature',\n    min: -100,\n    max: 100,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.temperature || 0,\n    paramName: 'temperature'\n  });\n  \n  // Create tint control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'tint-advanced',\n    label: 'Tint',\n    min: -100,\n    max: 100,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.tint || 0,\n    paramName: 'tint'\n  });\n  \n  // Add reset button\n  const resetButton = document.createElement('button');\n  resetButton.textContent = 'Reset';\n  resetButton.className = 'reset-btn';\n  resetButton.addEventListener('click', resetAdvancedControls);\n  basicCorrectionSection.appendChild(resetButton);\n}\n\n// Helper function to create advanced slider controls\nfunction createAdvancedSlider(container, options) {\n  if (!container) return;\n  \n  const { id, label, min, max, step, initialValue, paramName } = options;\n  \n  // Create container for the slider\n  const sliderContainer = document.createElement('div');\n  sliderContainer.className = 'control-group';\n  \n  // Create label element\n  const labelElement = document.createElement('label');\n  labelElement.setAttribute('for', id);\n  labelElement.textContent = label + ' ';\n  \n  // Create value display\n  const valueDisplay = document.createElement('span');\n  valueDisplay.id = `${id}-value`;\n  valueDisplay.className = 'parameter-value';\n  valueDisplay.textContent = initialValue.toFixed(1);\n  \n  // Append value display to label\n  labelElement.appendChild(valueDisplay);\n  \n  // Create slider input\n  const slider = document.createElement('input');\n  slider.type = 'range';\n  slider.id = id;\n  slider.min = min;\n  slider.max = max;\n  slider.step = step;\n  slider.value = initialValue;\n  \n  // Add elements to container\n  sliderContainer.appendChild(labelElement);\n  sliderContainer.appendChild(slider);\n  container.appendChild(sliderContainer);\n  \n  // Set up event listener\n  slider.addEventListener('input', () => {\n    // Ensure lumetri object exists\n    if (!appState.currentLutParams.lumetri) {\n      appState.currentLutParams.lumetri = {};\n    }\n    \n    // Update parameter value\n    appState.currentLutParams.lumetri[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = parseFloat(slider.value).toFixed(1);\n    \n    // Apply changes to image\n    applyImageAdjustments();\n  });\n  \n  return { slider, valueDisplay };\n}\n\n// Reset all advanced controls to their default values\nfunction resetAdvancedControls() {\n  // Reset all lumetri parameters to default values\n  appState.currentLutParams.lumetri = {\n    exposure: 0,\n    contrast: 0,\n    highlights: 0,\n    shadows: 0,\n    whites: 0,\n    blacks: 0,\n    temperature: 0,\n    tint: 0\n  };\n  \n  // Update all slider controls to match reset values\n  const sliders = document.querySelectorAll('#basic-correction-section input[type=\"range\"]');\n  sliders.forEach(slider => {\n    const paramName = slider.id.split('-')[0]; // Extract parameter name from id\n    slider.value = appState.currentLutParams.lumetri[paramName] || 0;\n    \n    // Update value display\n    const valueDisplay = document.getElementById(`${slider.id}-value`);\n    if (valueDisplay) {\n      valueDisplay.textContent = '0.0';\n    }\n  });\n  \n  // Apply changes\n  applyImageAdjustments();\n}\n\n// Set up a slider control with its value display for basic mode\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) return;\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.basic[paramName];\n  valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.basic[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Initialize title and LUT size controls\nfunction initTitleAndSizeControls() {\n  const titleInput = document.getElementById('title');\n  const lutSizeSelect = document.getElementById('lut-size');\n  \n  if (titleInput) {\n    // Set initial value\n    titleInput.value = appState.currentLutParams.title || \"Signature Look\";\n    \n    // Add event listener\n    titleInput.addEventListener('input', () => {\n      appState.currentLutParams.title = titleInput.value;\n    });\n  }\n  \n  if (lutSizeSelect) {\n    // Set initial value\n    lutSizeSelect.value = appState.currentLutParams.size || \"32\";\n    \n    // Add event listener\n    lutSizeSelect.addEventListener('change', () => {\n      appState.currentLutParams.size = parseInt(lutSizeSelect.value);\n    });\n  }\n}\n\n// Apply the basic corrections to an image\nexport function applyBasicCorrections(imageData) {\n  const params = appState.currentLutParams.basic;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply contrast\n    r = applyContrast(r, params.contrast);\n    g = applyContrast(g, params.contrast);\n    b = applyContrast(b, params.contrast);\n    \n    // Apply color balance\n    r *= params.redBalance;\n    g *= params.greenBalance;\n    b *= params.blueBalance;\n    \n    // Apply saturation\n    if (params.saturation !== 1.0) {\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      r = luminance + params.saturation * (r - luminance);\n      g = luminance + params.saturation * (g - luminance);\n      b = luminance + params.saturation * (b - luminance);\n    }\n    \n    // Apply shadow/highlight adjustments (if defined)\n    if (params.shadowsShift && params.highlightsShift) {\n      let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n      let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n      \n      r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n      g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n      b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Helper function to apply contrast\nfunction applyContrast(value, contrast) {\n  return 0.5 + (value - 0.5) * contrast;\n}\n\n// Export functions and constants\nexport {\n  applyContrast\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Creative Effects component\nexport function initCreativeEffects() {\n  console.log('Initializing Creative Effects');\n  \n  // Initialize creative effect parameters if not present\n  if (!appState.currentLutParams.creative) {\n    appState.currentLutParams.creative = {\n      fadedFilm: 0,\n      vibrance: 0\n    };\n  }\n  \n  // Get slider references\n  const fadedFilmSlider = document.getElementById('faded-film');\n  const vibranceSlider = document.getElementById('vibrance');\n  \n  // Display value references\n  const fadedFilmValue = document.getElementById('faded-film-value');\n  const vibranceValue = document.getElementById('vibrance-value');\n  \n  // Set up event listeners for sliders\n  setupSlider(fadedFilmSlider, fadedFilmValue, 'fadedFilm');\n  setupSlider(vibranceSlider, vibranceValue, 'vibrance');\n  \n  // Set up section toggle\n  setupSectionToggle('creative-toggle', 'creative-section');\n}\n\n// Set up a slider control with its value display\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) return;\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.creative[paramName];\n  valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.creative[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Apply creative effects to image data\nexport function applyCreativeEffects(imageData) {\n  const params = appState.currentLutParams.creative;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply vibrance if enabled\n    if (params.vibrance !== 0) {\n      const result = applyVibrance(r, g, b, params.vibrance / 150);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Apply faded film effect if enabled\n    if (params.fadedFilm > 0) {\n      const result = applyFadedFilm(r, g, b, params.fadedFilm / 100);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply vibrance adjustment\nfunction applyVibrance(r, g, b, amount) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate saturation level to determine vibrance effect\n  const maxChannel = Math.max(r, g, b);\n  const minChannel = Math.min(r, g, b);\n  const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n  \n  // Apply vibrance (affects less saturated colors more)\n  const vibranceEffect = amount * (1 - saturationLevel);\n  \n  // Apply the effect to each channel\n  r = luminance + (r - luminance) * (1 + vibranceEffect);\n  g = luminance + (g - luminance) * (1 + vibranceEffect);\n  b = luminance + (b - luminance) * (1 + vibranceEffect);\n  \n  return { r, g, b };\n}\n\n// Apply faded film effect\nfunction applyFadedFilm(r, g, b, amount) {\n  // Faded film effect reduces contrast and slightly shifts the black point\n  const fadeAmount = amount * 0.5; // Adjust the strength\n  \n  // Reduce contrast\n  r = r * (1 - fadeAmount) + 0.5 * fadeAmount;\n  g = g * (1 - fadeAmount) + 0.5 * fadeAmount;\n  b = b * (1 - fadeAmount) + 0.5 * fadeAmount;\n  \n  // Add a slight shift to the black point\n  const blackShift = amount * 0.1;\n  r += blackShift;\n  g += blackShift;\n  b += blackShift;\n  \n  return { r, g, b };\n}\n\n// Export functions and utilities\nexport {\n  applyVibrance,\n  applyFadedFilm\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Color Wheels component\nexport function initColorWheels() {\n  console.log('Initializing Color Wheels');\n  \n  // Initialize color wheel parameters if not present\n  if (!appState.currentLutParams.colorWheels) {\n    appState.currentLutParams.colorWheels = {\n      shadowTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      highlightTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      tintBalance: 0 // Range: -150 to 150\n    };\n  }\n  \n  // Get DOM references\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  // Setup color wheels\n  if (shadowColorWheel) {\n    setupColorWheel(shadowColorWheel, 'shadowTint');\n  }\n  \n  if (highlightColorWheel) {\n    setupColorWheel(highlightColorWheel, 'highlightTint');\n  }\n  \n  // Setup tint balance slider\n  if (tintBalanceSlider && tintBalanceValue) {\n    // Set initial value\n    tintBalanceSlider.value = appState.currentLutParams.colorWheels.tintBalance;\n    tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n    \n    // Add event listener\n    tintBalanceSlider.addEventListener('input', () => {\n      appState.currentLutParams.colorWheels.tintBalance = parseFloat(tintBalanceSlider.value);\n      tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n      applyImageAdjustments();\n    });\n  }\n  \n  // Setup reset button\n  const resetButton = document.querySelector('.reset-btn[data-section=\"colorWheels\"]');\n  if (resetButton) {\n    resetButton.addEventListener('click', resetColorWheels);\n  }\n  \n  // Set up section toggle\n  setupSectionToggle('color-wheels-toggle', 'color-wheels-section');\n}\n\n// Set up a color wheel control\nfunction setupColorWheel(wheel, paramName) {\n  if (!wheel) return;\n  \n  // Clear any existing content\n  wheel.innerHTML = '';\n  \n  // Create a canvas-based color wheel\n  const canvas = document.createElement('canvas');\n  canvas.width = wheel.clientWidth || 80;\n  canvas.height = wheel.clientHeight || 80;\n  wheel.appendChild(canvas);\n  \n  // Use CSS-based color wheel instead of canvas\n  wheel.style.background = \"conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  wheel.style.backgroundImage = \"radial-gradient(circle at center, white 0%, rgba(255, 255, 255, 0) 70%), conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  \n  // Add indicator for current position\n  const indicator = document.createElement('div');\n  indicator.className = 'wheel-indicator';\n  wheel.appendChild(indicator);\n  \n  // Get current tint value\n  const tintValue = appState.currentLutParams.colorWheels[paramName];\n  \n  // Position indicator based on current tint value\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  const maxDistance = Math.min(centerX, centerY) - 2;\n  \n  // Calculate position from tint values\n  // Convert from 0-255 range to -1 to 1 range (128 is center/neutral)\n  const normalizedR = (tintValue.r - 128) / 128;\n  const normalizedG = (tintValue.g - 128) / 128;\n  const normalizedB = (tintValue.b - 128) / 128;\n  \n  // Estimate hue and saturation from RGB (simplified)\n  let saturation = Math.sqrt(normalizedR*normalizedR + normalizedG*normalizedG + normalizedB*normalizedB);\n  saturation = Math.min(1, saturation); // Clamp to 1\n  \n  // This is a simplified conversion - a complete RGB to HSV would be more accurate\n  let hue = 0;\n  if (saturation > 0) {\n    // Rough estimation of hue angle based on RGB values\n    hue = Math.atan2(normalizedG, normalizedR);\n    if (normalizedB > Math.max(normalizedR, normalizedG)) {\n      hue = Math.PI + Math.atan2(normalizedB, -normalizedR);\n    }\n    // Convert to 0-2PI range\n    if (hue < 0) hue += 2 * Math.PI;\n  }\n  \n  // Calculate x,y position on wheel\n  const x = Math.cos(hue) * saturation * maxDistance;\n  const y = Math.sin(hue) * saturation * maxDistance;\n  \n  // Position indicator\n  setWheelIndicatorPosition(wheel, indicator, x, y);\n  \n  // Track if mouse is down\n  let isMouseDown = false;\n  \n  // Handle mouse interactions\n  wheel.addEventListener('mousedown', (e) => {\n    isMouseDown = true;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mousemove', (e) => {\n    if (!isMouseDown) return;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mouseup', () => {\n    isMouseDown = false;\n  });\n  \n  wheel.addEventListener('click', updateWheelFromEvent);\n  \n  function updateWheelFromEvent(e) {\n    const rect = wheel.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    \n    // Get coordinates relative to center\n    const x = e.clientX - rect.left - centerX;\n    const y = e.clientY - rect.top - centerY;\n    \n    // Calculate distance from center (for saturation)\n    const distance = Math.sqrt(x * x + y * y);\n    const maxDistance = Math.min(centerX, centerY) - 2;\n    \n    // Limit to wheel boundary\n    if (distance <= maxDistance) {\n      // Update indicator position\n      setWheelIndicatorPosition(wheel, indicator, x, y);\n      \n      // Calculate angle (for hue)\n      let angle = Math.atan2(y, x);\n      if (angle < 0) angle += 2 * Math.PI;\n      \n      // Normalize distance to 0-1\n      const normalizedDistance = distance / maxDistance;\n      \n      // Calculate color based on position\n      const hue = angle / (2 * Math.PI);\n      const saturation = normalizedDistance;\n      const rgb = hsvToRgb(hue, saturation, 1.0);\n      \n      // Map RGB (0-255) to tint adjustments (64-192, where 128 is neutral)\n      // We use a narrower range to avoid extreme adjustments\n      const mappedR = Math.round(128 + (rgb.r - 128) * saturation);\n      const mappedG = Math.round(128 + (rgb.g - 128) * saturation);\n      const mappedB = Math.round(128 + (rgb.b - 128) * saturation);\n      \n      // Update the parameter\n      appState.currentLutParams.colorWheels[paramName] = { r: mappedR, g: mappedG, b: mappedB };\n      \n      // Apply the adjustment to the image\n      applyImageAdjustments();\n    }\n  }\n}\n\n// Reset color wheels to default values\nfunction resetColorWheels() {\n  // Reset to neutral tints\n  appState.currentLutParams.colorWheels.shadowTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.highlightTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.tintBalance = 0;\n  \n  // Update UI\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  if (tintBalanceSlider) tintBalanceSlider.value = 0;\n  if (tintBalanceValue) tintBalanceValue.textContent = '0.0';\n  \n  // Reset wheel indicators\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  \n  if (shadowColorWheel) {\n    const shadowIndicator = shadowColorWheel.querySelector('.wheel-indicator');\n    if (shadowIndicator) {\n      setWheelIndicatorPosition(shadowColorWheel, shadowIndicator, 0, 0);\n    }\n  }\n  \n  if (highlightColorWheel) {\n    const highlightIndicator = highlightColorWheel.querySelector('.wheel-indicator');\n    if (highlightIndicator) {\n      setWheelIndicatorPosition(highlightColorWheel, highlightIndicator, 0, 0);\n    }\n  }\n  \n  // Apply changes to image\n  applyImageAdjustments();\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Helper for setting wheel indicator position\nfunction setWheelIndicatorPosition(wheel, indicator, x, y) {\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  \n  indicator.style.left = `${centerX + x}px`;\n  indicator.style.top = `${centerY + y}px`;\n}\n\n// Convert HSV (0-1 ranges) to RGB (0-255)\nfunction hsvToRgb(h, s, v) {\n  let r, g, b;\n  \n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  \n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  \n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\n\n// Apply color wheel tinting to an image\nexport function applyColorWheelAdjustments(imageData) {\n  const params = appState.currentLutParams.colorWheels;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply color wheels tinting\n    const result = applyColorWheels(r, g, b, params.shadowTint, params.highlightTint, params.tintBalance / 150);\n    \n    // Clamp values to valid range\n    data[i] = Math.round(Math.min(1.0, Math.max(0.0, result.r)) * 255);\n    data[i + 1] = Math.round(Math.min(1.0, Math.max(0.0, result.g)) * 255);\n    data[i + 2] = Math.round(Math.min(1.0, Math.max(0.0, result.b)) * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply color wheels (shadow and highlight tinting)\nfunction applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate shadow and highlight influence based on luminance\n  let shadowInfluence = Math.pow(1 - luminance, 2);\n  let highlightInfluence = Math.pow(luminance, 2);\n  \n  // Apply tint balance to adjust the crossover point\n  if (tintBalance > 0) {\n    // Shift influence towards highlights\n    shadowInfluence *= (1 - tintBalance);\n    highlightInfluence = highlightInfluence * (1 - tintBalance) + tintBalance;\n  } else if (tintBalance < 0) {\n    // Shift influence towards shadows\n    highlightInfluence *= (1 + tintBalance);\n    shadowInfluence = shadowInfluence * (1 + tintBalance) - tintBalance;\n  }\n  \n  // Convert shadow tint from 0-255 to -1 to 1 range (128 is neutral)\n  const shadowR = (shadowTint.r - 128) / 128;\n  const shadowG = (shadowTint.g - 128) / 128;\n  const shadowB = (shadowTint.b - 128) / 128;\n  \n  // Convert highlight tint from 0-255 to -1 to 1 range (128 is neutral)\n  const highlightR = (highlightTint.r - 128) / 128;\n  const highlightG = (highlightTint.g - 128) / 128;\n  const highlightB = (highlightTint.b - 128) / 128;\n  \n  // Apply shadow tint\n  r += shadowR * shadowInfluence * 0.5;\n  g += shadowG * shadowInfluence * 0.5;\n  b += shadowB * shadowInfluence * 0.5;\n  \n  // Apply highlight tint\n  r += highlightR * highlightInfluence * 0.5;\n  g += highlightG * highlightInfluence * 0.5;\n  b += highlightB * highlightInfluence * 0.5;\n  \n  return { r, g, b };\n}\n\n// Export functions for use in other modules\nexport {\n  hsvToRgb,\n  applyColorWheels\n};","// Import utilities if needed\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Keep track of slider position\nlet currentSliderPosition = 50;\n\n// Initialize the preview controller\nexport function initPreviewController() {\n  console.log('Initializing Preview Controller');\n  \n  // Get DOM elements\n  const originalImage = document.getElementById('original-image');\n  const processedImage = document.getElementById('processed-image');\n  const originalPlaceholder = document.getElementById('original-placeholder');\n  const comparisonContainer = document.getElementById('comparison-container');\n  const imageUploadBtn = document.getElementById('image-upload-btn');\n  \n  // Store references to the DOM elements in the global app state\n  appState.originalImageElement = originalImage;\n  appState.processedImageElement = processedImage;\n  \n  // Set up view toggle buttons\n  setupViewToggleButtons();\n  \n  // Set up image upload button\n  if (imageUploadBtn) {\n    imageUploadBtn.addEventListener('click', handleImageUpload);\n  }\n  \n  // Set up image load handler\n  if (originalImage) {\n    originalImage.onload = () => {\n      console.log(\"Image loaded successfully\");\n      \n      // Store the image in app state\n      appState.originalImage = originalImage;\n      appState.processedImage = processedImage;\n      \n      // Hide placeholder, show comparison container\n      if (originalPlaceholder) originalPlaceholder.style.display = 'none';\n      if (comparisonContainer) comparisonContainer.style.display = 'block';\n      \n      // Initialize comparison slider\n      initComparisonSlider();\n      \n      // Apply adjustments to process the image\n      applyImageAdjustments();\n    };\n  }\n}\n\n// Set up view toggle buttons (split, before, after)\nfunction setupViewToggleButtons() {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  \n  if (viewSplitBtn) {\n    viewSplitBtn.addEventListener('click', () => {\n      setViewMode('split');\n    });\n  }\n  \n  if (viewBeforeBtn) {\n    viewBeforeBtn.addEventListener('click', () => {\n      setViewMode('before');\n    });\n  }\n  \n  if (viewAfterBtn) {\n    viewAfterBtn.addEventListener('click', () => {\n      setViewMode('after');\n    });\n  }\n}\n\n// Handle image upload functionality\nfunction handleImageUpload() {\n  console.log(\"Image upload button clicked\");\n  \n  // In Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    window.electronAPI.openFileDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp'] }]\n    }).then(imagePath => {\n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        appState.originalImageElement.src = `file://${imagePath}`;\n      }\n    }).catch(error => {\n      console.error(\"Error in Electron file dialog:\", error);\n      fallbackFileUpload();\n    });\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    fallbackFileUpload();\n  }\n}\n\n// Fallback file upload function using HTML input for browser context\nfunction fallbackFileUpload() {\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = 'image/*';\n  \n  input.addEventListener('change', function(e) {\n    if (this.files && this.files[0]) {\n      const file = this.files[0];\n      console.log(\"Selected file:\", file.name);\n      \n      const reader = new FileReader();\n      reader.onload = function(event) {\n        appState.originalImageElement.src = event.target.result;\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  });\n  \n  input.click();\n}\n\n// Initialize comparison slider functionality\nfunction initComparisonSlider() {\n  const comparisonContainer = document.getElementById('comparison-container');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  let isSliding = false;\n  let startX = 0;\n  let startPercent = 50;\n\n  // Function to update slider position\n  function updateSliderPosition(percent) {\n    percent = Math.max(0, Math.min(100, percent));\n    \n    // Store the current position\n    currentSliderPosition = percent;\n    \n    // Update the clip-path of the original image container\n    originalImageContainer.style.clipPath = `inset(0 ${100 - percent}% 0 0)`;\n    \n    // Update slider position\n    comparisonSlider.style.left = percent + '%';\n    \n    // Update vertical divider position\n    verticalDivider.style.left = percent + '%';\n  }\n\n  // Handle mouse events\n  comparisonSlider.addEventListener('mousedown', (e) => {\n    isSliding = true;\n    startX = e.clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('mousemove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('mouseup', () => {\n    isSliding = false;\n  });\n\n  // Handle touch events\n  comparisonSlider.addEventListener('touchstart', (e) => {\n    isSliding = true;\n    startX = e.touches[0].clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('touchmove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.touches[0].clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('touchend', () => {\n    isSliding = false;\n  });\n\n  // Click anywhere in container to move slider\n  comparisonContainer.addEventListener('click', (e) => {\n    if (e.target.closest('.toggle-view') || e.target.closest('.slider-handle')) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const percent = (clickX / rect.width) * 100;\n    \n    updateSliderPosition(percent);\n  });\n\n  // Initialize with 50/50 split or restore previous position\n  updateSliderPosition(currentSliderPosition);\n}\n\n// Set view mode (split, before, after)\nfunction setViewMode(mode, resetPosition = true) {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  // Reset all buttons\n  viewSplitBtn.classList.remove('active');\n  viewBeforeBtn.classList.remove('active');\n  viewAfterBtn.classList.remove('active');\n  \n  switch (mode) {\n    case 'split':\n      viewSplitBtn.classList.add('active');\n      \n      // If resetPosition is true, set to 50/50 split; otherwise keep current position\n      if (resetPosition) {\n        currentSliderPosition = 50;\n      }\n      \n      // Position elements based on current slider position\n      originalImageContainer.style.clipPath = `inset(0 ${100 - currentSliderPosition}% 0 0)`;\n      verticalDivider.style.left = `${currentSliderPosition}%`;\n      comparisonSlider.style.left = `${currentSliderPosition}%`;\n      \n      // Make everything visible\n      comparisonSlider.style.display = 'block';\n      originalImageContainer.style.display = 'block';\n      verticalDivider.style.display = 'block'; // Show divider\n      break;\n      \n    case 'before':\n      viewBeforeBtn.classList.add('active');\n      \n      // Show full original image\n      originalImageContainer.style.clipPath = 'inset(0 0 0 0)';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      originalImageContainer.style.display = 'block';\n      break;\n      \n    case 'after':\n      viewAfterBtn.classList.add('active');\n      \n      // Hide original image completely\n      originalImageContainer.style.display = 'none';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      break;\n  }\n}\n\n// Export functions that may be needed by other modules\nexport {\n  setViewMode,\n  currentSliderPosition\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Define built-in presets\nconst builtInPresets = {\n  \"custom\": {\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0]\n  },\n  \"warm\": {\n    contrast: 1.1,\n    saturation: 0.9,\n    redBalance: 1.15,\n    greenBalance: 0.95,\n    blueBalance: 0.85,\n    shadowsShift: [0.08, 0.02, -0.05],\n    highlightsShift: [0.05, 0.0, -0.05]\n  },\n  \"cool\": {\n    contrast: 1.3,\n    saturation: 0.85,\n    redBalance: 0.9,\n    greenBalance: 1.0,\n    blueBalance: 1.2,\n    shadowsShift: [-0.03, 0.0, 0.08],\n    highlightsShift: [0.0, 0.0, 0.03]\n  },\n  \"bw\": {\n    contrast: 1.5,\n    saturation: 0.0,\n    redBalance: 0.33,\n    greenBalance: 0.33,\n    blueBalance: 0.33,\n    shadowsShift: [-0.05, -0.05, -0.05],\n    highlightsShift: [0.05, 0.05, 0.05]\n  },\n  \"film\": {\n    contrast: 0.9,\n    saturation: 0.8,\n    redBalance: 1.1,\n    greenBalance: 1.05,\n    blueBalance: 0.9,\n    shadowsShift: [0.1, 0.05, 0.0],\n    highlightsShift: [-0.02, -0.02, 0.05]\n  }\n};\n\n// Initialize user presets\nlet userPresets = {};\n\n// Initialize the Presets component\nexport function initPresets() {\n  console.log('Initializing Presets');\n  \n  // Initialize preset buttons\n  const presetButtons = document.querySelectorAll('.preset-btn');\n  \n  presetButtons.forEach(btn => {\n    btn.addEventListener('click', () => {\n      // Remove active class from all buttons\n      presetButtons.forEach(b => b.classList.remove('active'));\n      \n      // Add active class to clicked button\n      btn.classList.add('active');\n      \n      // Get preset id from button id\n      const presetId = btn.id.split('-')[1];\n      \n      // Apply the preset\n      applyPreset(presetId);\n    });\n  });\n  \n  // Load any saved user presets\n  loadUserPresets();\n}\n\n// Apply a preset by its ID\nfunction applyPreset(presetId) {\n  // Look for preset in built-in presets first, then user presets\n  const preset = builtInPresets[presetId] || userPresets[presetId];\n  \n  if (!preset) {\n    console.warn(`Preset '${presetId}' not found`);\n    return;\n  }\n  \n  console.log(`Applying preset: ${presetId}`);\n  \n  // Store the active preset ID\n  appState.activePresetId = presetId;\n  \n  // Apply preset to basic parameters\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {};\n  }\n  \n  // Copy preset values to app state\n  appState.currentLutParams.basic.contrast = preset.contrast;\n  appState.currentLutParams.basic.saturation = preset.saturation;\n  appState.currentLutParams.basic.redBalance = preset.redBalance;\n  appState.currentLutParams.basic.greenBalance = preset.greenBalance;\n  appState.currentLutParams.basic.blueBalance = preset.blueBalance;\n  \n  // Set shadows and highlights shift if present\n  if (preset.shadowsShift) {\n    appState.currentLutParams.basic.shadowsShift = [...preset.shadowsShift];\n  }\n  \n  if (preset.highlightsShift) {\n    appState.currentLutParams.basic.highlightsShift = [...preset.highlightsShift];\n  }\n  \n  // If advanced parameters are in the preset, apply them too\n  if (preset.advanced) {\n    applyAdvancedPreset(preset.advanced);\n  }\n  \n  // Update UI sliders to reflect new values\n  updateSlidersFromPreset();\n  \n  // Apply adjustments to image\n  applyImageAdjustments();\n}\n\n// Apply advanced preset parameters if present\nfunction applyAdvancedPreset(advancedParams) {\n  // Apply Lumetri-style parameters if they exist in the preset\n  if (advancedParams.temperature !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.temperature = advancedParams.temperature;\n  }\n  \n  if (advancedParams.tint !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.tint = advancedParams.tint;\n  }\n  \n  // Add more advanced parameters as needed\n}\n\n// Update UI sliders to reflect preset values\nfunction updateSlidersFromPreset() {\n  const params = appState.currentLutParams.basic;\n  \n  // Update basic sliders\n  updateSlider('contrast', params.contrast);\n  updateSlider('saturation', params.saturation);\n  updateSlider('red-balance', params.redBalance);\n  updateSlider('green-balance', params.greenBalance);\n  updateSlider('blue-balance', params.blueBalance);\n}\n\n// Helper to update a slider and its value display\nfunction updateSlider(sliderId, value) {\n  const slider = document.getElementById(sliderId);\n  const valueDisplay = document.getElementById(`${sliderId}-value`);\n  \n  if (slider) {\n    slider.value = value;\n  }\n  \n  if (valueDisplay) {\n    valueDisplay.textContent = value.toFixed(2);\n  }\n}\n\n// Save the current settings as a user preset\nexport function saveCurrentAsPreset(presetName) {\n  if (!presetName) return;\n  \n  // Create a preset from current settings\n  const newPreset = {\n    contrast: appState.currentLutParams.basic.contrast,\n    saturation: appState.currentLutParams.basic.saturation,\n    redBalance: appState.currentLutParams.basic.redBalance,\n    greenBalance: appState.currentLutParams.basic.greenBalance,\n    blueBalance: appState.currentLutParams.basic.blueBalance\n  };\n  \n  // Add shadows and highlights shift if present\n  if (appState.currentLutParams.basic.shadowsShift) {\n    newPreset.shadowsShift = [...appState.currentLutParams.basic.shadowsShift];\n  }\n  \n  if (appState.currentLutParams.basic.highlightsShift) {\n    newPreset.highlightsShift = [...appState.currentLutParams.basic.highlightsShift];\n  }\n  \n  // Add advanced parameters if in advanced mode\n  if (appState.activeMode === 'advanced' && appState.currentLutParams.lumetri) {\n    newPreset.advanced = {\n      temperature: appState.currentLutParams.lumetri.temperature,\n      tint: appState.currentLutParams.lumetri.tint,\n      // Add other advanced parameters\n    };\n  }\n  \n  // Save to user presets\n  userPresets[presetName] = newPreset;\n  \n  // Save to local storage\n  saveUserPresets();\n  \n  // Add the preset to UI\n  addPresetToUI(presetName);\n  \n  console.log(`Saved preset: ${presetName}`);\n}\n\n// Add a user preset to the UI\nfunction addPresetToUI(presetName) {\n  // This function would add a new preset button to the UI\n  // Implementation would depend on how you want to handle user presets in the UI\n  console.log(`Added preset to UI: ${presetName}`);\n}\n\n// Save user presets to local storage\nfunction saveUserPresets() {\n  try {\n    localStorage.setItem('lotsAppUserPresets', JSON.stringify(userPresets));\n  } catch (error) {\n    console.error('Failed to save user presets:', error);\n  }\n}\n\n// Load user presets from local storage\nfunction loadUserPresets() {\n  try {\n    const savedPresets = localStorage.getItem('lotsAppUserPresets');\n    if (savedPresets) {\n      userPresets = JSON.parse(savedPresets);\n      console.log('Loaded user presets:', Object.keys(userPresets));\n    }\n  } catch (error) {\n    console.error('Failed to load user presets:', error);\n  }\n}\n\n// Export functions and constants\nexport {\n  builtInPresets,\n  userPresets,\n  applyPreset\n};","// components/common/ui-elements.js\n// Import app state if needed\nimport { appState } from '../../app.js';\n\n// Initialize common UI elements\nexport function initUiElements() {\n  console.log('Initializing UI Elements');\n  \n  // Initialize modal functionality\n  initModals();\n  \n  // Initialize expandable sections\n  initExpandableSections();\n  \n  // Initialize window control buttons\n  initWindowControls();\n}\n\n// Initialize modal dialogs\nfunction initModals() {\n  // Code Preview Modal\n  const viewCodeBtn = document.getElementById('view-code-btn');\n  const viewCodeBtnAdvanced = document.getElementById('view-code-btn-advanced');\n  const codeModal = document.getElementById('code-modal');\n  const closeModalBtn = document.getElementById('close-modal-btn');\n  \n  if (viewCodeBtn && codeModal) {\n    viewCodeBtn.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (viewCodeBtnAdvanced && codeModal) {\n    viewCodeBtnAdvanced.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (closeModalBtn) {\n    closeModalBtn.addEventListener('click', () => {\n      // Hide any open modal\n      const modals = document.querySelectorAll('.modal');\n      modals.forEach(modal => {\n        modal.style.display = 'none';\n      });\n    });\n  }\n  \n  // Close modals when clicking outside content\n  window.addEventListener('click', (e) => {\n    const modals = document.querySelectorAll('.modal');\n    modals.forEach(modal => {\n      if (e.target === modal) {\n        modal.style.display = 'none';\n      }\n    });\n  });\n}\n\n// Update LUT preview in code modal\nexport function updateLUTPreview(fullPreview = false) {\n  const lutPreview = document.getElementById('lut-preview');\n  if (!lutPreview) return;\n  \n  // Get LUT content from generator (to be implemented)\n  let lutContent = \"# LUT Preview will be generated here\";\n  \n  // In the future, we'll call the actual LUT generator:\n  if (window.generateCubeLUT) {\n    lutContent = window.generateCubeLUT();\n  }\n  \n  if (fullPreview) {\n    // Show the full LUT content in the modal\n    lutPreview.textContent = lutContent;\n  } else {\n    // Just show a preview sample\n    lutPreview.textContent = lutContent.slice(0, 500) + '...';\n  }\n}\n\n// Initialize expandable sections\nfunction initExpandableSections() {\n  // Define sections to initialize as expanded or collapsed\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section', expanded: true },\n    { toggle: 'creative-toggle', content: 'creative-section', expanded: false },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section', expanded: false },\n    { toggle: 'curves-toggle', content: 'curves-section', expanded: false }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (toggle && content) {\n      // Set initial state\n      if (section.expanded) {\n        toggle.classList.add('expanded');\n        content.classList.add('expanded');\n      }\n      \n      toggle.addEventListener('click', () => {\n        toggle.classList.toggle('expanded');\n        content.classList.toggle('expanded');\n      });\n    }\n  });\n}\n\n// Initialize window control buttons for Electron\nfunction initWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Create a simple toast notification\nexport function showToast(message, type = 'info', duration = 3000) {\n  // Create toast container if it doesn't exist\n  let toastContainer = document.querySelector('.toast-container');\n  if (!toastContainer) {\n    toastContainer = document.createElement('div');\n    toastContainer.className = 'toast-container';\n    document.body.appendChild(toastContainer);\n  }\n  \n  // Create toast element\n  const toast = document.createElement('div');\n  toast.className = `toast toast-${type}`;\n  toast.textContent = message;\n  \n  // Add to container\n  toastContainer.appendChild(toast);\n  \n  // Trigger animation\n  setTimeout(() => {\n    toast.classList.add('show');\n  }, 10);\n  \n  // Remove after duration\n  setTimeout(() => {\n    toast.classList.remove('show');\n    \n    // Remove from DOM after animation completes\n    setTimeout(() => {\n      toastContainer.removeChild(toast);\n    }, 300);\n  }, duration);\n  \n  return toast;\n}\n\n// Create a confirmation dialog\nexport function showConfirmDialog(message, onConfirm, onCancel) {\n  // Create dialog\n  const dialogOverlay = document.createElement('div');\n  dialogOverlay.className = 'dialog-overlay';\n  \n  const dialogBox = document.createElement('div');\n  dialogBox.className = 'dialog-box';\n  \n  const messageEl = document.createElement('p');\n  messageEl.textContent = message;\n  \n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.className = 'dialog-buttons';\n  \n  const confirmBtn = document.createElement('button');\n  confirmBtn.className = 'primary';\n  confirmBtn.textContent = 'Confirm';\n  \n  const cancelBtn = document.createElement('button');\n  cancelBtn.textContent = 'Cancel';\n  \n  // Add elements to DOM\n  buttonsContainer.appendChild(cancelBtn);\n  buttonsContainer.appendChild(confirmBtn);\n  \n  dialogBox.appendChild(messageEl);\n  dialogBox.appendChild(buttonsContainer);\n  \n  dialogOverlay.appendChild(dialogBox);\n  document.body.appendChild(dialogOverlay);\n  \n  // Add event listeners\n  confirmBtn.addEventListener('click', () => {\n    if (onConfirm) onConfirm();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  cancelBtn.addEventListener('click', () => {\n    if (onCancel) onCancel();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  // Also close on overlay click\n  dialogOverlay.addEventListener('click', (e) => {\n    if (e.target === dialogOverlay) {\n      if (onCancel) onCancel();\n      document.body.removeChild(dialogOverlay);\n    }\n  });\n  \n  return dialogOverlay;\n}\n\n\n\n\n","// services/file-service.js\n// Import app state\nimport { appState } from '../app.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the file service\nexport function initFileService() {\n  console.log('Initializing File Service');\n}\n\n// Open an image file\nexport async function openImageFile() {\n  console.log('Opening image file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const imagePath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp', 'tiff', 'tif'] }]\n      });\n      \n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        return `file://${imagePath}`;\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return await fallbackFileUpload();\n    }\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    return await fallbackFileUpload();\n  }\n  \n  return null;\n}\n\n// Fallback file upload function using HTML input for browser context\nexport function fallbackFileUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve(event.target.result);\n        };\n        \n        reader.readAsDataURL(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}\n\n// Save a LUT file\nexport async function saveLutFile(content, defaultFilename = 'lut.cube') {\n  console.log('Saving LUT file');\n  \n  try {\n    // Format the filename\n    const filename = defaultFilename.endsWith('.cube') ? defaultFilename : `${defaultFilename}.cube`;\n    \n    // If we're in Electron environment\n    if (window.electronAPI && typeof window.electronAPI.saveLut === 'function') {\n      const filePath = await window.electronAPI.saveLut({\n        content,\n        defaultPath: filename\n      });\n      \n      if (filePath) {\n        showToast(`LUT saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([content], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`LUT downloaded as ${filename}`, 'success');\n      return filename;\n    }\n  } catch (error) {\n    console.error('Error saving LUT:', error);\n    showToast('Failed to save LUT file', 'error');\n    return null;\n  }\n}\n\n// Load a LUT file\nexport async function loadLutFile() {\n  console.log('Loading LUT file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const lutPath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'CUBE Files', extensions: ['cube'] }]\n      });\n      \n      if (lutPath) {\n        // In a real implementation, we would read the file content here\n        console.log(\"Selected LUT:\", lutPath);\n        \n        // Placeholder for actual file reading logic\n        // The content would be returned and parsed elsewhere\n        return {\n          path: lutPath,\n          filename: lutPath.split('/').pop(),\n          content: \"# Placeholder for actual LUT content\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return null;\n    }\n  } else {\n    // Browser environment\n    return await fallbackLutUpload();\n  }\n  \n  return null;\n}\n\n// Fallback LUT upload function using HTML input for browser context\nexport function fallbackLutUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.cube';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected LUT file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve({\n            filename: file.name,\n            content: event.target.result\n          });\n        };\n        \n        reader.readAsText(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}","// services/lut-generator.js\n// Import app state and utilities\nimport { appState } from '../app.js';\nimport { applyContrast } from '../components/basic-corrections/basic-corrections.js';\nimport { applyFadedFilm } from '../components/creative/creative-effects.js';\nimport { applyColorWheels } from '../components/color-wheels/color-wheels.js';\nimport { interpolateCurve, isLinearCurve } from '../components/curves/curves-panel.js';\n\n// Initialize the LUT generator service\nexport function initLutGenerator() {\n  console.log('Initializing LUT Generator Service');\n  \n  // Make the generator available globally\n  window.generateCubeLUT = generateCubeLUT;\n}\n\n// Generate a CUBE format LUT based on current parameters\nexport function generateCubeLUT() {\n  const lutParams = appState.currentLutParams;\n  const size = lutParams.size || 32;\n  let content = '';\n  \n  // Header\n  content += `# ${lutParams.title}\\n`;\n  content += '# Generated by LOTS App\\n\\n';\n  content += `LUT_3D_SIZE ${size}\\n`;\n  content += 'DOMAIN_MIN 0.0 0.0 0.0\\n';\n  content += 'DOMAIN_MAX 1.0 1.0 1.0\\n\\n';\n  \n  // Generate the 3D LUT entries\n  const step = 1.0 / (size - 1);\n  \n  for (let b = 0; b < size; b++) {\n    for (let g = 0; g < size; g++) {\n      for (let r = 0; r < size; r++) {\n        // Calculate normalized RGB values (0.0 to 1.0)\n        let redValue = r * step;\n        let greenValue = g * step;\n        let blueValue = b * step;\n        \n        // Apply adjustments based on the current mode\n        if (appState.activeMode === 'basic') {\n          const result = applyBasicLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        } else {\n          const result = applyAdvancedLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        }\n        \n        // Clamp values to valid range\n        redValue = Math.min(1.0, Math.max(0.0, redValue));\n        greenValue = Math.min(1.0, Math.max(0.0, greenValue));\n        blueValue = Math.min(1.0, Math.max(0.0, blueValue));\n        \n        // Add the entry to the LUT\n        content += `${redValue.toFixed(6)} ${greenValue.toFixed(6)} ${blueValue.toFixed(6)}\\n`;\n      }\n    }\n  }\n  \n  return content;\n}\n\n// Apply basic mode adjustments to a single color point\nexport function applyBasicLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams.basic || {};\n  \n  // Apply contrast\n  r = applyContrast(r, params.contrast || 1.0);\n  g = applyContrast(g, params.contrast || 1.0);\n  b = applyContrast(b, params.contrast || 1.0);\n  \n  // Apply color balance\n  r *= params.redBalance || 1.0;\n  g *= params.greenBalance || 1.0;\n  b *= params.blueBalance || 1.0;\n  \n  // Apply shadow/highlight adjustments\n  if (params.shadowsShift && params.highlightsShift) {\n    let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n    let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n    \n    r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n    g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n    b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n  }\n  \n  // Apply saturation\n  if (params.saturation !== undefined && params.saturation !== 1.0) {\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    r = luminance + params.saturation * (r - luminance);\n    g = luminance + params.saturation * (g - luminance);\n    b = luminance + params.saturation * (b - luminance);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply advanced mode adjustments to a single color point\nexport function applyAdvancedLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams;\n  \n  // 1. Apply temperature and tint\n  if (params.lumetri && (params.lumetri.temperature !== 0 || params.lumetri.tint !== 0)) {\n    const tempResult = applyTemperatureAndTint(\n      r, g, b, \n      params.lumetri.temperature / 150, \n      params.lumetri.tint / 150\n    );\n    r = tempResult.r;\n    g = tempResult.g;\n    b = tempResult.b;\n  }\n  \n  // 2. Apply exposure and contrast\n  if (params.lumetri) {\n    // Apply exposure\n    if (params.lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, params.lumetri.exposure);\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (params.lumetri.contrast !== 0) {\n      const contrastValue = 1 + (params.lumetri.contrast / 150 * 1.5);\n      r = applyContrast(r, contrastValue);\n      g = applyContrast(g, contrastValue);\n      b = applyContrast(b, contrastValue);\n    }\n  }\n  \n  // 3. Apply highlights, shadows, whites, blacks adjustments\n  if (params.lumetri) {\n    const toneResult = applyToneAdjustments(\n      r, g, b,\n      params.lumetri.highlights / 150 * 1.5,\n      params.lumetri.shadows / 150 * 1.5,\n      params.lumetri.whites / 150 * 1.5,\n      params.lumetri.blacks / 150 * 1.5\n    );\n    r = toneResult.r;\n    g = toneResult.g;\n    b = toneResult.b;\n  }\n  \n  // 4. Apply color wheels tinting\n  if (params.colorWheels) {\n    const shadowTint = params.colorWheels.shadowTint;\n    const highlightTint = params.colorWheels.highlightTint;\n    const tintBalance = params.colorWheels.tintBalance / 150;\n    \n    if (shadowTint.r !== 128 || shadowTint.g !== 128 || shadowTint.b !== 128 ||\n        highlightTint.r !== 128 || highlightTint.g !== 128 || highlightTint.b !== 128 ||\n        tintBalance !== 0) {\n      \n      const colorWheelResult = applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance);\n      r = colorWheelResult.r;\n      g = colorWheelResult.g;\n      b = colorWheelResult.b;\n    }\n  }\n  \n  // 5. Apply curves\n  if (params.curves) {\n    // Apply RGB curve first\n    const rgbPoints = params.curves.rgb;\n    if (rgbPoints) {\n      r = interpolateCurve(rgbPoints, r);\n      g = interpolateCurve(rgbPoints, g);\n      b = interpolateCurve(rgbPoints, b);\n    }\n    \n    // Apply individual channel curves if not linear\n    if (params.curves.red && !isLinearCurve(params.curves.red)) {\n      r = interpolateCurve(params.curves.red, r);\n    }\n    \n    if (params.curves.green && !isLinearCurve(params.curves.green)) {\n      g = interpolateCurve(params.curves.green, g);\n    }\n    \n    if (params.curves.blue && !isLinearCurve(params.curves.blue)) {\n      b = interpolateCurve(params.curves.blue, b);\n    }\n  }\n  \n  // 6. Apply creative effects (vibrance, saturation, faded film)\n  if (params.creative) {\n    // Apply vibrance\n    if (params.creative.vibrance !== 0) {\n      const vibranceAmount = params.creative.vibrance / 150;\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      const maxChannel = Math.max(r, g, b);\n      const minChannel = Math.min(r, g, b);\n      const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n      const vibranceEffect = vibranceAmount * (1 - saturationLevel);\n      \n      r = luminance + (r - luminance) * (1 + vibranceEffect);\n      g = luminance + (g - luminance) * (1 + vibranceEffect);\n      b = luminance + (b - luminance) * (1 + vibranceEffect);\n    }\n    \n    // Apply faded film effect\n    if (params.creative.fadedFilm > 0) {\n      const fadedResult = applyFadedFilm(r, g, b, params.creative.fadedFilm / 100);\n      r = fadedResult.r;\n      g = fadedResult.g;\n      b = fadedResult.b;\n    }\n  }\n  \n  return { r, g, b };\n}\n\n// Apply temperature and tint adjustments\nexport function applyTemperatureAndTint(r, g, b, temperature, tint) {\n  // Temperature: blue-yellow shift\n  // Positive = cooler (more blue), Negative = warmer (more yellow)\n  const tempFactor = temperature;\n  \n  // Tint: green-magenta shift\n  // Positive = more magenta, Negative = more green\n  const tintFactor = tint;\n  \n  // Apply temperature (blue-yellow balance)\n  if (tempFactor < 0) {\n    // Warmer: boost red/green, reduce blue\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  } else if (tempFactor > 0) {\n    // Cooler: boost blue, reduce red/green\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  }\n  \n  // Apply tint (green-magenta balance)\n  if (tintFactor > 0) {\n    // More magenta: boost red and blue, reduce green\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  } else if (tintFactor < 0) {\n    // More green: boost green, reduce red and blue\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply tone adjustments (highlights, shadows, whites, blacks)\nexport function applyToneAdjustments(r, g, b, highlights, shadows, whites, blacks) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Apply highlights adjustment (affects brighter areas)\n  let highlightEffect = Math.pow(luminance, 2) * highlights;\n  \n  // Apply shadows adjustment (affects darker areas)\n  let shadowEffect = Math.pow(1 - luminance, 2) * shadows;\n  \n  // Apply whites adjustment (affects the brightest areas)\n  let whitesEffect = Math.pow(luminance, 4) * whites;\n  \n  // Apply blacks adjustment (affects the darkest areas)\n  let blacksEffect = Math.pow(1 - luminance, 4) * blacks;\n  \n  // Combine all adjustments\n  const totalEffect = highlightEffect + shadowEffect + whitesEffect + blacksEffect;\n  \n  // Apply the combined effect to RGB channels\n  r += totalEffect;\n  g += totalEffect;\n  b += totalEffect;\n  \n  return { r, g, b };\n}","// services/export-service.js\n// Import app state and services\nimport { appState } from '../app.js';\nimport { saveLutFile } from './file-service.js';\nimport { generateCubeLUT } from './lut-generator.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the export service\nexport function initExportService() {\n  console.log('Initializing Export Service');\n  \n  // Set up export buttons\n  setupExportButtons();\n}\n\n// Set up export button click handlers\nfunction setupExportButtons() {\n  const saveLutBtn = document.getElementById('save-lut-btn');\n  const saveLutBtnAdvanced = document.getElementById('save-lut-btn-advanced');\n  \n  if (saveLutBtn) {\n    saveLutBtn.addEventListener('click', handleExportLut);\n  }\n  \n  if (saveLutBtnAdvanced) {\n    saveLutBtnAdvanced.addEventListener('click', handleExportLut);\n  }\n}\n\n// Handle the LUT export button click\nexport async function handleExportLut() {\n  console.log('Exporting LUT');\n  \n  try {\n    // Generate the LUT content\n    const lutContent = generateCubeLUT();\n    \n    // Format filename from title\n    const defaultFilename = formatFilename(appState.currentLutParams.title);\n    \n    // Save the file\n    const result = await saveLutFile(lutContent, defaultFilename);\n    \n    if (result) {\n      console.log('LUT exported successfully');\n    } else {\n      console.warn('LUT export was cancelled or failed');\n    }\n  } catch (error) {\n    console.error('Error exporting LUT:', error);\n    showToast('Failed to export LUT: ' + error.message, 'error');\n  }\n}\n\n// Format a filename from the LUT title\nexport function formatFilename(title) {\n  if (!title) return 'lut.cube';\n  \n  // Replace spaces with underscores and remove special characters\n  let filename = title.replace(/\\s+/g, '_')\n                      .replace(/[^a-zA-Z0-9_-]/g, '')\n                      .toLowerCase();\n  \n  // Add .cube extension if not present\n  if (!filename.endsWith('.cube')) {\n    filename += '.cube';\n  }\n  \n  return filename;\n}\n\n// Export the current image with adjustments applied\nexport async function exportProcessedImage() {\n  console.log('Exporting processed image');\n  \n  if (!appState.processedImageElement) {\n    showToast('No processed image to export', 'error');\n    return null;\n  }\n  \n  try {\n    // Get the processed image source (already contains the applied adjustments)\n    const imageDataUrl = appState.processedImageElement.src;\n    \n    // In Electron environment, we would save the file using Electron APIs\n    if (window.electronAPI && typeof window.electronAPI.saveImage === 'function') {\n      const defaultName = 'processed_image.jpg';\n      \n      const filePath = await window.electronAPI.saveImage({\n        dataUrl: imageDataUrl,\n        defaultPath: defaultName\n      });\n      \n      if (filePath) {\n        showToast(`Image saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const a = document.createElement('a');\n      a.href = imageDataUrl;\n      a.download = 'processed_image.jpg';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      \n      showToast('Image downloaded', 'success');\n      return 'processed_image.jpg';\n    }\n  } catch (error) {\n    console.error('Error exporting image:', error);\n    showToast('Failed to export image', 'error');\n    return null;\n  }\n}\n\n// Export all settings as a preset file\nexport function exportPreset() {\n  console.log('Exporting preset');\n  \n  try {\n    // Create a preset object with current settings\n    const preset = {\n      name: appState.currentLutParams.title || 'Unnamed Preset',\n      basic: { ...appState.currentLutParams.basic },\n      advanced: {\n        lumetri: appState.currentLutParams.lumetri ? { ...appState.currentLutParams.lumetri } : null,\n        colorWheels: appState.currentLutParams.colorWheels ? { ...appState.currentLutParams.colorWheels } : null,\n        curves: appState.currentLutParams.curves ? { ...appState.currentLutParams.curves } : null\n      },\n      version: '1.0'\n    };\n    \n    // Convert to JSON\n    const presetJson = JSON.stringify(preset, null, 2);\n    \n    // Format filename\n    const defaultFilename = `${formatFilename(preset.name).replace('.cube', '')}.lotspreset`;\n    \n    // Save the file using Electron or browser download\n    if (window.electronAPI && typeof window.electronAPI.savePreset === 'function') {\n      return window.electronAPI.savePreset({\n        content: presetJson,\n        defaultPath: defaultFilename\n      }).then(filePath => {\n        if (filePath) {\n          showToast(`Preset saved to: ${filePath}`, 'success');\n          return filePath;\n        }\n        return null;\n      });\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([presetJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = defaultFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`Preset downloaded as ${defaultFilename}`, 'success');\n      return Promise.resolve(defaultFilename);\n    }\n  } catch (error) {\n    console.error('Error exporting preset:', error);\n    showToast('Failed to export preset', 'error');\n    return Promise.resolve(null);\n  }\n}","// models/image-processor.js\n// Import necessary functions from other modules\nimport { appState } from '../app.js';\nimport { applyBasicCorrections } from '../components/basic-corrections/basic-corrections.js';\nimport { applyCreativeEffects } from '../components/creative/creative-effects.js';\nimport { applyColorWheelAdjustments } from '../components/color-wheels/color-wheels.js';\nimport { applyCurvesToImage } from '../components/curves/curves-panel.js';\n\n// Process an image with current adjustments in basic mode\nexport function processImageBasic(originalImage) {\n  console.log('Processing image with basic adjustments');\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply basic corrections\n    applyBasicCorrections(imageData);\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing image:', error);\n    return null;\n  }\n}\n\n// Process an image with current adjustments in advanced mode\nexport function processImageAdvanced(originalImage) {\n  console.log('Processing image with advanced adjustments');\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply adjustments in sequence\n    \n    // 1. Apply color wheels adjustments\n    applyColorWheelAdjustments(imageData);\n    \n    // 2. Apply creative effects (faded film, vibrance)\n    applyCreativeEffects(imageData);\n    \n    // 3. Apply curves adjustments\n    if (appState.curvesPanel) {\n      applyCurvesToImage(imageData);\n    }\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing advanced image:', error);\n    return null;\n  }\n}\n\n// Process the image based on current app mode\nexport function processImage(originalImage) {\n  if (appState.activeMode === 'basic') {\n    return processImageBasic(originalImage);\n  } else {\n    return processImageAdvanced(originalImage);\n  }\n}\n\n// Apply the current adjustments to the displayed image\nexport function applyAdjustmentsToImage() {\n  const originalImage = appState.originalImageElement;\n  const processedImage = appState.processedImageElement;\n  \n  if (!originalImage || !processedImage) {\n    console.warn('Image elements not available');\n    return;\n  }\n  \n  // Process the image\n  const processedImageUrl = processImage(originalImage);\n  \n  if (processedImageUrl) {\n    // Update the processed image with the new data\n    processedImage.src = processedImageUrl;\n  }\n}\n\n// Export the image processing functions\nexport default {\n  processImageBasic,\n  processImageAdvanced,\n  processImage,\n  applyAdjustmentsToImage\n};","// Import styles\nimport './styles/compare.css';\nimport './styles/base.css';\nimport './styles/layout.css';\nimport './styles/components.css';\nimport './styles/tools.css';\nimport './styles/themes.css';\nimport './styles/animations.css';\n\n// Import components\nimport { initCurvesPanel } from './components/curves/curves-panel.js';\nimport { initBasicCorrections, setupAdvancedControls } from './components/basic-corrections/basic-corrections.js';\nimport { initCreativeEffects } from './components/creative/creative-effects.js';\nimport { initColorWheels } from './components/color-wheels/color-wheels.js';\nimport { initImageComparison } from './components/image-preview/image-comparison.js';\nimport { initPreviewController } from './components/image-preview/preview-controller.js';\nimport { initPresets } from './components/presets/presets.js';\nimport { initUiElements } from './components/common/ui-elements.js';\n\n// Import services\nimport { initFileService } from './services/file-service.js';\nimport { initLutGenerator } from './services/lut-generator.js';\nimport { initExportService } from './services/export-service.js';\n\n// Import image processing utilities\nimport { processImage, applyAdjustmentsToImage } from './models/image-processor.js';\n\n// App state\nlet appState = {\n  activeMode: 'basic', // 'basic' or 'advanced'\n  originalImage: null,\n  processedImage: null,\n  currentLutParams: {\n    // Basic parameters\n    size: 32,\n    title: \"Signature Look\",\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0],\n    \n    // Advanced parameters will be added by the respective modules\n    lumetri: {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    }\n  }\n};\n\n// Initialize the application\nfunction initApp() {\n  console.log('LOTS App initializing...');\n  \n  // Make app state available globally for modules\n  window.appState = appState;\n  \n  // Initialize UI components\n  initUiElements();\n  initBasicCorrections();\n  initCreativeEffects();\n  initColorWheels();\n  initCurvesPanel();\n  initImageComparison();\n  initPreviewController();\n  initPresets();\n  \n  // Initialize services\n  initFileService();\n  initLutGenerator();\n  initExportService();\n  \n  // Set up mode toggle\n  setupModeToggle();\n  \n  // Set up window control buttons\n  setupWindowControls();\n  \n  console.log('LOTS App initialized successfully');\n}\n\n// Set up mode toggle (basic/advanced)\nfunction setupModeToggle() {\n  const modeToggle = document.getElementById('mode-toggle');\n  const basicControls = document.getElementById('basic-controls');\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (modeToggle) {\n    modeToggle.addEventListener('change', function() {\n      const isAdvancedMode = this.checked;\n      appState.activeMode = isAdvancedMode ? 'advanced' : 'basic';\n      \n      if (basicControls && advancedControls) {\n        console.log(`Switching to ${appState.activeMode} mode`);\n        basicControls.style.display = isAdvancedMode ? 'none' : 'block';\n        advancedControls.style.display = isAdvancedMode ? 'block' : 'none';\n        \n        // When switching to advanced mode, ensure all advanced sections are properly initialized\n        if (isAdvancedMode && typeof setupAdvancedControls === 'function') {\n          setupAdvancedControls();\n        }\n        \n        // Apply current image adjustments with the new mode\n        if (appState.originalImage && appState.processedImage) {\n          applyImageAdjustments();\n        }\n      }\n    });\n  }\n}\n\n// Set up window control buttons for Electron\nfunction setupWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Apply adjustments to image based on current mode and parameters\nfunction applyImageAdjustments() {\n  if (!appState.originalImage) return;\n  \n  console.log('Applying image adjustments');\n  \n  // Actually process the image instead of just logging\n  try {\n    // Use the image processor to apply adjustments\n    const processedImageUrl = processImage(appState.originalImageElement);\n    \n    // Update the processed image with the new data\n    if (processedImageUrl && appState.processedImageElement) {\n      appState.processedImageElement.src = processedImageUrl;\n    }\n  } catch (error) {\n    console.error('Error processing image:', error);\n  }\n}\n\n// Apply basic mode adjustments\nfunction applyBasicAdjustments() {\n  console.log('Applying basic adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Apply advanced mode adjustments\nfunction applyAdvancedAdjustments() {\n  console.log('Applying advanced Lumetri-style adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Make certain functions available globally\nwindow.applyImageAdjustments = applyImageAdjustments;\n\n// Initialize the app when the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// Export functions for use in other modules\nexport { \n  appState,\n  applyImageAdjustments,\n  applyBasicAdjustments,\n  applyAdvancedAdjustments\n};","// Import app state\nimport { appState } from '../../app.js';\n\n// Initialize image comparison\nexport function initImageComparison() {\n  console.log('Initializing Image Comparison');\n  // Will implement comparison slider functionality \n}\n\n// Export functions\nexport default {\n  initImageComparison\n};"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","defaultCurveParams","rgb","x","y","red","green","blue","currentChannel","isLinearCurve","points","i","length","expectedY","Math","abs","interpolateCurve","p1","p2","t","CurvesPanel","params","arguments","undefined","_classCallCheck","this","_objectSpread","JSON","parse","stringify","curveCanvas","curveCtx","channelButtons","activePoint","init","bind","drawCurve","handleMouseDown","handleMouseMove","handleMouseUp","resetCurve","console","log","document","getElementById","getContext","setupEvents","updateChannelButtonUI","warn","_this","addEventListener","_loop","channel","btn","resetCurveBtn","classList","add","remove","applyImageAdjustments","_this2","width","height","clearRect","curveColor","fillStyle","fillRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","forEach","point","index","arc","PI","fill","e","rect","getBoundingClientRect","clientX","left","clientY","top","minDistance","Infinity","closestPoint","pointIndex","dx","dy","distance","sqrt","max","min","prevX","nextX","r","g","b","rgbPoints","imageData","data","result","applyCurves","round","curvesPanel","initBasicCorrections","contrastSlider","saturationSlider","redBalanceSlider","greenBalanceSlider","blueBalanceSlider","contrastValue","saturationValue","redBalanceValue","greenBalanceValue","blueBalanceValue","titleInput","lutSizeSelect","appState","currentLutParams","basic","contrast","saturation","redBalance","greenBalance","blueBalance","lumetri","exposure","highlights","shadows","whites","blacks","temperature","tint","setupSlider","basicCorrectionSection","innerHTML","createAdvancedSlider","id","label","step","initialValue","paramName","resetButton","createElement","textContent","className","resetAdvancedControls","appendChild","setupAdvancedControls","title","size","parseInt","container","options","sliderContainer","labelElement","setAttribute","valueDisplay","concat","toFixed","slider","type","parseFloat","querySelectorAll","split","applyBasicCorrections","applyContrast","luminance","shadowsShift","highlightsShift","shadowEffect","pow","highlightEffect","creative","applyVibrance","amount","maxChannel","minChannel","vibranceEffect","applyFadedFilm","fadeAmount","blackShift","setupColorWheel","wheel","canvas","clientWidth","clientHeight","style","background","backgroundImage","indicator","tintValue","colorWheels","centerX","centerY","maxDistance","normalizedR","normalizedG","normalizedB","hue","atan2","cos","sin","setWheelIndicatorPosition","isMouseDown","updateWheelFromEvent","angle","h","s","floor","f","p","q","hsvToRgb","mappedR","mappedG","mappedB","resetColorWheels","shadowTint","highlightTint","tintBalance","tintBalanceSlider","tintBalanceValue","shadowColorWheel","highlightColorWheel","shadowIndicator","querySelector","highlightIndicator","applyColorWheels","shadowInfluence","highlightInfluence","currentSliderPosition","handleImageUpload","window","electronAPI","openFileDialog","properties","filters","name","extensions","then","imagePath","originalImageElement","src","error","fallbackFileUpload","input","accept","files","file","reader","FileReader","onload","event","target","readAsDataURL","click","setViewMode","mode","resetPosition","viewSplitBtn","viewBeforeBtn","viewAfterBtn","originalImageContainer","comparisonSlider","verticalDivider","clipPath","display","builtInPresets","userPresets","updateSlider","sliderId","updateLUTPreview","fullPreview","lutPreview","lutContent","generateCubeLUT","slice","showToast","message","duration","toastContainer","body","toast","setTimeout","removeChild","_regeneratorRuntime","n","a","iterator","c","asyncIterator","u","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","saveLutFile","_x","_saveLutFile","apply","_callee2","content","defaultFilename","filename","filePath","blob","url","_args2","_context2","endsWith","saveLut","defaultPath","Blob","URL","createObjectURL","href","download","revokeObjectURL","t0","_next","_throw","lutParams","redValue","greenValue","blueValue","activeMode","applyBasicLutAdjustments","applyAdvancedLutAdjustments","tempResult","applyTemperatureAndTint","exposureFactor","toneResult","totalEffect","applyToneAdjustments","colorWheelResult","curves","vibrance","vibranceAmount","fadedFilm","fadedResult","handleExportLut","_handleExportLut","_callee","_context","formatFilename","replace","toLowerCase","processImage","originalImage","ctx","naturalWidth","naturalHeight","drawImage","getImageData","putImageData","toDataURL","processImageBasic","applyColorWheelAdjustments","applyCreativeEffects","applyCurvesToImage","processImageAdvanced","processedImage","processedImageUrl","processedImageElement","modeToggle","basicControls","advancedControls","saveLutBtn","saveLutBtnAdvanced","toggle","section","minimizeBtn","maximizeBtn","closeBtn","viewCodeBtn","viewCodeBtnAdvanced","codeModal","closeModalBtn","modal","expanded","windowControl","fadedFilmSlider","vibranceSlider","fadedFilmValue","vibranceValue","initCreativeEffects","initColorWheels","readyState","originalPlaceholder","comparisonContainer","imageUploadBtn","isSliding","startX","startPercent","updateSliderPosition","percent","sliderLeft","preventDefault","deltaPercent","touches","closest","initComparisonSlider","initPreviewController","presetButtons","presetId","advancedParams","preset","activePresetId","_toConsumableArray","advanced","savedPresets","localStorage","getItem","loadUserPresets","initPresets","isAdvancedMode","checked","setupWindowControls"],"sourceRoot":""}