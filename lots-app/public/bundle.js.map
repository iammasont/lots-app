{"version":3,"file":"bundle.js","mappings":";mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,83CCK3E,IAAMI,EAAqB,CAChCC,IAAK,CACH,CAAEC,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,GAAKC,EAAG,IACb,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,EAAGC,EAAG,IAEbC,IAAK,CACH,CAAEF,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,GAAKC,EAAG,IACb,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,EAAGC,EAAG,IAEbE,MAAO,CACL,CAAEH,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,GAAKC,EAAG,IACb,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,EAAGC,EAAG,IAEbG,KAAM,CACJ,CAAEJ,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,GAAKC,EAAG,IACb,CAAED,EAAG,IAAMC,EAAG,KACd,CAAED,EAAG,EAAGC,EAAG,IAEbI,eAAgB,OAIX,SAASC,EAAcC,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAAK,CACtC,IAAME,EAAYH,EAAOC,GAAGR,EAC5B,GAAIW,KAAKC,IAAIL,EAAOC,GAAGP,EAAIS,GAAa,IACtC,OAAO,CAEX,CACA,OAAO,CACT,CAGO,SAASG,EAAiBN,EAAQO,GAEvC,GAAIA,GAAS,EAAG,OAAOP,EAAO,GAAGN,EACjC,GAAIa,GAAS,EAAG,OAAOP,EAAOA,EAAOE,OAAS,GAAGR,EAIjD,IADA,IAAIO,EAAI,EACDA,EAAID,EAAOE,OAAS,GAAKF,EAAOC,EAAI,GAAGR,EAAIc,GAChDN,IAIF,IAAMO,EAAKR,EAAOC,GACZQ,EAAKT,EAAOC,EAAI,GAChBS,GAAKH,EAAQC,EAAGf,IAAMgB,EAAGhB,EAAIe,EAAGf,GAEtC,OAAOe,EAAGd,EAAIgB,GAAKD,EAAGf,EAAIc,EAAGd,EAC/B,CAEA,IACMiB,EAAW,WAuBf,SAtBA,SAAAA,IAAyB,IAAbC,EAAMC,UAAAX,OAAA,QAAAY,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,+FAACE,CAAA,KAAAJ,GAErBK,KAAKJ,OAAMK,EAAAA,EAAA,GACNC,KAAKC,MAAMD,KAAKE,UAAU7B,KAC1BqB,GAILI,KAAKK,YAAc,KACnBL,KAAKM,SAAW,KAChBN,KAAKO,eAAiB,CAAC,EACvBP,KAAKQ,YAAc,KAGnBR,KAAKS,KAAOT,KAAKS,KAAKC,KAAKV,MAC3BA,KAAKW,UAAYX,KAAKW,UAAUD,KAAKV,MACrCA,KAAKY,gBAAkBZ,KAAKY,gBAAgBF,KAAKV,MACjDA,KAAKa,gBAAkBb,KAAKa,gBAAgBH,KAAKV,MACjDA,KAAKc,cAAgBd,KAAKc,cAAcJ,KAAKV,MAC7CA,KAAKe,WAAaf,KAAKe,WAAWL,KAAKV,KACzC,IAEA,EAAApC,IAAA,OAAA2B,MACA,WACEyB,QAAQC,IAAI,6BAGZjB,KAAKK,YAAca,SAASC,eAAe,gBAEtCnB,KAAKK,aAKVL,KAAKM,SAAWN,KAAKK,YAAYe,WAAW,MAG5CpB,KAAKO,eAAiB,CACpB/B,IAAK0C,SAASC,eAAe,aAC7BxC,IAAKuC,SAASC,eAAe,aAC7BvC,MAAOsC,SAASC,eAAe,eAC/BtC,KAAMqC,SAASC,eAAe,eAIhCnB,KAAKqB,cAGLrB,KAAKsB,wBAGLtB,KAAKW,aArBHK,QAAQO,KAAK,yBAsBjB,GAEA,CAAA3D,IAAA,cAAA2B,MACA,WAAc,IAAAiC,EAAA,KAEZ,GAAKxB,KAAKK,YAAV,CAGAL,KAAKK,YAAYoB,iBAAiB,YAAazB,KAAKY,iBACpDM,SAASO,iBAAiB,YAAazB,KAAKa,iBAC5CK,SAASO,iBAAiB,UAAWzB,KAAKc,eAE1C,IAAAY,EAAA,SAAAC,GAEE,IAAMC,EAAMJ,EAAKjB,eAAeoB,GAC5BC,GACFA,EAAIH,iBAAiB,SAAS,WAE5BD,EAAK5B,OAAOd,eAAiB6C,EAG7BH,EAAKF,wBACLE,EAAKb,WACP,GAEJ,EAZA,IAAK,IAAMgB,KAAW3B,KAAKO,eAAcmB,EAAAC,GAezC,IAAME,EAAgBX,SAASC,eAAe,mBAC1CU,GACFA,EAAcJ,iBAAiB,QAASzB,KAAKe,WAzBlB,CA2B/B,GAEA,CAAAnD,IAAA,wBAAA2B,MACA,WACE,IAAK,IAAMoC,KAAW3B,KAAKO,eAAgB,CACzC,IAAMqB,EAAM5B,KAAKO,eAAeoB,GAC5BC,IACED,IAAY3B,KAAKJ,OAAOd,eAC1B8C,EAAIE,UAAUC,IAAI,UAElBH,EAAIE,UAAUE,OAAO,UAG3B,CACF,GAEA,CAAApE,IAAA,aAAA2B,MACA,WACEyB,QAAQC,IAAI,mBAGZjB,KAAKJ,OAAOI,KAAKJ,OAAOd,gBACtBoB,KAAKC,MAAMD,KAAKE,UAAU7B,EAAmByB,KAAKJ,OAAOd,kBAG3DkB,KAAKW,YAIHsB,GAEJ,GAEA,CAAArE,IAAA,YAAA2B,MACA,WAAY,IAAA2C,EAAA,KACV,GAAKlC,KAAKK,aAAgBL,KAAKM,SAA/B,CAKA,IAAM6B,EAAQnC,KAAKK,YAAY8B,MACzBC,EAASpC,KAAKK,YAAY+B,OAGhCpC,KAAKM,SAAS+B,UAAU,EAAG,EAAGF,EAAOC,GAGrC,IAOIE,EAPEtD,EAASgB,KAAKJ,OAAOI,KAAKJ,OAAOd,gBAQvC,OALAkB,KAAKM,SAASiC,UAAY,wBAC1BvC,KAAKM,SAASkC,SAAS,EAAG,EAAGL,EAAOC,GAI5BpC,KAAKJ,OAAOd,gBAClB,IAAK,MACHwD,EAAa,2BACb,MACF,IAAK,QACHA,EAAa,2BACb,MACF,IAAK,OACHA,EAAa,2BACb,MACF,QACEA,EAAa,2BAIjBtC,KAAKM,SAASmC,YAGdzC,KAAKM,SAASoC,OAAO1D,EAAO,GAAGP,EAAI0D,GAAQ,EAAInD,EAAO,GAAGN,GAAK0D,GAG9D,IAAK,IAAInD,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IACjCe,KAAKM,SAASqC,OAAO3D,EAAOC,GAAGR,EAAI0D,GAAQ,EAAInD,EAAOC,GAAGP,GAAK0D,GAIhEpC,KAAKM,SAASsC,YAAcN,EAC5BtC,KAAKM,SAASuC,UAAY,EAC1B7C,KAAKM,SAASwC,SAGd9D,EAAO+D,SAAQ,SAACC,EAAOC,GACrBf,EAAK5B,SAASmC,YACdP,EAAK5B,SAAS4C,IACZF,EAAMvE,EAAI0D,GACT,EAAIa,EAAMtE,GAAK0D,EAChB,EACA,EACU,EAAVhD,KAAK+D,IAIO,IAAVF,GAAeA,IAAUjE,EAAOE,OAAS,EAC3CgD,EAAK5B,SAASiC,UAAY,2BAE1BL,EAAK5B,SAASiC,UAAY,2BAG5BL,EAAK5B,SAAS8C,OACdlB,EAAK5B,SAASsC,YAAc,qBAC5BV,EAAK5B,SAASuC,UAAY,EAC1BX,EAAK5B,SAASwC,QAChB,GArEA,MAFE9B,QAAQO,KAAK,+BAwEjB,GAEA,CAAA3D,IAAA,kBAAA2B,MACA,SAAgB8D,GACd,GAAKrD,KAAKK,YAAV,CAEA,IAAMiD,EAAOtD,KAAKK,YAAYkD,wBACxB9E,GAAK4E,EAAEG,QAAUF,EAAKG,MAAQH,EAAKnB,MACnCzD,EAAI,GAAK2E,EAAEK,QAAUJ,EAAKK,KAAOL,EAAKlB,OAGtCpD,EAASgB,KAAKJ,OAAOI,KAAKJ,OAAOd,gBAGnC8E,EAAcC,IACdC,EAAe,KACfC,GAAc,EAElB/E,EAAO+D,SAAQ,SAACC,EAAOC,GACrB,IAAMe,EAAKhB,EAAMvE,EAAIA,EACfwF,EAAKjB,EAAMtE,EAAIA,EACfwF,EAAW9E,KAAK+E,KAAKH,EAAKA,EAAKC,EAAKA,GAEtCC,EAAWN,IACbA,EAAcM,EACdJ,EAAed,EACfe,EAAad,EAEjB,IAGIW,EAAc,KAEZG,EAAa,GAAKA,EAAa/E,EAAOE,OAAS,IACjDc,KAAKQ,YAAc,CACjBwC,MAAOc,EACPb,MAAOc,GAhCgB,CAoC/B,GAEA,CAAAnG,IAAA,kBAAA2B,MACA,SAAgB8D,GACd,GAAKrD,KAAKQ,aAAgBR,KAAKK,YAA/B,CAEA,IAAMiD,EAAOtD,KAAKK,YAAYkD,wBAC1B9E,GAAK4E,EAAEG,QAAUF,EAAKG,MAAQH,EAAKnB,MACnCzD,EAAI,GAAK2E,EAAEK,QAAUJ,EAAKK,KAAOL,EAAKlB,OAG1C3D,EAAIW,KAAKgF,IAAI,EAAGhF,KAAKiF,IAAI,EAAG5F,IAC5BC,EAAIU,KAAKgF,IAAI,EAAGhF,KAAKiF,IAAI,EAAG3F,IAE5B,IAAMM,EAASgB,KAAKJ,OAAOI,KAAKJ,OAAOd,gBACjCmE,EAAQjD,KAAKQ,YAAYyC,MAGzBqB,EAAQtF,EAAOiE,EAAQ,GAAGxE,EAC1B8F,EAAQvF,EAAOiE,EAAQ,GAAGxE,EAGhCA,EAAIW,KAAKgF,IAAIE,EAAQ,IAAMlF,KAAKiF,IAAIE,EAAQ,IAAM9F,IAGlDO,EAAOiE,GAAOxE,EAAIA,EAClBO,EAAOiE,GAAOvE,EAAIA,EAGlBsB,KAAKW,YAIHsB,GA7BgD,CA+BpD,GAEA,CAAArE,IAAA,gBAAA2B,MACA,WAEES,KAAKQ,YAAc,IACrB,GAEA,CAAA5C,IAAA,cAAA2B,MACA,SAAYiF,EAAGC,EAAGC,GAEhB,IAAMC,EAAY3E,KAAKJ,OAAOpB,IAmB9B,OAjBAgG,EAAIlF,EAAiBqF,EAAWH,GAChCC,EAAInF,EAAiBqF,EAAWF,GAChCC,EAAIpF,EAAiBqF,EAAWD,GAG3B3F,EAAciB,KAAKJ,OAAOjB,OAC7B6F,EAAIlF,EAAiBU,KAAKJ,OAAOjB,IAAK6F,IAGnCzF,EAAciB,KAAKJ,OAAOhB,SAC7B6F,EAAInF,EAAiBU,KAAKJ,OAAOhB,MAAO6F,IAGrC1F,EAAciB,KAAKJ,OAAOf,QAC7B6F,EAAIpF,EAAiBU,KAAKJ,OAAOf,KAAM6F,IAGlC,CAAEF,EAAAA,EAAGC,EAAAA,EAAGC,EAAAA,EACjB,GAEA,CAAA9G,IAAA,qBAAA2B,MACA,SAAmBqF,GAGjB,IAFA,IAAMC,EAAOD,EAAUC,KAEd5F,EAAI,EAAGA,EAAI4F,EAAK3F,OAAQD,GAAK,EAAG,CAEvC,IAAIuF,EAAIK,EAAK5F,GAAK,IACdwF,EAAII,EAAK5F,EAAI,GAAK,IAClByF,EAAIG,EAAK5F,EAAI,GAAK,IAGhB6F,EAAS9E,KAAK+E,YAAYP,EAAGC,EAAGC,GAGtCG,EAAK5F,GAAKG,KAAK4F,MAAiB,IAAXF,EAAON,GAC5BK,EAAK5F,EAAI,GAAKG,KAAK4F,MAAiB,IAAXF,EAAOL,GAChCI,EAAK5F,EAAI,GAAKG,KAAK4F,MAAiB,IAAXF,EAAOJ,EAElC,CAEA,OAAOE,CACT,oFAAC,CAlUc,GAsUbK,EAAc,KC/VlB,SAASC,EAAYC,EAAQC,EAAcC,GACpCF,GAAWC,IAGhBD,EAAO5F,MAAQ+F,EAASC,iBAAiBC,MAAMH,GAC/CD,EAAaK,YAAcH,EAASC,iBAAiBC,MAAMH,GAAWK,QAAQ,GAG9EP,EAAO1D,iBAAiB,SAAS,WAE/B6D,EAASC,iBAAiBC,MAAMH,GAAaM,WAAWR,EAAO5F,OAG/D6F,EAAaK,YAAcH,EAASC,iBAAiBC,MAAMH,GAAWK,QAAQ,GAG9EzD,GACF,IACF,CAmFA,SAAS2D,EAAcrG,EAAOsG,GAC5B,MAAO,IAAOtG,EAAQ,IAAOsG,CAC/B,CCnHA,SAASX,EAAYC,EAAQC,EAAcC,GACpCF,GAAWC,IAGhBD,EAAO5F,MAAQ+F,EAASC,iBAAiBO,SAAST,GAClDD,EAAaK,YAAcH,EAASC,iBAAiBO,SAAST,GAAWK,QAAQ,GAGjFP,EAAO1D,iBAAiB,SAAS,WAE/B6D,EAASC,iBAAiBO,SAAST,GAAaM,WAAWR,EAAO5F,OAGlE6F,EAAaK,YAAcH,EAASC,iBAAiBO,SAAST,GAAWK,QAAQ,GAGjFzD,GACF,IACF,CA0DA,SAAS8D,EAAcvB,EAAGC,EAAGC,EAAGsB,GAE9B,IAAMC,EAAY,MAASzB,EAAI,MAASC,EAAI,MAASC,EAG/CwB,EAAa9G,KAAKgF,IAAII,EAAGC,EAAGC,GAC5ByB,EAAa/G,KAAKiF,IAAIG,EAAGC,EAAGC,GAI5B0B,EAAiBJ,GAAU,GAHM,IAAfE,EAAmB,GAAKA,EAAaC,GAAcD,IAU3E,MAAO,CAAE1B,EAJTA,EAAIyB,GAAazB,EAAIyB,IAAc,EAAIG,GAI3B3B,EAHZA,EAAIwB,GAAaxB,EAAIwB,IAAc,EAAIG,GAGxB1B,EAFfA,EAAIuB,GAAavB,EAAIuB,IAAc,EAAIG,GAGzC,CAGA,SAASC,EAAe7B,EAAGC,EAAGC,EAAGsB,GAE/B,IAAMM,EAAsB,GAATN,EAGnBxB,EAAIA,GAAK,EAAI8B,GAAc,GAAMA,EACjC7B,EAAIA,GAAK,EAAI6B,GAAc,GAAMA,EACjC5B,EAAIA,GAAK,EAAI4B,GAAc,GAAMA,EAGjC,IAAMC,EAAsB,GAATP,EAKnB,MAAO,CAAExB,EAJTA,GAAK+B,EAIO9B,EAHZA,GAAK8B,EAGU7B,EAFfA,GAAK6B,EAGP,CCzFA,SAASC,EAAgBC,EAAOpB,GAC9B,GAAKoB,EAAL,CAGAA,EAAMC,UAAY,GAGlB,IAAMC,EAASzF,SAAS0F,cAAc,UACtCD,EAAOxE,MAAQsE,EAAMI,aAAe,GACpCF,EAAOvE,OAASqE,EAAMK,cAAgB,GACtCL,EAAMM,YAAYJ,GAGlBF,EAAMO,MAAMC,WAAa,8DACzBR,EAAMO,MAAME,gBAAkB,uIAG9B,IAAMC,EAAYjG,SAAS0F,cAAc,OACzCO,EAAUC,UAAY,kBACtBX,EAAMM,YAAYI,GAGlB,IAAME,EAAY/B,EAASC,iBAAiB+B,YAAYjC,GAGlDkC,EAAUd,EAAMI,YAAc,EAC9BW,EAAUf,EAAMK,aAAe,EAC/BW,EAAcrI,KAAKiF,IAAIkD,EAASC,GAAW,EAI3CE,GAAeL,EAAU7C,EAAI,KAAO,IACpCmD,GAAeN,EAAU5C,EAAI,KAAO,IACpCmD,GAAeP,EAAU3C,EAAI,KAAO,IAGtCmD,EAAazI,KAAK+E,KAAKuD,EAAYA,EAAcC,EAAYA,EAAcC,EAAYA,GAIvFE,EAAM,GAHVD,EAAazI,KAAKiF,IAAI,EAAGwD,IAIR,IAEfC,EAAM1I,KAAK2I,MAAMJ,EAAaD,GAC1BE,EAAcxI,KAAKgF,IAAIsD,EAAaC,KACtCG,EAAM1I,KAAK+D,GAAK/D,KAAK2I,MAAMH,GAAcF,IAGvCI,EAAM,IAAGA,GAAO,EAAI1I,KAAK+D,KAI/B,IAAM1E,EAAIW,KAAK4I,IAAIF,GAAOD,EAAaJ,EACjC/I,EAAIU,KAAK6I,IAAIH,GAAOD,EAAaJ,EAGvCS,EAA0BzB,EAAOU,EAAW1I,EAAGC,GAG/C,IAAIyJ,GAAc,EAGlB1B,EAAMhF,iBAAiB,aAAa,SAAC4B,GACnC8E,GAAc,EACdC,EAAqB/E,EACvB,IAEAnC,SAASO,iBAAiB,aAAa,SAAC4B,GACjC8E,GACLC,EAAqB/E,EACvB,IAEAnC,SAASO,iBAAiB,WAAW,WACnC0G,GAAc,CAChB,IAEA1B,EAAMhF,iBAAiB,QAAS2G,EA3Ed,CA6ElB,SAASA,EAAqB/E,GAC5B,IAAMC,EAAOmD,EAAMlD,wBACbgE,EAAUjE,EAAKnB,MAAQ,EACvBqF,EAAUlE,EAAKlB,OAAS,EAGxB3D,EAAI4E,EAAEG,QAAUF,EAAKG,KAAO8D,EAC5B7I,EAAI2E,EAAEK,QAAUJ,EAAKK,IAAM6D,EAG3BtD,EAAW9E,KAAK+E,KAAK1F,EAAIA,EAAIC,EAAIA,GACjC+I,EAAcrI,KAAKiF,IAAIkD,EAASC,GAAW,EAGjD,GAAItD,GAAYuD,EAAa,CAE3BS,EAA0BzB,EAAOU,EAAW1I,EAAGC,GAG/C,IAAI2J,EAAQjJ,KAAK2I,MAAMrJ,EAAGD,GACtB4J,EAAQ,IAAGA,GAAS,EAAIjJ,KAAK+D,IAGjC,IAIM0E,EAJqB3D,EAAWuD,EAKhCjJ,EA4EZ,SAAkB8J,EAAGC,GACnB,IAAI/D,EAAGC,EAAGC,EAEJzF,EAAIG,KAAKoJ,MAAU,EAAJF,GACfG,EAAQ,EAAJH,EAAQrJ,EACZyJ,EAjFoC,GAiF3B,EAAIH,GACbI,EAlFoC,GAkF3B,EAAIF,EAAIF,GACjB7I,EAnFoC,GAmF3B,GAAK,EAAI+I,GAAKF,GAE7B,OAAQtJ,EAAI,GACV,KAAK,EAAGuF,EAtFgC,EAsFzBC,EAAI/E,EAAGgF,EAAIgE,EAAG,MAC7B,KAAK,EAAGlE,EAAImE,EAAGlE,EAvFyB,EAuFlBC,EAAIgE,EAAG,MAC7B,KAAK,EAAGlE,EAAIkE,EAAGjE,EAxFyB,EAwFlBC,EAAIhF,EAAG,MAC7B,KAAK,EAAG8E,EAAIkE,EAAGjE,EAAIkE,EAAGjE,EAzFkB,EAyFX,MAC7B,KAAK,EAAGF,EAAI9E,EAAG+E,EAAIiE,EAAGhE,EA1FkB,EA0FX,MAC7B,KAAK,EAAGF,EA3FgC,EA2FzBC,EAAIiE,EAAGhE,EAAIiE,EAG5B,MAAO,CACLnE,EAAGpF,KAAK4F,MAAU,IAAJR,GACdC,EAAGrF,KAAK4F,MAAU,IAAJP,GACdC,EAAGtF,KAAK4F,MAAU,IAAJN,GAElB,CAnGkBkE,CAFAP,GAAS,EAAIjJ,KAAK+D,IAEJ0E,GAIpBgB,EAAUzJ,KAAK4F,MAAM,KAAOxG,EAAIgG,EAAI,KAAOqD,GAC3CiB,EAAU1J,KAAK4F,MAAM,KAAOxG,EAAIiG,EAAI,KAAOoD,GAC3CkB,EAAU3J,KAAK4F,MAAM,KAAOxG,EAAIkG,EAAI,KAAOmD,GAGjDvC,EAASC,iBAAiB+B,YAAYjC,GAAa,CAAEb,EAAGqE,EAASpE,EAAGqE,EAASpE,EAAGqE,GAGhF9G,GACF,CACF,CACF,CAGA,SAAS+G,IAEP1D,EAASC,iBAAiB+B,YAAY2B,WAAa,CAAEzE,EAAG,IAAKC,EAAG,IAAKC,EAAG,KACxEY,EAASC,iBAAiB+B,YAAY4B,cAAgB,CAAE1E,EAAG,IAAKC,EAAG,IAAKC,EAAG,KAC3EY,EAASC,iBAAiB+B,YAAY6B,YAAc,EAGpD,IAAMC,EAAoBlI,SAASC,eAAe,gBAC5CkI,EAAmBnI,SAASC,eAAe,sBAE7CiI,IAAmBA,EAAkB7J,MAAQ,GAC7C8J,IAAkBA,EAAiB5D,YAAc,OAGrD,IAAM6D,EAAmBpI,SAASC,eAAe,sBAC3CoI,EAAsBrI,SAASC,eAAe,yBAEpD,GAAImI,EAAkB,CACpB,IAAME,EAAkBF,EAAiBG,cAAc,oBACnDD,GACFtB,EAA0BoB,EAAkBE,EAAiB,EAAG,EAEpE,CAEA,GAAID,EAAqB,CACvB,IAAMG,EAAqBH,EAAoBE,cAAc,oBACzDC,GACFxB,EAA0BqB,EAAqBG,EAAoB,EAAG,EAE1E,CAGAzH,GACF,CAgBA,SAASiG,EAA0BzB,EAAOU,EAAW1I,EAAGC,GACtD,IAAM6I,EAAUd,EAAMI,YAAc,EAC9BW,EAAUf,EAAMK,aAAe,EAErCK,EAAUH,MAAMvD,KAAO,GAAHkG,OAAMpC,EAAU9I,EAAC,MACrC0I,EAAUH,MAAMrD,IAAM,GAAHgG,OAAMnC,EAAU9I,EAAC,KACtC,CAqDA,SAASkL,EAAiBpF,EAAGC,EAAGC,EAAGuE,EAAYC,EAAeC,GAE5D,IAAMlD,EAAY,MAASzB,EAAI,MAASC,EAAI,MAASC,EAGjDmF,EAAkBzK,KAAK0K,IAAI,EAAI7D,EAAW,GAC1C8D,EAAqB3K,KAAK0K,IAAI7D,EAAW,GAiC7C,OA9BIkD,EAAc,GAEhBU,GAAoB,EAAIV,EACxBY,EAAqBA,GAAsB,EAAIZ,GAAeA,GACrDA,EAAc,IAEvBY,GAAuB,EAAIZ,EAC3BU,EAAkBA,GAAmB,EAAIV,GAAeA,GAc1D3E,IAViByE,EAAWzE,EAAI,KAAO,IAUxBqF,EAAkB,GACjCpF,IAViBwE,EAAWxE,EAAI,KAAO,IAUxBoF,EAAkB,GACjCnF,IAViBuE,EAAWvE,EAAI,KAAO,IAUxBmF,EAAkB,GAO1B,CAAErF,EAJTA,IAVoB0E,EAAc1E,EAAI,KAAO,IAU3BuF,EAAqB,GAI3BtF,EAHZA,IAVoByE,EAAczE,EAAI,KAAO,IAU3BsF,EAAqB,GAGxBrF,EAFfA,IAVoBwE,EAAcxE,EAAI,KAAO,IAU3BqF,EAAqB,GAGzC,CCpUA,IAAIC,EAAwB,GAyE5B,SAASC,IACPjJ,QAAQC,IAAI,+BAGRiJ,OAAOC,aAA4D,mBAAtCD,OAAOC,YAAYC,eAClDF,OAAOC,YAAYC,eAAe,CAChCC,WAAY,CAAC,YACbC,QAAS,CAAC,CAAEC,KAAM,SAAUC,WAAY,CAAC,MAAO,OAAQ,MAAO,WAC9DC,MAAK,SAAAC,GACFA,IACF1J,QAAQC,IAAI,kBAAmByJ,GAC/BpF,EAASqF,qBAAqBC,IAAM,UAAHjB,OAAae,GAElD,IAAE,OAAO,SAAAG,GACP7J,QAAQ6J,MAAM,iCAAkCA,GAChDC,GACF,KAGA9J,QAAQC,IAAI,4BACZ6J,IAEJ,CAGA,SAASA,IACP,IAAMC,EAAQ7J,SAAS0F,cAAc,SACrCmE,EAAMC,KAAO,OACbD,EAAME,OAAS,UAEfF,EAAMtJ,iBAAiB,UAAU,SAAS4B,GACxC,GAAIrD,KAAKkL,OAASlL,KAAKkL,MAAM,GAAI,CAC/B,IAAMC,EAAOnL,KAAKkL,MAAM,GACxBlK,QAAQC,IAAI,iBAAkBkK,EAAKZ,MAEnC,IAAMa,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAASC,GACvBjG,EAASqF,qBAAqBC,IAAMW,EAAMC,OAAO1G,MACnD,EAEAsG,EAAOK,cAAcN,EACvB,CACF,IAEAJ,EAAMW,OACR,CAoGA,SAASC,EAAYC,GAA4B,IAAtBC,IAAahM,UAAAX,OAAA,QAAAY,IAAAD,UAAA,KAAAA,UAAA,GAChCiM,EAAe5K,SAASC,eAAe,cACvC4K,EAAgB7K,SAASC,eAAe,eACxC6K,EAAe9K,SAASC,eAAe,cACvC8K,EAAyB/K,SAASC,eAAe,4BACjD+K,EAAmBhL,SAASC,eAAe,qBAC3CgL,EAAkBjL,SAASC,eAAe,oBAOhD,OAJA2K,EAAahK,UAAUE,OAAO,UAC9B+J,EAAcjK,UAAUE,OAAO,UAC/BgK,EAAalK,UAAUE,OAAO,UAEtB4J,GACN,IAAK,QACHE,EAAahK,UAAUC,IAAI,UAGvB8J,IACF7B,EAAwB,IAI1BiC,EAAuBjF,MAAMoF,SAAW,WAAHzC,OAAc,IAAMK,EAAqB,UAC9EmC,EAAgBnF,MAAMvD,KAAO,GAAHkG,OAAMK,EAAqB,KACrDkC,EAAiBlF,MAAMvD,KAAO,GAAHkG,OAAMK,EAAqB,KAGtDkC,EAAiBlF,MAAMqF,QAAU,QACjCJ,EAAuBjF,MAAMqF,QAAU,QACvCF,EAAgBnF,MAAMqF,QAAU,QAChC,MAEF,IAAK,SACHN,EAAcjK,UAAUC,IAAI,UAG5BkK,EAAuBjF,MAAMoF,SAAW,iBAGxCF,EAAiBlF,MAAMqF,QAAU,OACjCF,EAAgBnF,MAAMqF,QAAU,OAChCJ,EAAuBjF,MAAMqF,QAAU,QACvC,MAEF,IAAK,QACHL,EAAalK,UAAUC,IAAI,UAG3BkK,EAAuBjF,MAAMqF,QAAU,OAGvCH,EAAiBlF,MAAMqF,QAAU,OACjCF,EAAgBnF,MAAMqF,QAAU,OAGtC,+tBClRA,IAAMC,EAAiB,CACrB,OAAU,CACRzG,SAAU,IACVgC,WAAY,KACZ0E,WAAY,KACZC,aAAc,IACdC,YAAa,IACbC,aAAc,CAAC,IAAM,GAAM,KAC3BC,gBAAiB,CAAC,IAAM,IAAM,IAEhC,KAAQ,CACN9G,SAAU,IACVgC,WAAY,GACZ0E,WAAY,KACZC,aAAc,IACdC,YAAa,IACbC,aAAc,CAAC,IAAM,KAAO,KAC5BC,gBAAiB,CAAC,IAAM,GAAM,MAEhC,KAAQ,CACN9G,SAAU,IACVgC,WAAY,IACZ0E,WAAY,GACZC,aAAc,EACdC,YAAa,IACbC,aAAc,EAAE,IAAM,EAAK,KAC3BC,gBAAiB,CAAC,EAAK,EAAK,MAE9B,GAAM,CACJ9G,SAAU,IACVgC,WAAY,EACZ0E,WAAY,IACZC,aAAc,IACdC,YAAa,IACbC,aAAc,EAAE,KAAO,KAAO,KAC9BC,gBAAiB,CAAC,IAAM,IAAM,MAEhC,KAAQ,CACN9G,SAAU,GACVgC,WAAY,GACZ0E,WAAY,IACZC,aAAc,KACdC,YAAa,GACbC,aAAc,CAAC,GAAK,IAAM,GAC1BC,gBAAiB,EAAE,KAAO,IAAM,OAKhCC,EAAc,CAAC,EAwGnB,SAASC,EAAaC,EAAUvN,GAC9B,IAAM4F,EAASjE,SAASC,eAAe2L,GACjC1H,EAAelE,SAASC,eAAe,GAADwI,OAAImD,EAAQ,WAEpD3H,IACFA,EAAO5F,MAAQA,GAGb6F,IACFA,EAAaK,YAAclG,EAAMmG,QAAQ,GAE7C,CCtGO,SAASqH,IAAsC,IAArBC,EAAWnN,UAAAX,OAAA,QAAAY,IAAAD,UAAA,IAAAA,UAAA,GACpCoN,EAAa/L,SAASC,eAAe,eAC3C,GAAK8L,EAAL,CAGA,IAAIC,EAAa,uCAGbhD,OAAOiD,kBACTD,EAAahD,OAAOiD,mBAKpBF,EAAWxH,YAFTuH,EAEuBE,EAGAA,EAAWE,MAAM,EAAG,KAAO,KAf/B,CAiBzB,CA+DO,SAASC,EAAUC,GAAyC,IAAhCtC,EAAInL,UAAAX,OAAA,QAAAY,IAAAD,UAAA,GAAAA,UAAA,GAAG,OAAQ0N,EAAQ1N,UAAAX,OAAA,QAAAY,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAEvD2N,EAAiBtM,SAASuI,cAAc,oBACvC+D,KACHA,EAAiBtM,SAAS0F,cAAc,QACzBQ,UAAY,kBAC3BlG,SAASuM,KAAK1G,YAAYyG,IAI5B,IAAME,EAAQxM,SAAS0F,cAAc,OAsBrC,OArBA8G,EAAMtG,UAAY,eAAHuC,OAAkBqB,GACjC0C,EAAMjI,YAAc6H,EAGpBE,EAAezG,YAAY2G,GAG3BC,YAAW,WACTD,EAAM5L,UAAUC,IAAI,OACtB,GAAG,IAGH4L,YAAW,WACTD,EAAM5L,UAAUE,OAAO,QAGvB2L,YAAW,WACTH,EAAeI,YAAYF,EAC7B,GAAG,IACL,GAAGH,GAEIG,CACT,oPCpLAG,EAAA,kBAAAxK,CAAA,MAAA3D,EAAA2D,EAAA,GAAAmB,EAAA1G,OAAAM,UAAA0P,EAAAtJ,EAAAnG,eAAAR,EAAAC,OAAAC,gBAAA,SAAA2B,EAAA2D,EAAAmB,GAAA9E,EAAA2D,GAAAmB,EAAAjF,KAAA,EAAAN,EAAA,mBAAA8O,OAAAA,OAAA,GAAAC,EAAA/O,EAAAgP,UAAA,aAAAC,EAAAjP,EAAAkP,eAAA,kBAAAC,EAAAnP,EAAAoP,aAAA,yBAAAC,EAAA5O,EAAA2D,EAAAmB,GAAA,OAAA1G,OAAAC,eAAA2B,EAAA2D,EAAA,CAAA9D,MAAAiF,EAAAxG,YAAA,EAAAuQ,cAAA,EAAAC,UAAA,IAAA9O,EAAA2D,EAAA,KAAAiL,EAAA,aAAA5O,GAAA4O,EAAA,SAAA5O,EAAA2D,EAAAmB,GAAA,OAAA9E,EAAA2D,GAAAmB,CAAA,WAAAiK,EAAA/O,EAAA2D,EAAAmB,EAAAsJ,GAAA,IAAA7O,EAAAoE,GAAAA,EAAAjF,qBAAAsQ,EAAArL,EAAAqL,EAAAV,EAAAlQ,OAAA6Q,OAAA1P,EAAAb,WAAA8P,EAAA,IAAAU,EAAAd,GAAA,WAAAjQ,EAAAmQ,EAAA,WAAAzO,MAAAsP,EAAAnP,EAAA8E,EAAA0J,KAAAF,CAAA,UAAAc,EAAApP,EAAA2D,EAAAmB,GAAA,WAAAwG,KAAA,SAAA+D,IAAArP,EAAApB,KAAA+E,EAAAmB,GAAA,OAAA9E,GAAA,OAAAsL,KAAA,QAAA+D,IAAArP,EAAA,EAAA2D,EAAAoL,KAAAA,EAAA,IAAAnG,EAAA,iBAAA0G,EAAA,iBAAAvG,EAAA,YAAAF,EAAA,YAAA7J,EAAA,YAAAgQ,IAAA,UAAAO,IAAA,UAAAC,IAAA,KAAAxG,EAAA,GAAA4F,EAAA5F,EAAAsF,GAAA,8BAAAmB,EAAArR,OAAAsR,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA7K,GAAAsJ,EAAAxP,KAAA+Q,EAAArB,KAAAtF,EAAA2G,GAAA,IAAA5K,EAAAyK,EAAA9Q,UAAAsQ,EAAAtQ,UAAAN,OAAA6Q,OAAAjG,GAAA,SAAA6G,EAAA7P,GAAA,0BAAAqD,SAAA,SAAAM,GAAAiL,EAAA5O,EAAA2D,GAAA,SAAA3D,GAAA,YAAA8P,QAAAnM,EAAA3D,EAAA,gBAAA+P,EAAA/P,EAAA2D,GAAA,SAAAqM,EAAAlL,EAAA3G,EAAAoB,EAAA+O,GAAA,IAAAE,EAAAY,EAAApP,EAAA8E,GAAA9E,EAAA7B,GAAA,aAAAqQ,EAAAlD,KAAA,KAAAoD,EAAAF,EAAAa,IAAAzG,EAAA8F,EAAA7O,MAAA,OAAA+I,GAAA,UAAAqH,EAAArH,IAAAwF,EAAAxP,KAAAgK,EAAA,WAAAjF,EAAAuM,QAAAtH,EAAAuH,SAAApF,MAAA,SAAA/K,GAAAgQ,EAAA,OAAAhQ,EAAAT,EAAA+O,EAAA,aAAAtO,GAAAgQ,EAAA,QAAAhQ,EAAAT,EAAA+O,EAAA,IAAA3K,EAAAuM,QAAAtH,GAAAmC,MAAA,SAAA/K,GAAA0O,EAAA7O,MAAAG,EAAAT,EAAAmP,EAAA,aAAA1O,GAAA,OAAAgQ,EAAA,QAAAhQ,EAAAT,EAAA+O,EAAA,IAAAA,EAAAE,EAAAa,IAAA,KAAAvK,EAAA3G,EAAA,gBAAA0B,MAAA,SAAAG,EAAAoO,GAAA,SAAAgC,IAAA,WAAAzM,GAAA,SAAAA,EAAAmB,GAAAkL,EAAAhQ,EAAAoO,EAAAzK,EAAAmB,EAAA,WAAAA,EAAAA,EAAAA,EAAAiG,KAAAqF,EAAAA,GAAAA,GAAA,aAAAjB,EAAAxL,EAAAmB,EAAAsJ,GAAA,IAAAjQ,EAAAyK,EAAA,gBAAArJ,EAAA+O,GAAA,GAAAnQ,IAAA4K,EAAA,MAAAsH,MAAA,mCAAAlS,IAAA0K,EAAA,cAAAtJ,EAAA,MAAA+O,EAAA,OAAAzO,MAAAG,EAAAsQ,MAAA,OAAAlC,EAAAmC,OAAAhR,EAAA6O,EAAAiB,IAAAf,IAAA,KAAAE,EAAAJ,EAAAoC,SAAA,GAAAhC,EAAA,KAAAE,EAAA+B,EAAAjC,EAAAJ,GAAA,GAAAM,EAAA,IAAAA,IAAA1P,EAAA,gBAAA0P,CAAA,cAAAN,EAAAmC,OAAAnC,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAiB,SAAA,aAAAjB,EAAAmC,OAAA,IAAApS,IAAAyK,EAAA,MAAAzK,EAAA0K,EAAAuF,EAAAiB,IAAAjB,EAAAwC,kBAAAxC,EAAAiB,IAAA,gBAAAjB,EAAAmC,QAAAnC,EAAAyC,OAAA,SAAAzC,EAAAiB,KAAAlR,EAAA4K,EAAA,IAAAC,EAAAoG,EAAAzL,EAAAmB,EAAAsJ,GAAA,cAAApF,EAAAsC,KAAA,IAAAnN,EAAAiQ,EAAAkC,KAAAzH,EAAAyG,EAAAtG,EAAAqG,MAAArQ,EAAA,gBAAAa,MAAAmJ,EAAAqG,IAAAiB,KAAAlC,EAAAkC,KAAA,WAAAtH,EAAAsC,OAAAnN,EAAA0K,EAAAuF,EAAAmC,OAAA,QAAAnC,EAAAiB,IAAArG,EAAAqG,IAAA,YAAAoB,EAAA9M,EAAAmB,GAAA,IAAAsJ,EAAAtJ,EAAAyL,OAAApS,EAAAwF,EAAA4K,SAAAH,GAAA,GAAAjQ,IAAA6B,EAAA,OAAA8E,EAAA0L,SAAA,eAAApC,GAAAzK,EAAA4K,SAAA,SAAAzJ,EAAAyL,OAAA,SAAAzL,EAAAuK,IAAArP,EAAAyQ,EAAA9M,EAAAmB,GAAA,UAAAA,EAAAyL,SAAA,WAAAnC,IAAAtJ,EAAAyL,OAAA,QAAAzL,EAAAuK,IAAA,IAAAyB,UAAA,oCAAA1C,EAAA,aAAApP,EAAA,IAAAO,EAAA6P,EAAAjR,EAAAwF,EAAA4K,SAAAzJ,EAAAuK,KAAA,aAAA9P,EAAA+L,KAAA,OAAAxG,EAAAyL,OAAA,QAAAzL,EAAAuK,IAAA9P,EAAA8P,IAAAvK,EAAA0L,SAAA,KAAAxR,EAAA,IAAAsP,EAAA/O,EAAA8P,IAAA,OAAAf,EAAAA,EAAAgC,MAAAxL,EAAAnB,EAAAoN,YAAAzC,EAAAzO,MAAAiF,EAAAkM,KAAArN,EAAAsN,QAAA,WAAAnM,EAAAyL,SAAAzL,EAAAyL,OAAA,OAAAzL,EAAAuK,IAAArP,GAAA8E,EAAA0L,SAAA,KAAAxR,GAAAsP,GAAAxJ,EAAAyL,OAAA,QAAAzL,EAAAuK,IAAA,IAAAyB,UAAA,oCAAAhM,EAAA0L,SAAA,KAAAxR,EAAA,UAAAkS,EAAAlR,GAAA,IAAA2D,EAAA,CAAAwN,OAAAnR,EAAA,SAAAA,IAAA2D,EAAAyN,SAAApR,EAAA,SAAAA,IAAA2D,EAAA0N,WAAArR,EAAA,GAAA2D,EAAA2N,SAAAtR,EAAA,SAAAuR,WAAAC,KAAA7N,EAAA,UAAA8N,EAAAzR,GAAA,IAAA2D,EAAA3D,EAAA0R,YAAA,GAAA/N,EAAA2H,KAAA,gBAAA3H,EAAA0L,IAAArP,EAAA0R,WAAA/N,CAAA,UAAAuL,EAAAlP,GAAA,KAAAuR,WAAA,EAAAJ,OAAA,SAAAnR,EAAAqD,QAAA6N,EAAA,WAAAS,OAAA,YAAA/B,EAAAjM,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmB,EAAAnB,EAAA2K,GAAA,GAAAxJ,EAAA,OAAAA,EAAAlG,KAAA+E,GAAA,sBAAAA,EAAAqN,KAAA,OAAArN,EAAA,IAAAiO,MAAAjO,EAAAnE,QAAA,KAAArB,GAAA,EAAAoB,EAAA,SAAAyR,IAAA,OAAA7S,EAAAwF,EAAAnE,QAAA,GAAA4O,EAAAxP,KAAA+E,EAAAxF,GAAA,OAAA6S,EAAAnR,MAAA8D,EAAAxF,GAAA6S,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAnR,MAAAG,EAAAgR,EAAAV,MAAA,EAAAU,CAAA,SAAAzR,EAAAyR,KAAAzR,CAAA,YAAAuR,UAAAb,EAAAtM,GAAA,2BAAA4L,EAAA7Q,UAAA8Q,EAAArR,EAAA4G,EAAA,eAAAlF,MAAA2P,EAAAX,cAAA,IAAA1Q,EAAAqR,EAAA,eAAA3P,MAAA0P,EAAAV,cAAA,IAAAU,EAAAsC,YAAAjD,EAAAY,EAAAd,EAAA,qBAAA/K,EAAAmO,oBAAA,SAAA9R,GAAA,IAAA2D,EAAA,mBAAA3D,GAAAA,EAAA+R,YAAA,QAAApO,IAAAA,IAAA4L,GAAA,uBAAA5L,EAAAkO,aAAAlO,EAAAkH,MAAA,EAAAlH,EAAAqO,KAAA,SAAAhS,GAAA,OAAA5B,OAAA6T,eAAA7T,OAAA6T,eAAAjS,EAAAwP,IAAAxP,EAAAkS,UAAA1C,EAAAZ,EAAA5O,EAAA0O,EAAA,sBAAA1O,EAAAtB,UAAAN,OAAA6Q,OAAAlK,GAAA/E,CAAA,EAAA2D,EAAAwO,MAAA,SAAAnS,GAAA,OAAAmQ,QAAAnQ,EAAA,EAAA6P,EAAAE,EAAArR,WAAAkQ,EAAAmB,EAAArR,UAAA8P,GAAA,0BAAA7K,EAAAoM,cAAAA,EAAApM,EAAAyO,MAAA,SAAApS,EAAA8E,EAAAsJ,EAAAjQ,EAAAoB,QAAA,IAAAA,IAAAA,EAAA8S,SAAA,IAAA/D,EAAA,IAAAyB,EAAAhB,EAAA/O,EAAA8E,EAAAsJ,EAAAjQ,GAAAoB,GAAA,OAAAoE,EAAAmO,oBAAAhN,GAAAwJ,EAAAA,EAAA0C,OAAAjG,MAAA,SAAA/K,GAAA,OAAAA,EAAAsQ,KAAAtQ,EAAAH,MAAAyO,EAAA0C,MAAA,KAAAnB,EAAA9K,GAAA6J,EAAA7J,EAAA2J,EAAA,aAAAE,EAAA7J,EAAAuJ,GAAA,0BAAAM,EAAA7J,EAAA,qDAAApB,EAAA2O,KAAA,SAAAtS,GAAA,IAAA2D,EAAAvF,OAAA4B,GAAA8E,EAAA,WAAAsJ,KAAAzK,EAAAmB,EAAA0M,KAAApD,GAAA,OAAAtJ,EAAAyN,UAAA,SAAAvB,IAAA,KAAAlM,EAAAtF,QAAA,KAAAQ,EAAA8E,EAAA0N,MAAA,GAAAxS,KAAA2D,EAAA,OAAAqN,EAAAnR,MAAAG,EAAAgR,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAArN,EAAAiM,OAAAA,EAAAV,EAAAxQ,UAAA,CAAAqT,YAAA7C,EAAAyC,MAAA,SAAAhO,GAAA,QAAA8O,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAA3Q,EAAA,KAAAsQ,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAlB,IAAArP,EAAA,KAAAuR,WAAAlO,QAAAoO,IAAA9N,EAAA,QAAAmB,KAAA,WAAAA,EAAA4N,OAAA,IAAAtE,EAAAxP,KAAA,KAAAkG,KAAA8M,OAAA9M,EAAA4I,MAAA,WAAA5I,GAAA9E,EAAA,EAAA2S,KAAA,gBAAArC,MAAA,MAAAtQ,EAAA,KAAAuR,WAAA,GAAAG,WAAA,aAAA1R,EAAAsL,KAAA,MAAAtL,EAAAqP,IAAA,YAAAuD,IAAA,EAAAhC,kBAAA,SAAAjN,GAAA,QAAA2M,KAAA,MAAA3M,EAAA,IAAAmB,EAAA,cAAA+N,EAAAzE,EAAAjQ,GAAA,OAAAmQ,EAAAhD,KAAA,QAAAgD,EAAAe,IAAA1L,EAAAmB,EAAAkM,KAAA5C,EAAAjQ,IAAA2G,EAAAyL,OAAA,OAAAzL,EAAAuK,IAAArP,KAAA7B,CAAA,SAAAA,EAAA,KAAAoT,WAAA/R,OAAA,EAAArB,GAAA,IAAAA,EAAA,KAAAoB,EAAA,KAAAgS,WAAApT,GAAAmQ,EAAA/O,EAAAmS,WAAA,YAAAnS,EAAA4R,OAAA,OAAA0B,EAAA,UAAAtT,EAAA4R,QAAA,KAAAsB,KAAA,KAAAjE,EAAAJ,EAAAxP,KAAAW,EAAA,YAAAmP,EAAAN,EAAAxP,KAAAW,EAAA,iBAAAiP,GAAAE,EAAA,SAAA+D,KAAAlT,EAAA6R,SAAA,OAAAyB,EAAAtT,EAAA6R,UAAA,WAAAqB,KAAAlT,EAAA8R,WAAA,OAAAwB,EAAAtT,EAAA8R,WAAA,SAAA7C,GAAA,QAAAiE,KAAAlT,EAAA6R,SAAA,OAAAyB,EAAAtT,EAAA6R,UAAA,YAAA1C,EAAA,MAAA2B,MAAA,kDAAAoC,KAAAlT,EAAA8R,WAAA,OAAAwB,EAAAtT,EAAA8R,WAAA,KAAAR,OAAA,SAAA7Q,EAAA2D,GAAA,QAAAmB,EAAA,KAAAyM,WAAA/R,OAAA,EAAAsF,GAAA,IAAAA,EAAA,KAAA3G,EAAA,KAAAoT,WAAAzM,GAAA,GAAA3G,EAAAgT,QAAA,KAAAsB,MAAArE,EAAAxP,KAAAT,EAAA,oBAAAsU,KAAAtU,EAAAkT,WAAA,KAAA9R,EAAApB,EAAA,OAAAoB,IAAA,UAAAS,GAAA,aAAAA,IAAAT,EAAA4R,QAAAxN,GAAAA,GAAApE,EAAA8R,aAAA9R,EAAA,UAAA+O,EAAA/O,EAAAA,EAAAmS,WAAA,UAAApD,EAAAhD,KAAAtL,EAAAsO,EAAAe,IAAA1L,EAAApE,GAAA,KAAAgR,OAAA,YAAAS,KAAAzR,EAAA8R,WAAArS,GAAA,KAAA8T,SAAAxE,EAAA,EAAAwE,SAAA,SAAA9S,EAAA2D,GAAA,aAAA3D,EAAAsL,KAAA,MAAAtL,EAAAqP,IAAA,gBAAArP,EAAAsL,MAAA,aAAAtL,EAAAsL,KAAA,KAAA0F,KAAAhR,EAAAqP,IAAA,WAAArP,EAAAsL,MAAA,KAAAsH,KAAA,KAAAvD,IAAArP,EAAAqP,IAAA,KAAAkB,OAAA,cAAAS,KAAA,kBAAAhR,EAAAsL,MAAA3H,IAAA,KAAAqN,KAAArN,GAAA3E,CAAA,EAAA+T,OAAA,SAAA/S,GAAA,QAAA2D,EAAA,KAAA4N,WAAA/R,OAAA,EAAAmE,GAAA,IAAAA,EAAA,KAAAmB,EAAA,KAAAyM,WAAA5N,GAAA,GAAAmB,EAAAuM,aAAArR,EAAA,YAAA8S,SAAAhO,EAAA4M,WAAA5M,EAAAwM,UAAAG,EAAA3M,GAAA9F,CAAA,kBAAAgB,GAAA,QAAA2D,EAAA,KAAA4N,WAAA/R,OAAA,EAAAmE,GAAA,IAAAA,EAAA,KAAAmB,EAAA,KAAAyM,WAAA5N,GAAA,GAAAmB,EAAAqM,SAAAnR,EAAA,KAAAoO,EAAAtJ,EAAA4M,WAAA,aAAAtD,EAAA9C,KAAA,KAAAnN,EAAAiQ,EAAAiB,IAAAoC,EAAA3M,EAAA,QAAA3G,CAAA,QAAAkS,MAAA,0BAAA2C,cAAA,SAAArP,EAAAmB,EAAAsJ,GAAA,YAAAoC,SAAA,CAAAjC,SAAAqB,EAAAjM,GAAAoN,WAAAjM,EAAAmM,QAAA7C,GAAA,cAAAmC,SAAA,KAAAlB,IAAArP,GAAAhB,CAAA,GAAA2E,CAAA,UAAAsP,EAAA7E,EAAApO,EAAA2D,EAAAmB,EAAA3G,EAAAmQ,EAAAE,GAAA,QAAAjP,EAAA6O,EAAAE,GAAAE,GAAAE,EAAAnP,EAAAM,KAAA,OAAAuO,GAAA,YAAAzK,EAAAyK,EAAA,CAAA7O,EAAA+Q,KAAAtQ,EAAA0O,GAAA2D,QAAAnC,QAAAxB,GAAA3D,KAAAjG,EAAA3G,EAAA,CAuEO,SAAe+U,EAAWC,GAAA,OAAAC,EAAAC,MAAC,KAADlT,UAAA,CAwCjC,SAAAiT,IAFC,OA7GDhF,EA+GAD,IAAA6D,MAxCO,SAAAsB,EAA2BC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtF,EAAAuF,EAAA1T,UAAA,OAAAgO,IAAAY,MAAA,SAAA+E,GAAA,cAAAA,EAAArB,KAAAqB,EAAA9C,MAAA,OAOrC,GAPuCwC,EAAeK,EAAArU,OAAA,QAAAY,IAAAyT,EAAA,GAAAA,EAAA,GAAG,WAC3DvS,QAAQC,IAAI,mBAAmBuS,EAAArB,KAAA,EAIvBgB,EAAWD,EAAgBO,SAAS,SAAWP,EAAkB,GAAHvJ,OAAMuJ,EAAe,UAGrFhJ,OAAOC,aAAqD,mBAA/BD,OAAOC,YAAYuJ,QAAsB,CAAAF,EAAA9C,KAAA,gBAAA8C,EAAA9C,KAAA,EACjDxG,OAAOC,YAAYuJ,QAAQ,CAChDT,QAAAA,EACAU,YAAaR,IACb,OAHY,KAARC,EAAQI,EAAApD,MAKA,CAAFoD,EAAA9C,KAAA,SACwC,OAAlDrD,EAAU,iBAAD1D,OAAkByJ,GAAY,WAAWI,EAAAjD,OAAA,SAC3C6C,GAAQ,QAAAI,EAAA9C,KAAA,iBAcqC,OAVhD2C,EAAO,IAAIO,KAAK,CAACX,GAAU,CAAEjI,KAAM,eACnCsI,EAAMO,IAAIC,gBAAgBT,IAC1BrF,EAAI9M,SAAS0F,cAAc,MAC/BmN,KAAOT,EACTtF,EAAEgG,SAAWb,EACbjS,SAASuM,KAAK1G,YAAYiH,GAC1BA,EAAEtC,QACFxK,SAASuM,KAAKG,YAAYI,GAC1B6F,IAAII,gBAAgBX,GAEpBjG,EAAU,qBAAD1D,OAAsBwJ,GAAY,WAAWK,EAAAjD,OAAA,SAC/C4C,GAAQ,QAAAK,EAAA9C,KAAA,iBAI6B,OAJ7B8C,EAAArB,KAAA,GAAAqB,EAAAU,GAAAV,EAAA,SAGjBxS,QAAQ6J,MAAM,oBAAmB2I,EAAAU,IACjC7G,EAAU,0BAA2B,SAASmG,EAAAjD,OAAA,SACvC,MAAI,yBAAAiD,EAAAnB,OAAA,GAAAW,EAAA,kBAIfF,EA/GA,eAAApT,EAAA,KAAA2D,EAAAxD,UAAA,WAAAkS,SAAA,SAAAvN,EAAA3G,GAAA,IAAAmQ,EAAAF,EAAAiF,MAAArT,EAAA2D,GAAA,SAAA8Q,EAAArG,GAAA6E,EAAA3E,EAAAxJ,EAAA3G,EAAAsW,EAAAC,EAAA,OAAAtG,EAAA,UAAAsG,EAAAtG,GAAA6E,EAAA3E,EAAAxJ,EAAA3G,EAAAsW,EAAAC,EAAA,QAAAtG,EAAA,CAAAqG,OAAA,OA6GCrB,EAAAC,MAAA,KAAAlT,WA7GD,IAAAiO,CA6GC,CC7FM,SAASX,IACd,IAAMkH,EAAY/O,EAASC,iBACrB+O,EAAOD,EAAUC,MAAQ,GAC3BrB,EAAU,GAGdA,GAAW,KAAJtJ,OAAS0K,EAAUE,MAAK,MAC/BtB,GAAW,8BACXA,GAAW,eAAJtJ,OAAmB2K,EAAI,MAC9BrB,GAAW,2BACXA,GAAW,6BAKX,IAFA,IAAMuB,EAAO,GAAOF,EAAO,GAElB5P,EAAI,EAAGA,EAAI4P,EAAM5P,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAI6P,EAAM7P,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAI8P,EAAM9P,IAAK,CAE7B,IAAIiQ,EAAWjQ,EAAIgQ,EACfE,EAAajQ,EAAI+P,EACjBG,EAAYjQ,EAAI8P,EAGpB,GAA4B,UAAxBlP,EAASsP,WAAwB,CACnC,IAAM9P,EAAS+P,EAAyBJ,EAAUC,EAAYC,GAC9DF,EAAW3P,EAAON,EAClBkQ,EAAa5P,EAAOL,EACpBkQ,EAAY7P,EAAOJ,CACrB,KAAO,CACL,IAAMI,EAASgQ,EAA4BL,EAAUC,EAAYC,GACjEF,EAAW3P,EAAON,EAClBkQ,EAAa5P,EAAOL,EACpBkQ,EAAY7P,EAAOJ,CACrB,CAGA+P,EAAWrV,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKqQ,IACvCC,EAAatV,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKsQ,IACzCC,EAAYvV,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKuQ,IAGxC1B,GAAW,GAAJtJ,OAAO8K,EAAS/O,QAAQ,GAAE,KAAAiE,OAAI+K,EAAWhP,QAAQ,GAAE,KAAAiE,OAAIgL,EAAUjP,QAAQ,GAAE,KACpF,CAIJ,OAAOuN,CACT,CAGO,SAAS4B,EAAyBrQ,EAAGC,EAAGC,GAC7C,IAAM9E,EAAS0F,EAASC,iBAAiBC,OAAS,CAAC,EAanD,GAVAhB,EAAIoB,EAAcpB,EAAG5E,EAAOiG,UAAY,GACxCpB,EAAImB,EAAcnB,EAAG7E,EAAOiG,UAAY,GACxCnB,EAAIkB,EAAclB,EAAG9E,EAAOiG,UAAY,GAGxCrB,GAAK5E,EAAO2M,YAAc,EAC1B9H,GAAK7E,EAAO4M,cAAgB,EAC5B9H,GAAK9E,EAAO6M,aAAe,EAGvB7M,EAAO8M,cAAgB9M,EAAO+M,gBAAiB,CACjD,IAAIoI,EAAe3V,KAAK0K,IAAI,EAAI1K,KAAKgF,IAAII,EAAGpF,KAAKgF,IAAIK,EAAGC,IAAK,GACzDsQ,EAAkB5V,KAAK0K,IAAI1K,KAAKgF,IAAII,EAAGpF,KAAKgF,IAAIK,EAAGC,IAAK,GAE5DF,GAAK5E,EAAO8M,aAAa,GAAKqI,EAAenV,EAAO+M,gBAAgB,GAAKqI,EACzEvQ,GAAK7E,EAAO8M,aAAa,GAAKqI,EAAenV,EAAO+M,gBAAgB,GAAKqI,EACzEtQ,GAAK9E,EAAO8M,aAAa,GAAKqI,EAAenV,EAAO+M,gBAAgB,GAAKqI,CAC3E,CAGA,QAA0BlV,IAAtBF,EAAOiI,YAAkD,IAAtBjI,EAAOiI,WAAoB,CAChE,IAAM5B,EAAY,MAASzB,EAAI,MAASC,EAAI,MAASC,EACrDF,EAAIyB,EAAYrG,EAAOiI,YAAcrD,EAAIyB,GACzCxB,EAAIwB,EAAYrG,EAAOiI,YAAcpD,EAAIwB,GACzCvB,EAAIuB,EAAYrG,EAAOiI,YAAcnD,EAAIuB,EAC3C,CAEA,MAAO,CAAEzB,EAAAA,EAAGC,EAAAA,EAAGC,EAAAA,EACjB,CAGO,SAASoQ,EAA4BtQ,EAAGC,EAAGC,GAChD,IAAM9E,EAAS0F,EAASC,iBAGxB,GAAI3F,EAAOqV,UAA2C,IAA/BrV,EAAOqV,QAAQC,aAA6C,IAAxBtV,EAAOqV,QAAQE,MAAa,CACrF,IAAMC,EAiHH,SAAiC5Q,EAAGC,EAAGC,EAAGwQ,EAAaC,GAmC5D,OAhCmBD,EAOF,GAPEA,EAYK,KAHtB1Q,GAAS,EAAiB,GATT0Q,EAUjBzQ,GAAS,EAAiB,GAVTyQ,EAWjBxQ,GAAS,EAAiB,GAXTwQ,IAIAC,EAgBF,GAhBEA,EAqBK,KAHtB3Q,GAAS,EAAiB,GAlBT2Q,EAmBjB1Q,GAAS,EAAiB,GAnBT0Q,EAoBjBzQ,GAAS,EAAiB,GApBTyQ,GA4BZ,CAAE3Q,EAAAA,EAAGC,EAAAA,EAAGC,EAAAA,EACjB,CArJuB2Q,CACjB7Q,EAAGC,EAAGC,EACN9E,EAAOqV,QAAQC,YAAc,IAC7BtV,EAAOqV,QAAQE,KAAO,KAExB3Q,EAAI4Q,EAAW5Q,EACfC,EAAI2Q,EAAW3Q,EACfC,EAAI0Q,EAAW1Q,CACjB,CAGA,GAAI9E,EAAOqV,QAAS,CAElB,GAAgC,IAA5BrV,EAAOqV,QAAQK,SAAgB,CACjC,IAAMC,EAAiBnW,KAAK0K,IAAI,EAAGlK,EAAOqV,QAAQK,UAClD9Q,GAAK+Q,EACL9Q,GAAK8Q,EACL7Q,GAAK6Q,CACP,CAGA,GAAgC,IAA5B3V,EAAOqV,QAAQpP,SAAgB,CACjC,IAAM2P,EAAgB,EAAK5V,EAAOqV,QAAQpP,SAAW,IAAM,IAC3DrB,EAAIoB,EAAcpB,EAAGgR,GACrB/Q,EAAImB,EAAcnB,EAAG+Q,GACrB9Q,EAAIkB,EAAclB,EAAG8Q,EACvB,CACF,CAGA,GAAI5V,EAAOqV,QAAS,CAClB,IAAMQ,EAyHH,SAA8BjR,EAAGC,EAAGC,EAAGgR,EAAYC,EAASC,EAAQC,GAEzE,IAAM5P,EAAY,MAASzB,EAAI,MAASC,EAAI,MAASC,EAe/CoR,EAZgB1W,KAAK0K,IAAI7D,EAAW,GAAKyP,EAG5BtW,KAAK0K,IAAI,EAAI7D,EAAW,GAAK0P,EAG7BvW,KAAK0K,IAAI7D,EAAW,GAAK2P,EAGzBxW,KAAK0K,IAAI,EAAI7D,EAAW,GAAK4P,EAUhD,MAAO,CAAErR,EAJTA,GAAKsR,EAIOrR,EAHZA,GAAKqR,EAGUpR,EAFfA,GAAKoR,EAGP,CAlJuBC,CACjBvR,EAAGC,EAAGC,EACN9E,EAAOqV,QAAQS,WAAa,IAAM,IAClC9V,EAAOqV,QAAQU,QAAU,IAAM,IAC/B/V,EAAOqV,QAAQW,OAAS,IAAM,IAC9BhW,EAAOqV,QAAQY,OAAS,IAAM,KAEhCrR,EAAIiR,EAAWjR,EACfC,EAAIgR,EAAWhR,EACfC,EAAI+Q,EAAW/Q,CACjB,CAGA,GAAI9E,EAAO0H,YAAa,CACtB,IAAM2B,EAAarJ,EAAO0H,YAAY2B,WAChCC,EAAgBtJ,EAAO0H,YAAY4B,cACnCC,EAAcvJ,EAAO0H,YAAY6B,YAAc,IAErD,GAAqB,MAAjBF,EAAWzE,GAA8B,MAAjByE,EAAWxE,GAA8B,MAAjBwE,EAAWvE,GACvC,MAApBwE,EAAc1E,GAAiC,MAApB0E,EAAczE,GAAiC,MAApByE,EAAcxE,GACpD,IAAhByE,EAAmB,CAErB,IAAM6M,EAAmBpM,EAAiBpF,EAAGC,EAAGC,EAAGuE,EAAYC,EAAeC,GAC9E3E,EAAIwR,EAAiBxR,EACrBC,EAAIuR,EAAiBvR,EACrBC,EAAIsR,EAAiBtR,CACvB,CACF,CAGA,GAAI9E,EAAOqW,OAAQ,CAEjB,IAAMtR,EAAY/E,EAAOqW,OAAOzX,IAC5BmG,IACFH,EAAIlF,EAAiBqF,EAAWH,GAChCC,EAAInF,EAAiBqF,EAAWF,GAChCC,EAAIpF,EAAiBqF,EAAWD,IAI9B9E,EAAOqW,OAAOtX,MAAQI,EAAca,EAAOqW,OAAOtX,OACpD6F,EAAIlF,EAAiBM,EAAOqW,OAAOtX,IAAK6F,IAGtC5E,EAAOqW,OAAOrX,QAAUG,EAAca,EAAOqW,OAAOrX,SACtD6F,EAAInF,EAAiBM,EAAOqW,OAAOrX,MAAO6F,IAGxC7E,EAAOqW,OAAOpX,OAASE,EAAca,EAAOqW,OAAOpX,QACrD6F,EAAIpF,EAAiBM,EAAOqW,OAAOpX,KAAM6F,GAE7C,CAGA,GAAI9E,EAAOkG,SAAU,CAEnB,GAAiC,IAA7BlG,EAAOkG,SAASoQ,SAAgB,CAClC,IAAMC,EAAiBvW,EAAOkG,SAASoQ,SAAW,IAC5CjQ,EAAY,MAASzB,EAAI,MAASC,EAAI,MAASC,EAC/CwB,EAAa9G,KAAKgF,IAAII,EAAGC,EAAGC,GAC5ByB,EAAa/G,KAAKiF,IAAIG,EAAGC,EAAGC,GAE5B0B,EAAiB+P,GAAkB,GADF,IAAfjQ,EAAmB,GAAKA,EAAaC,GAAcD,IAG3E1B,EAAIyB,GAAazB,EAAIyB,IAAc,EAAIG,GACvC3B,EAAIwB,GAAaxB,EAAIwB,IAAc,EAAIG,GACvC1B,EAAIuB,GAAavB,EAAIuB,IAAc,EAAIG,EACzC,CAGA,GAAIxG,EAAOkG,SAASsQ,UAAY,EAAG,CACjC,IAAMC,EAAchQ,EAAe7B,EAAGC,EAAGC,EAAG9E,EAAOkG,SAASsQ,UAAY,KACxE5R,EAAI6R,EAAY7R,EAChBC,EAAI4R,EAAY5R,EAChBC,EAAI2R,EAAY3R,CAClB,CACF,CAEA,MAAO,CAAEF,EAAAA,EAAGC,EAAAA,EAAGC,EAAAA,EACjB,oPCzNAmJ,EAAA,kBAAAxK,CAAA,MAAA3D,EAAA2D,EAAA,GAAAmB,EAAA1G,OAAAM,UAAA0P,EAAAtJ,EAAAnG,eAAAR,EAAAC,OAAAC,gBAAA,SAAA2B,EAAA2D,EAAAmB,GAAA9E,EAAA2D,GAAAmB,EAAAjF,KAAA,EAAAN,EAAA,mBAAA8O,OAAAA,OAAA,GAAAC,EAAA/O,EAAAgP,UAAA,aAAAC,EAAAjP,EAAAkP,eAAA,kBAAAC,EAAAnP,EAAAoP,aAAA,yBAAAC,EAAA5O,EAAA2D,EAAAmB,GAAA,OAAA1G,OAAAC,eAAA2B,EAAA2D,EAAA,CAAA9D,MAAAiF,EAAAxG,YAAA,EAAAuQ,cAAA,EAAAC,UAAA,IAAA9O,EAAA2D,EAAA,KAAAiL,EAAA,aAAA5O,GAAA4O,EAAA,SAAA5O,EAAA2D,EAAAmB,GAAA,OAAA9E,EAAA2D,GAAAmB,CAAA,WAAAiK,EAAA/O,EAAA2D,EAAAmB,EAAAsJ,GAAA,IAAA7O,EAAAoE,GAAAA,EAAAjF,qBAAAsQ,EAAArL,EAAAqL,EAAAV,EAAAlQ,OAAA6Q,OAAA1P,EAAAb,WAAA8P,EAAA,IAAAU,EAAAd,GAAA,WAAAjQ,EAAAmQ,EAAA,WAAAzO,MAAAsP,EAAAnP,EAAA8E,EAAA0J,KAAAF,CAAA,UAAAc,EAAApP,EAAA2D,EAAAmB,GAAA,WAAAwG,KAAA,SAAA+D,IAAArP,EAAApB,KAAA+E,EAAAmB,GAAA,OAAA9E,GAAA,OAAAsL,KAAA,QAAA+D,IAAArP,EAAA,EAAA2D,EAAAoL,KAAAA,EAAA,IAAAnG,EAAA,iBAAA0G,EAAA,iBAAAvG,EAAA,YAAAF,EAAA,YAAA7J,EAAA,YAAAgQ,IAAA,UAAAO,IAAA,UAAAC,IAAA,KAAAxG,EAAA,GAAA4F,EAAA5F,EAAAsF,GAAA,8BAAAmB,EAAArR,OAAAsR,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA7K,GAAAsJ,EAAAxP,KAAA+Q,EAAArB,KAAAtF,EAAA2G,GAAA,IAAA5K,EAAAyK,EAAA9Q,UAAAsQ,EAAAtQ,UAAAN,OAAA6Q,OAAAjG,GAAA,SAAA6G,EAAA7P,GAAA,0BAAAqD,SAAA,SAAAM,GAAAiL,EAAA5O,EAAA2D,GAAA,SAAA3D,GAAA,YAAA8P,QAAAnM,EAAA3D,EAAA,gBAAA+P,EAAA/P,EAAA2D,GAAA,SAAAqM,EAAAlL,EAAA3G,EAAAoB,EAAA+O,GAAA,IAAAE,EAAAY,EAAApP,EAAA8E,GAAA9E,EAAA7B,GAAA,aAAAqQ,EAAAlD,KAAA,KAAAoD,EAAAF,EAAAa,IAAAzG,EAAA8F,EAAA7O,MAAA,OAAA+I,GAAA,UAAAqH,EAAArH,IAAAwF,EAAAxP,KAAAgK,EAAA,WAAAjF,EAAAuM,QAAAtH,EAAAuH,SAAApF,MAAA,SAAA/K,GAAAgQ,EAAA,OAAAhQ,EAAAT,EAAA+O,EAAA,aAAAtO,GAAAgQ,EAAA,QAAAhQ,EAAAT,EAAA+O,EAAA,IAAA3K,EAAAuM,QAAAtH,GAAAmC,MAAA,SAAA/K,GAAA0O,EAAA7O,MAAAG,EAAAT,EAAAmP,EAAA,aAAA1O,GAAA,OAAAgQ,EAAA,QAAAhQ,EAAAT,EAAA+O,EAAA,IAAAA,EAAAE,EAAAa,IAAA,KAAAvK,EAAA3G,EAAA,gBAAA0B,MAAA,SAAAG,EAAAoO,GAAA,SAAAgC,IAAA,WAAAzM,GAAA,SAAAA,EAAAmB,GAAAkL,EAAAhQ,EAAAoO,EAAAzK,EAAAmB,EAAA,WAAAA,EAAAA,EAAAA,EAAAiG,KAAAqF,EAAAA,GAAAA,GAAA,aAAAjB,EAAAxL,EAAAmB,EAAAsJ,GAAA,IAAAjQ,EAAAyK,EAAA,gBAAArJ,EAAA+O,GAAA,GAAAnQ,IAAA4K,EAAA,MAAAsH,MAAA,mCAAAlS,IAAA0K,EAAA,cAAAtJ,EAAA,MAAA+O,EAAA,OAAAzO,MAAAG,EAAAsQ,MAAA,OAAAlC,EAAAmC,OAAAhR,EAAA6O,EAAAiB,IAAAf,IAAA,KAAAE,EAAAJ,EAAAoC,SAAA,GAAAhC,EAAA,KAAAE,EAAA+B,EAAAjC,EAAAJ,GAAA,GAAAM,EAAA,IAAAA,IAAA1P,EAAA,gBAAA0P,CAAA,cAAAN,EAAAmC,OAAAnC,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAiB,SAAA,aAAAjB,EAAAmC,OAAA,IAAApS,IAAAyK,EAAA,MAAAzK,EAAA0K,EAAAuF,EAAAiB,IAAAjB,EAAAwC,kBAAAxC,EAAAiB,IAAA,gBAAAjB,EAAAmC,QAAAnC,EAAAyC,OAAA,SAAAzC,EAAAiB,KAAAlR,EAAA4K,EAAA,IAAAC,EAAAoG,EAAAzL,EAAAmB,EAAAsJ,GAAA,cAAApF,EAAAsC,KAAA,IAAAnN,EAAAiQ,EAAAkC,KAAAzH,EAAAyG,EAAAtG,EAAAqG,MAAArQ,EAAA,gBAAAa,MAAAmJ,EAAAqG,IAAAiB,KAAAlC,EAAAkC,KAAA,WAAAtH,EAAAsC,OAAAnN,EAAA0K,EAAAuF,EAAAmC,OAAA,QAAAnC,EAAAiB,IAAArG,EAAAqG,IAAA,YAAAoB,EAAA9M,EAAAmB,GAAA,IAAAsJ,EAAAtJ,EAAAyL,OAAApS,EAAAwF,EAAA4K,SAAAH,GAAA,GAAAjQ,IAAA6B,EAAA,OAAA8E,EAAA0L,SAAA,eAAApC,GAAAzK,EAAA4K,SAAA,SAAAzJ,EAAAyL,OAAA,SAAAzL,EAAAuK,IAAArP,EAAAyQ,EAAA9M,EAAAmB,GAAA,UAAAA,EAAAyL,SAAA,WAAAnC,IAAAtJ,EAAAyL,OAAA,QAAAzL,EAAAuK,IAAA,IAAAyB,UAAA,oCAAA1C,EAAA,aAAApP,EAAA,IAAAO,EAAA6P,EAAAjR,EAAAwF,EAAA4K,SAAAzJ,EAAAuK,KAAA,aAAA9P,EAAA+L,KAAA,OAAAxG,EAAAyL,OAAA,QAAAzL,EAAAuK,IAAA9P,EAAA8P,IAAAvK,EAAA0L,SAAA,KAAAxR,EAAA,IAAAsP,EAAA/O,EAAA8P,IAAA,OAAAf,EAAAA,EAAAgC,MAAAxL,EAAAnB,EAAAoN,YAAAzC,EAAAzO,MAAAiF,EAAAkM,KAAArN,EAAAsN,QAAA,WAAAnM,EAAAyL,SAAAzL,EAAAyL,OAAA,OAAAzL,EAAAuK,IAAArP,GAAA8E,EAAA0L,SAAA,KAAAxR,GAAAsP,GAAAxJ,EAAAyL,OAAA,QAAAzL,EAAAuK,IAAA,IAAAyB,UAAA,oCAAAhM,EAAA0L,SAAA,KAAAxR,EAAA,UAAAkS,EAAAlR,GAAA,IAAA2D,EAAA,CAAAwN,OAAAnR,EAAA,SAAAA,IAAA2D,EAAAyN,SAAApR,EAAA,SAAAA,IAAA2D,EAAA0N,WAAArR,EAAA,GAAA2D,EAAA2N,SAAAtR,EAAA,SAAAuR,WAAAC,KAAA7N,EAAA,UAAA8N,EAAAzR,GAAA,IAAA2D,EAAA3D,EAAA0R,YAAA,GAAA/N,EAAA2H,KAAA,gBAAA3H,EAAA0L,IAAArP,EAAA0R,WAAA/N,CAAA,UAAAuL,EAAAlP,GAAA,KAAAuR,WAAA,EAAAJ,OAAA,SAAAnR,EAAAqD,QAAA6N,EAAA,WAAAS,OAAA,YAAA/B,EAAAjM,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmB,EAAAnB,EAAA2K,GAAA,GAAAxJ,EAAA,OAAAA,EAAAlG,KAAA+E,GAAA,sBAAAA,EAAAqN,KAAA,OAAArN,EAAA,IAAAiO,MAAAjO,EAAAnE,QAAA,KAAArB,GAAA,EAAAoB,EAAA,SAAAyR,IAAA,OAAA7S,EAAAwF,EAAAnE,QAAA,GAAA4O,EAAAxP,KAAA+E,EAAAxF,GAAA,OAAA6S,EAAAnR,MAAA8D,EAAAxF,GAAA6S,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAnR,MAAAG,EAAAgR,EAAAV,MAAA,EAAAU,CAAA,SAAAzR,EAAAyR,KAAAzR,CAAA,YAAAuR,UAAAb,EAAAtM,GAAA,2BAAA4L,EAAA7Q,UAAA8Q,EAAArR,EAAA4G,EAAA,eAAAlF,MAAA2P,EAAAX,cAAA,IAAA1Q,EAAAqR,EAAA,eAAA3P,MAAA0P,EAAAV,cAAA,IAAAU,EAAAsC,YAAAjD,EAAAY,EAAAd,EAAA,qBAAA/K,EAAAmO,oBAAA,SAAA9R,GAAA,IAAA2D,EAAA,mBAAA3D,GAAAA,EAAA+R,YAAA,QAAApO,IAAAA,IAAA4L,GAAA,uBAAA5L,EAAAkO,aAAAlO,EAAAkH,MAAA,EAAAlH,EAAAqO,KAAA,SAAAhS,GAAA,OAAA5B,OAAA6T,eAAA7T,OAAA6T,eAAAjS,EAAAwP,IAAAxP,EAAAkS,UAAA1C,EAAAZ,EAAA5O,EAAA0O,EAAA,sBAAA1O,EAAAtB,UAAAN,OAAA6Q,OAAAlK,GAAA/E,CAAA,EAAA2D,EAAAwO,MAAA,SAAAnS,GAAA,OAAAmQ,QAAAnQ,EAAA,EAAA6P,EAAAE,EAAArR,WAAAkQ,EAAAmB,EAAArR,UAAA8P,GAAA,0BAAA7K,EAAAoM,cAAAA,EAAApM,EAAAyO,MAAA,SAAApS,EAAA8E,EAAAsJ,EAAAjQ,EAAAoB,QAAA,IAAAA,IAAAA,EAAA8S,SAAA,IAAA/D,EAAA,IAAAyB,EAAAhB,EAAA/O,EAAA8E,EAAAsJ,EAAAjQ,GAAAoB,GAAA,OAAAoE,EAAAmO,oBAAAhN,GAAAwJ,EAAAA,EAAA0C,OAAAjG,MAAA,SAAA/K,GAAA,OAAAA,EAAAsQ,KAAAtQ,EAAAH,MAAAyO,EAAA0C,MAAA,KAAAnB,EAAA9K,GAAA6J,EAAA7J,EAAA2J,EAAA,aAAAE,EAAA7J,EAAAuJ,GAAA,0BAAAM,EAAA7J,EAAA,qDAAApB,EAAA2O,KAAA,SAAAtS,GAAA,IAAA2D,EAAAvF,OAAA4B,GAAA8E,EAAA,WAAAsJ,KAAAzK,EAAAmB,EAAA0M,KAAApD,GAAA,OAAAtJ,EAAAyN,UAAA,SAAAvB,IAAA,KAAAlM,EAAAtF,QAAA,KAAAQ,EAAA8E,EAAA0N,MAAA,GAAAxS,KAAA2D,EAAA,OAAAqN,EAAAnR,MAAAG,EAAAgR,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAArN,EAAAiM,OAAAA,EAAAV,EAAAxQ,UAAA,CAAAqT,YAAA7C,EAAAyC,MAAA,SAAAhO,GAAA,QAAA8O,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAA3Q,EAAA,KAAAsQ,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAlB,IAAArP,EAAA,KAAAuR,WAAAlO,QAAAoO,IAAA9N,EAAA,QAAAmB,KAAA,WAAAA,EAAA4N,OAAA,IAAAtE,EAAAxP,KAAA,KAAAkG,KAAA8M,OAAA9M,EAAA4I,MAAA,WAAA5I,GAAA9E,EAAA,EAAA2S,KAAA,gBAAArC,MAAA,MAAAtQ,EAAA,KAAAuR,WAAA,GAAAG,WAAA,aAAA1R,EAAAsL,KAAA,MAAAtL,EAAAqP,IAAA,YAAAuD,IAAA,EAAAhC,kBAAA,SAAAjN,GAAA,QAAA2M,KAAA,MAAA3M,EAAA,IAAAmB,EAAA,cAAA+N,EAAAzE,EAAAjQ,GAAA,OAAAmQ,EAAAhD,KAAA,QAAAgD,EAAAe,IAAA1L,EAAAmB,EAAAkM,KAAA5C,EAAAjQ,IAAA2G,EAAAyL,OAAA,OAAAzL,EAAAuK,IAAArP,KAAA7B,CAAA,SAAAA,EAAA,KAAAoT,WAAA/R,OAAA,EAAArB,GAAA,IAAAA,EAAA,KAAAoB,EAAA,KAAAgS,WAAApT,GAAAmQ,EAAA/O,EAAAmS,WAAA,YAAAnS,EAAA4R,OAAA,OAAA0B,EAAA,UAAAtT,EAAA4R,QAAA,KAAAsB,KAAA,KAAAjE,EAAAJ,EAAAxP,KAAAW,EAAA,YAAAmP,EAAAN,EAAAxP,KAAAW,EAAA,iBAAAiP,GAAAE,EAAA,SAAA+D,KAAAlT,EAAA6R,SAAA,OAAAyB,EAAAtT,EAAA6R,UAAA,WAAAqB,KAAAlT,EAAA8R,WAAA,OAAAwB,EAAAtT,EAAA8R,WAAA,SAAA7C,GAAA,QAAAiE,KAAAlT,EAAA6R,SAAA,OAAAyB,EAAAtT,EAAA6R,UAAA,YAAA1C,EAAA,MAAA2B,MAAA,kDAAAoC,KAAAlT,EAAA8R,WAAA,OAAAwB,EAAAtT,EAAA8R,WAAA,KAAAR,OAAA,SAAA7Q,EAAA2D,GAAA,QAAAmB,EAAA,KAAAyM,WAAA/R,OAAA,EAAAsF,GAAA,IAAAA,EAAA,KAAA3G,EAAA,KAAAoT,WAAAzM,GAAA,GAAA3G,EAAAgT,QAAA,KAAAsB,MAAArE,EAAAxP,KAAAT,EAAA,oBAAAsU,KAAAtU,EAAAkT,WAAA,KAAA9R,EAAApB,EAAA,OAAAoB,IAAA,UAAAS,GAAA,aAAAA,IAAAT,EAAA4R,QAAAxN,GAAAA,GAAApE,EAAA8R,aAAA9R,EAAA,UAAA+O,EAAA/O,EAAAA,EAAAmS,WAAA,UAAApD,EAAAhD,KAAAtL,EAAAsO,EAAAe,IAAA1L,EAAApE,GAAA,KAAAgR,OAAA,YAAAS,KAAAzR,EAAA8R,WAAArS,GAAA,KAAA8T,SAAAxE,EAAA,EAAAwE,SAAA,SAAA9S,EAAA2D,GAAA,aAAA3D,EAAAsL,KAAA,MAAAtL,EAAAqP,IAAA,gBAAArP,EAAAsL,MAAA,aAAAtL,EAAAsL,KAAA,KAAA0F,KAAAhR,EAAAqP,IAAA,WAAArP,EAAAsL,MAAA,KAAAsH,KAAA,KAAAvD,IAAArP,EAAAqP,IAAA,KAAAkB,OAAA,cAAAS,KAAA,kBAAAhR,EAAAsL,MAAA3H,IAAA,KAAAqN,KAAArN,GAAA3E,CAAA,EAAA+T,OAAA,SAAA/S,GAAA,QAAA2D,EAAA,KAAA4N,WAAA/R,OAAA,EAAAmE,GAAA,IAAAA,EAAA,KAAAmB,EAAA,KAAAyM,WAAA5N,GAAA,GAAAmB,EAAAuM,aAAArR,EAAA,YAAA8S,SAAAhO,EAAA4M,WAAA5M,EAAAwM,UAAAG,EAAA3M,GAAA9F,CAAA,kBAAAgB,GAAA,QAAA2D,EAAA,KAAA4N,WAAA/R,OAAA,EAAAmE,GAAA,IAAAA,EAAA,KAAAmB,EAAA,KAAAyM,WAAA5N,GAAA,GAAAmB,EAAAqM,SAAAnR,EAAA,KAAAoO,EAAAtJ,EAAA4M,WAAA,aAAAtD,EAAA9C,KAAA,KAAAnN,EAAAiQ,EAAAiB,IAAAoC,EAAA3M,EAAA,QAAA3G,CAAA,QAAAkS,MAAA,0BAAA2C,cAAA,SAAArP,EAAAmB,EAAAsJ,GAAA,YAAAoC,SAAA,CAAAjC,SAAAqB,EAAAjM,GAAAoN,WAAAjM,EAAAmM,QAAA7C,GAAA,cAAAmC,SAAA,KAAAlB,IAAArP,GAAAhB,CAAA,GAAA2E,CAAA,UAAAsP,EAAA7E,EAAApO,EAAA2D,EAAAmB,EAAA3G,EAAAmQ,EAAAE,GAAA,QAAAjP,EAAA6O,EAAAE,GAAAE,GAAAE,EAAAnP,EAAAM,KAAA,OAAAuO,GAAA,YAAAzK,EAAAyK,EAAA,CAAA7O,EAAA+Q,KAAAtQ,EAAA0O,GAAA2D,QAAAnC,QAAAxB,GAAA3D,KAAAjG,EAAA3G,EAAA,CA6BO,SAAeyY,IAAe,OAAAC,EAAAxD,MAAC,KAADlT,UAAA,CAwBrC,SAAA0W,IAFC,OAnDDzI,EAqDAD,IAAA6D,MAxBO,SAAA8E,IAAA,IAAAtJ,EAAAgG,EAAA,OAAArF,IAAAY,MAAA,SAAAgI,GAAA,cAAAA,EAAAtE,KAAAsE,EAAA/F,MAAA,OAUH,OATF1P,QAAQC,IAAI,iBAAiBwV,EAAAtE,KAAA,EAIrBjF,EAAaC,IAGb+F,EAAkBwD,EAAepR,EAASC,iBAAiBgP,OAEjEkC,EAAA/F,KAAA,EACqBkC,EAAY1F,EAAYgG,GAAgB,OAAjDuD,EAAArG,KAGVpP,QAAQC,IAAI,6BAEZD,QAAQO,KAAK,sCACdkV,EAAA/F,KAAA,iBAAA+F,EAAAtE,KAAA,GAAAsE,EAAAvC,GAAAuC,EAAA,SAEDzV,QAAQ6J,MAAM,uBAAsB4L,EAAAvC,IACpC7G,EAAU,yBAA2BoJ,EAAAvC,GAAM5G,QAAS,SAAS,yBAAAmJ,EAAApE,OAAA,GAAAmE,EAAA,kBAIjED,EArDA,eAAA7W,EAAA,KAAA2D,EAAAxD,UAAA,WAAAkS,SAAA,SAAAvN,EAAA3G,GAAA,IAAAmQ,EAAAF,EAAAiF,MAAArT,EAAA2D,GAAA,SAAA8Q,EAAArG,GAAA6E,EAAA3E,EAAAxJ,EAAA3G,EAAAsW,EAAAC,EAAA,OAAAtG,EAAA,UAAAsG,EAAAtG,GAAA6E,EAAA3E,EAAAxJ,EAAA3G,EAAAsW,EAAAC,EAAA,QAAAtG,EAAA,CAAAqG,OAAA,QAmDCpB,MAAA,KAAAlT,WAnDD,IAAAiO,CAmDC,CAGM,SAAS4I,EAAenC,GAC7B,IAAKA,EAAO,MAAO,WAGnB,IAAIpB,EAAWoB,EAAMoC,QAAQ,OAAQ,KAChBA,QAAQ,kBAAmB,IAC3BC,cAOrB,OAJKzD,EAASM,SAAS,WACrBN,GAAY,SAGPA,CACT,CC0BO,SAAS0D,EAAaC,GAC3B,MAA4B,UAAxBxR,EAASsP,WAvFR,SAA2BkC,GAGhC,GAFA9V,QAAQC,IAAI,4CAEP6V,EAEH,OADA9V,QAAQ6J,MAAM,uBACP,KAGT,IAEE,IAAMlE,EAASzF,SAAS0F,cAAc,UAChCmQ,EAAMpQ,EAAOvF,WAAW,MAG9BuF,EAAOxE,MAAQ2U,EAAcE,aAC7BrQ,EAAOvE,OAAS0U,EAAcG,cAG9BF,EAAIG,UAAUJ,EAAe,EAAG,GAGhC,IAAMlS,EAAYmS,EAAII,aAAa,EAAG,EAAGxQ,EAAOxE,MAAOwE,EAAOvE,QAS9D,OToDG,SAA+BwC,GAIpC,IAHA,IAAMhF,EAAS0F,EAASC,iBAAiBC,MACnCX,EAAOD,EAAUC,KAEd5F,EAAI,EAAGA,EAAI4F,EAAK3F,OAAQD,GAAK,EAAG,CAEvC,IAAIuF,EAAIK,EAAK5F,GAAK,IACdwF,EAAII,EAAK5F,EAAI,GAAK,IAClByF,EAAIG,EAAK5F,EAAI,GAAK,IAatB,GAVAuF,EAAIoB,EAAcpB,EAAG5E,EAAOiG,UAC5BpB,EAAImB,EAAcnB,EAAG7E,EAAOiG,UAC5BnB,EAAIkB,EAAclB,EAAG9E,EAAOiG,UAG5BrB,GAAK5E,EAAO2M,WACZ9H,GAAK7E,EAAO4M,aACZ9H,GAAK9E,EAAO6M,YAGc,IAAtB7M,EAAOiI,WAAoB,CAC7B,IAAM5B,EAAY,MAASzB,EAAI,MAASC,EAAI,MAASC,EACrDF,EAAIyB,EAAYrG,EAAOiI,YAAcrD,EAAIyB,GACzCxB,EAAIwB,EAAYrG,EAAOiI,YAAcpD,EAAIwB,GACzCvB,EAAIuB,EAAYrG,EAAOiI,YAAcnD,EAAIuB,EAC3C,CAGA,GAAIrG,EAAO8M,cAAgB9M,EAAO+M,gBAAiB,CACjD,IAAIoI,EAAe3V,KAAK0K,IAAI,EAAI1K,KAAKgF,IAAII,EAAGpF,KAAKgF,IAAIK,EAAGC,IAAK,GACzDsQ,EAAkB5V,KAAK0K,IAAI1K,KAAKgF,IAAII,EAAGpF,KAAKgF,IAAIK,EAAGC,IAAK,GAE5DF,GAAK5E,EAAO8M,aAAa,GAAKqI,EAAenV,EAAO+M,gBAAgB,GAAKqI,EACzEvQ,GAAK7E,EAAO8M,aAAa,GAAKqI,EAAenV,EAAO+M,gBAAgB,GAAKqI,EACzEtQ,GAAK9E,EAAO8M,aAAa,GAAKqI,EAAenV,EAAO+M,gBAAgB,GAAKqI,CAC3E,CAGAxQ,EAAIpF,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKI,IAChCC,EAAIrF,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKK,IAChCC,EAAItF,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKM,IAGhCG,EAAK5F,GAAKG,KAAK4F,MAAU,IAAJR,GACrBK,EAAK5F,EAAI,GAAKG,KAAK4F,MAAU,IAAJP,GACzBI,EAAK5F,EAAI,GAAKG,KAAK4F,MAAU,IAAJN,EAE3B,CAGF,CS7GI0S,CAAsBxS,GAGtBmS,EAAIM,aAAazS,EAAW,EAAG,GAGxB+B,EAAO2Q,UAAU,aAAc,EACxC,CAAE,MAAOzM,GAEP,OADA7J,QAAQ6J,MAAM,0BAA2BA,GAClC,IACT,CACF,CAqDW0M,CAAkBT,GAlDtB,SAA8BA,GAGnC,GAFA9V,QAAQC,IAAI,+CAEP6V,EAEH,OADA9V,QAAQ6J,MAAM,uBACP,KAGT,IAEE,IAAMlE,EAASzF,SAAS0F,cAAc,UAChCmQ,EAAMpQ,EAAOvF,WAAW,MAG9BuF,EAAOxE,MAAQ2U,EAAcE,aAC7BrQ,EAAOvE,OAAS0U,EAAcG,cAG9BF,EAAIG,UAAUJ,EAAe,EAAG,GAGhC,IAAMlS,EAAYmS,EAAII,aAAa,EAAG,EAAGxQ,EAAOxE,MAAOwE,EAAOvE,QAmB9D,OPiLG,SAAoCwC,GAIzC,IAHA,IAAMhF,EAAS0F,EAASC,iBAAiB+B,YACnCzC,EAAOD,EAAUC,KAEd5F,EAAI,EAAGA,EAAI4F,EAAK3F,OAAQD,GAAK,EAAG,CAEvC,IAKM6F,EAAS8E,EALP/E,EAAK5F,GAAK,IACV4F,EAAK5F,EAAI,GAAK,IACd4F,EAAK5F,EAAI,GAAK,IAGmBW,EAAOqJ,WAAYrJ,EAAOsJ,cAAetJ,EAAOuJ,YAAc,KAGvGtE,EAAK5F,GAAKG,KAAK4F,MAA+C,IAAzC5F,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKU,EAAON,KACxDK,EAAK5F,EAAI,GAAKG,KAAK4F,MAA+C,IAAzC5F,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKU,EAAOL,KAC5DI,EAAK5F,EAAI,GAAKG,KAAK4F,MAA+C,IAAzC5F,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKU,EAAOJ,IAE9D,CAGF,COpNI8S,CAA2B5S,GRPxB,SAA8BA,GAInC,IAHA,IAAMhF,EAAS0F,EAASC,iBAAiBO,SACnCjB,EAAOD,EAAUC,KAEd5F,EAAI,EAAGA,EAAI4F,EAAK3F,OAAQD,GAAK,EAAG,CAEvC,IAAIuF,EAAIK,EAAK5F,GAAK,IACdwF,EAAII,EAAK5F,EAAI,GAAK,IAClByF,EAAIG,EAAK5F,EAAI,GAAK,IAGtB,GAAwB,IAApBW,EAAOsW,SAAgB,CACzB,IAAMpR,EAASiB,EAAcvB,EAAGC,EAAGC,EAAG9E,EAAOsW,SAAW,KACxD1R,EAAIM,EAAON,EACXC,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,CACb,CAGA,GAAI9E,EAAOwW,UAAY,EAAG,CACxB,IAAMtR,EAASuB,EAAe7B,EAAGC,EAAGC,EAAG9E,EAAOwW,UAAY,KAC1D5R,EAAIM,EAAON,EACXC,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,CACb,CAGAF,EAAIpF,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKI,IAChCC,EAAIrF,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKK,IAChCC,EAAItF,KAAKiF,IAAI,EAAKjF,KAAKgF,IAAI,EAAKM,IAGhCG,EAAK5F,GAAKG,KAAK4F,MAAU,IAAJR,GACrBK,EAAK5F,EAAI,GAAKG,KAAK4F,MAAU,IAAJP,GACzBI,EAAK5F,EAAI,GAAKG,KAAK4F,MAAU,IAAJN,EAE3B,CAGF,CQ7BI+S,CAAqB7S,GAGjBU,EAASL,aVsWV,SAA4BL,GAC7BK,GACKA,EAAYyS,mBAAmB9S,EAG1C,CU1WM8S,CAAmB9S,GAIrBmS,EAAIM,aAAazS,EAAW,EAAG,GAGxB+B,EAAO2Q,UAAU,aAAc,EACxC,CAAE,MAAOzM,GAEP,OADA7J,QAAQ6J,MAAM,mCAAoCA,GAC3C,IACT,CACF,CAOW8M,CAAqBb,EAEhC,CCzEA,IAAIxR,EAAW,CACbsP,WAAY,QACZkC,cAAe,KACfc,eAAgB,KAChBrS,iBAAkB,CAEhB+O,KAAM,GACNC,MAAO,iBACP1O,SAAU,IACVgC,WAAY,KACZ0E,WAAY,KACZC,aAAc,IACdC,YAAa,IACbC,aAAc,CAAC,IAAM,GAAM,KAC3BC,gBAAiB,CAAC,IAAM,IAAM,KA8FlC,SAAS1K,IACP,GAAKqD,EAASwR,cAAd,CAEA9V,QAAQC,IAAI,8BAGZ,IAEE,IAAM4W,EAAoBhB,EAAavR,EAASqF,sBAG5CkN,GAAqBvS,EAASwS,wBAChCxS,EAASwS,sBAAsBlN,IAAMiN,EAEzC,CAAE,MAAOhN,GACP7J,QAAQ6J,MAAM,0BAA2BA,EAC3C,CAfmC,CAgBrC,CAeAX,OAAOjI,sBAAwBA,EAG/Bf,SAASO,iBAAiB,oBA1H1B,WA+BA,IACQsW,EACAC,EACAC,EFlEAC,EACAC,ETuZAC,EACAC,EMpTAC,EACAC,EACAC,EAnGAC,EACAC,EACAC,EACAC,EK0BN5X,QAAQC,IAAI,4BAGZiJ,OAAO5E,SAAWA,EL/ClBtE,QAAQC,IAAI,4BAeNwX,EAAcvX,SAASC,eAAe,iBACtCuX,EAAsBxX,SAASC,eAAe,0BAC9CwX,EAAYzX,SAASC,eAAe,cACpCyX,EAAgB1X,SAASC,eAAe,mBAE1CsX,GAAeE,GACjBF,EAAYhX,iBAAiB,SAAS,WAEpCsL,GAAiB,GAEjB4L,EAAU3R,MAAMqF,QAAU,OAC5B,IAGEqM,GAAuBC,GACzBD,EAAoBjX,iBAAiB,SAAS,WAE5CsL,GAAiB,GAEjB4L,EAAU3R,MAAMqF,QAAU,OAC5B,IAGEuM,GACFA,EAAcnX,iBAAiB,SAAS,WAEvBP,SAAS2X,iBAAiB,UAClC9V,SAAQ,SAAA+V,GACbA,EAAM9R,MAAMqF,QAAU,MACxB,GACF,IAIFnC,OAAOzI,iBAAiB,SAAS,SAAC4B,GACjBnC,SAAS2X,iBAAiB,UAClC9V,SAAQ,SAAA+V,GACTzV,EAAEmI,SAAWsN,IACfA,EAAM9R,MAAMqF,QAAU,OAE1B,GACF,IA4BiB,CACf,CAAE+L,OAAQ,0BAA2BnF,QAAS,2BAA4B8F,UAAU,GACpF,CAAEX,OAAQ,kBAAmBnF,QAAS,mBAAoB8F,UAAU,GACpE,CAAEX,OAAQ,sBAAuBnF,QAAS,uBAAwB8F,UAAU,GAC5E,CAAEX,OAAQ,gBAAiBnF,QAAS,iBAAkB8F,UAAU,IAGzDhW,SAAQ,SAAAsV,GACf,IAAMD,EAASlX,SAASC,eAAekX,EAAQD,QACzCnF,EAAU/R,SAASC,eAAekX,EAAQpF,SAE5CmF,GAAUnF,IAERoF,EAAQU,WACVX,EAAOtW,UAAUC,IAAI,YACrBkR,EAAQnR,UAAUC,IAAI,aAGxBqW,EAAO3W,iBAAiB,SAAS,WAC/B2W,EAAOtW,UAAUsW,OAAO,YACxBnF,EAAQnR,UAAUsW,OAAO,WAC3B,IAEJ,IAKME,EAAcpX,SAASC,eAAe,gBACtCoX,EAAcrX,SAASC,eAAe,gBACtCqX,EAAWtX,SAASC,eAAe,aAErCmX,GACFA,EAAY7W,iBAAiB,SAAS,WAChCyI,OAAOC,aACTD,OAAOC,YAAY6O,cAAc,WAErC,IAGET,GACFA,EAAY9W,iBAAiB,SAAS,WAChCyI,OAAOC,aACTD,OAAOC,YAAY6O,cAAc,WAErC,IAGER,GACFA,EAAS/W,iBAAiB,SAAS,WAC7ByI,OAAOC,aACTD,OAAOC,YAAY6O,cAAc,QAErC,IL3IG,WACLhY,QAAQC,IAAI,kCAGPqE,EAASC,iBAAiBC,QAC7BF,EAASC,iBAAiBC,MAAQ,CAChCK,SAAU,IACVgC,WAAY,KACZ0E,WAAY,KACZC,aAAc,IACdC,YAAa,MAKjB,IA+CMwM,EACAC,EAhDAC,EAAiBjY,SAASC,eAAe,YACzCiY,EAAmBlY,SAASC,eAAe,cAC3CkY,EAAmBnY,SAASC,eAAe,eAC3CmY,EAAqBpY,SAASC,eAAe,iBAC7CoY,EAAoBrY,SAASC,eAAe,gBAG5CqU,EAAgBtU,SAASC,eAAe,kBACxCqY,EAAkBtY,SAASC,eAAe,oBAC1CsY,EAAkBvY,SAASC,eAAe,qBAC1CuY,EAAoBxY,SAASC,eAAe,uBAC5CwY,EAAmBzY,SAASC,eAAe,sBAGjD+D,EAAYiU,EAAgB3D,EAAe,YAC3CtQ,EAAYkU,EAAkBI,EAAiB,cAC/CtU,EAAYmU,EAAkBI,EAAiB,cAC/CvU,EAAYoU,EAAoBI,EAAmB,gBACnDxU,EAAYqU,EAAmBI,EAAkB,eA6B3CV,EAAa/X,SAASC,eAAe,SACrC+X,EAAgBhY,SAASC,eAAe,YAE1C8X,IAEFA,EAAW1Z,MAAQ+F,EAASC,iBAAiBgP,OAAS,iBAGtD0E,EAAWxX,iBAAiB,SAAS,WACnC6D,EAASC,iBAAiBgP,MAAQ0E,EAAW1Z,KAC/C,KAGE2Z,IAEFA,EAAc3Z,MAAQ+F,EAASC,iBAAiB+O,MAAQ,KAGxD4E,EAAczX,iBAAiB,UAAU,WACvC6D,EAASC,iBAAiB+O,KAAOsF,SAASV,EAAc3Z,MAC1D,IA7CJ,CUgBEsa,GTrDK,WACL7Y,QAAQC,IAAI,iCAGPqE,EAASC,iBAAiBO,WAC7BR,EAASC,iBAAiBO,SAAW,CACnCsQ,UAAW,EACXF,SAAU,IAKd,IAsCMkC,EACAC,EAvCAyB,EAAkB5Y,SAASC,eAAe,cAC1C4Y,EAAiB7Y,SAASC,eAAe,YAGzC6Y,EAAiB9Y,SAASC,eAAe,oBACzC8Y,EAAgB/Y,SAASC,eAAe,kBAG9C+D,EAAY4U,EAAiBE,EAAgB,aAC7C9U,EAAY6U,EAAgBE,EAAe,YA6BrC7B,EAASlX,SAASC,eA1BL,mBA2BbkX,EAAUnX,SAASC,eA3Ba,oBA6BlCiX,GAAUC,GACZD,EAAO3W,iBAAiB,SAAS,WAC/B2W,EAAOtW,UAAUsW,OAAO,YACxBC,EAAQvW,UAAUsW,OAAO,WAC3B,GAhCJ,CS6BE8B,GRtDK,WACLlZ,QAAQC,IAAI,6BAGPqE,EAASC,iBAAiB+B,cAC7BhC,EAASC,iBAAiB+B,YAAc,CACtC2B,WAAY,CAAEzE,EAAG,IAAKC,EAAG,IAAKC,EAAG,KACjCwE,cAAe,CAAE1E,EAAG,IAAKC,EAAG,IAAKC,EAAG,KACpCyE,YAAa,IAKjB,IAAMG,EAAmBpI,SAASC,eAAe,sBAC3CoI,EAAsBrI,SAASC,eAAe,yBAC9CiI,EAAoBlI,SAASC,eAAe,gBAC5CkI,EAAmBnI,SAASC,eAAe,sBAG7CmI,GACF9C,EAAgB8C,EAAkB,cAGhCC,GACF/C,EAAgB+C,EAAqB,iBAInCH,GAAqBC,IAEvBD,EAAkB7J,MAAQ+F,EAASC,iBAAiB+B,YAAY6B,YAChEE,EAAiB5D,YAAcH,EAASC,iBAAiB+B,YAAY6B,YAAYzD,QAAQ,GAGzF0D,EAAkB3H,iBAAiB,SAAS,WAC1C6D,EAASC,iBAAiB+B,YAAY6B,YAAcxD,WAAWyD,EAAkB7J,OACjF8J,EAAiB5D,YAAcH,EAASC,iBAAiB+B,YAAY6B,YAAYzD,QAAQ,GACzFzD,GACF,KAIF,IA2KMmW,EACAC,EA5KA8B,EAAcjZ,SAASuI,cAAc,0CACvC0Q,GACFA,EAAY1Y,iBAAiB,QAASuH,GAyKlCoP,EAASlX,SAASC,eArKL,uBAsKbkX,EAAUnX,SAASC,eAtKiB,wBAwKtCiX,GAAUC,GACZD,EAAO3W,iBAAiB,SAAS,WAC/B2W,EAAOtW,UAAUsW,OAAO,YACxBC,EAAQvW,UAAUsW,OAAO,WAC3B,GA3KJ,CQMEgC,GXoVApZ,QAAQC,IAAI,2BAGPqE,EAASC,iBAAiB0Q,SAC7B3Q,EAASC,iBAAiB0Q,OAAS/V,KAAKC,MAAMD,KAAKE,UAAU7B,KAI/D0G,EAAc,IAAItF,EAAY2F,EAASC,iBAAiB0Q,QAkBlDmC,EAASlX,SAASC,eAfL,iBAgBbkX,EAAUnX,SAASC,eAhBW,kBAkBhCiX,GAAUC,GACZD,EAAO3W,iBAAiB,SAAS,WAC/B2W,EAAOtW,UAAUsW,OAAO,YACxBC,EAAQvW,UAAUsW,OAAO,WAC3B,IAnB0B,aAAxBlX,SAASmZ,YAAqD,gBAAxBnZ,SAASmZ,WACjD1M,YAAW,kBAAM1I,EAAYxE,MAAM,GAAE,GAErCS,SAASO,iBAAiB,oBAAoB,kBAAMwD,EAAYxE,MAAM,IAIxE6E,EAASL,YAAcA,EY/ZvBjE,QAAQC,IAAI,iCREP,WACLD,QAAQC,IAAI,mCAGZ,IA0CM6K,EACAC,EACAC,EA5CA8K,EAAgB5V,SAASC,eAAe,kBACxCyW,EAAiB1W,SAASC,eAAe,mBACzCmZ,EAAsBpZ,SAASC,eAAe,wBAC9CoZ,EAAsBrZ,SAASC,eAAe,wBAC9CqZ,EAAiBtZ,SAASC,eAAe,oBAG/CmE,EAASqF,qBAAuBmM,EAChCxR,EAASwS,sBAAwBF,EAkC3B9L,EAAe5K,SAASC,eAAe,cACvC4K,EAAgB7K,SAASC,eAAe,eACxC6K,EAAe9K,SAASC,eAAe,cAEzC2K,GACFA,EAAarK,iBAAiB,SAAS,WACrCkK,EAAY,QACd,IAGEI,GACFA,EAActK,iBAAiB,SAAS,WACtCkK,EAAY,SACd,IAGEK,GACFA,EAAavK,iBAAiB,SAAS,WACrCkK,EAAY,QACd,IA/CE6O,GACFA,EAAe/Y,iBAAiB,QAASwI,GAIvC6M,IACFA,EAAcxL,OAAS,WACrBtK,QAAQC,IAAI,6BAGZqE,EAASwR,cAAgBA,EACzBxR,EAASsS,eAAiBA,EAGtB0C,IAAqBA,EAAoBtT,MAAMqF,QAAU,QACzDkO,IAAqBA,EAAoBvT,MAAMqF,QAAU,SAqFnE,WACE,IAAMkO,EAAsBrZ,SAASC,eAAe,wBAC9C8K,EAAyB/K,SAASC,eAAe,4BACjD+K,EAAmBhL,SAASC,eAAe,qBAC3CgL,EAAkBjL,SAASC,eAAe,oBAE5CsZ,GAAY,EACZC,EAAS,EACTC,EAAe,GAGnB,SAASC,EAAqBC,GAC5BA,EAAUzb,KAAKgF,IAAI,EAAGhF,KAAKiF,IAAI,IAAKwW,IAGpC7Q,EAAwB6Q,EAGxB5O,EAAuBjF,MAAMoF,SAAW,WAAHzC,OAAc,IAAMkR,EAAO,UAGhE3O,EAAiBlF,MAAMvD,KAAOoX,EAAU,IAGxC1O,EAAgBnF,MAAMvD,KAAOoX,EAAU,GACzC,CAGA3O,EAAiBzK,iBAAiB,aAAa,SAAC4B,GAC9CoX,GAAY,EACZC,EAASrX,EAAEG,QAGX,IAAMsX,EAAanV,WAAWuG,EAAiBlF,MAAMvD,OAASuG,EAC9D2Q,EAAeG,EAEfzX,EAAE0X,gBACJ,IAEA7Z,SAASO,iBAAiB,aAAa,SAAC4B,GACtC,GAAKoX,EAAL,CAEA,IAAMnX,EAAOiX,EAAoBhX,wBAE3ByX,GADS3X,EAAEG,QAAUkX,GACIpX,EAAKnB,MAAS,IAE7CyY,EAAqBD,EAAeK,GACpC3X,EAAE0X,gBAPoB,CAQxB,IAEA7Z,SAASO,iBAAiB,WAAW,WACnCgZ,GAAY,CACd,IAGAvO,EAAiBzK,iBAAiB,cAAc,SAAC4B,GAC/CoX,GAAY,EACZC,EAASrX,EAAE4X,QAAQ,GAAGzX,QAGtB,IAAMsX,EAAanV,WAAWuG,EAAiBlF,MAAMvD,OAASuG,EAC9D2Q,EAAeG,EAEfzX,EAAE0X,gBACJ,IAEA7Z,SAASO,iBAAiB,aAAa,SAAC4B,GACtC,GAAKoX,EAAL,CAEA,IAAMnX,EAAOiX,EAAoBhX,wBAE3ByX,GADS3X,EAAE4X,QAAQ,GAAGzX,QAAUkX,GACPpX,EAAKnB,MAAS,IAE7CyY,EAAqBD,EAAeK,GACpC3X,EAAE0X,gBAPoB,CAQxB,IAEA7Z,SAASO,iBAAiB,YAAY,WACpCgZ,GAAY,CACd,IAGAF,EAAoB9Y,iBAAiB,SAAS,SAAC4B,GAC7C,IAAIA,EAAEmI,OAAO0P,QAAQ,kBAAmB7X,EAAEmI,OAAO0P,QAAQ,kBAAzD,CAEA,IAAM5X,EAAOiX,EAAoBhX,wBAIjCqX,GAHevX,EAAEG,QAAUF,EAAKG,MACNH,EAAKnB,MAAS,IAJ0C,CAOpF,IAGAyY,EAAqB5Q,EACvB,CAhLMmR,GAGAlZ,GACF,EAEJ,COaEmZ,GNNK,WACLpa,QAAQC,IAAI,wBAGZ,IAAMoa,EAAgBna,SAAS2X,iBAAiB,eAEhDwC,EAActY,SAAQ,SAAAnB,GACpBA,EAAIH,iBAAiB,SAAS,WAoBlC,IAAqB6Z,EAgDQC,EAerB3b,EA7DA4b,EApBFH,EAActY,SAAQ,SAAA2B,GAAC,OAAIA,EAAE5C,UAAUE,OAAO,SAAS,IAGvDJ,EAAIE,UAAUC,IAAI,UAeHuZ,EAZE1Z,EAAI6Z,GAAGC,MAAM,KAAK,IAcjCF,EAASlP,EAAegP,IAAa1O,EAAY0O,KAOvDta,QAAQC,IAAI,oBAAD0I,OAAqB2R,IAGhChW,EAASqW,eAAiBL,EAGrBhW,EAASC,iBAAiBC,QAC7BF,EAASC,iBAAiBC,MAAQ,CAAC,GAIrCF,EAASC,iBAAiBC,MAAMK,SAAW2V,EAAO3V,SAClDP,EAASC,iBAAiBC,MAAMqC,WAAa2T,EAAO3T,WACpDvC,EAASC,iBAAiBC,MAAM+G,WAAaiP,EAAOjP,WACpDjH,EAASC,iBAAiBC,MAAMgH,aAAegP,EAAOhP,aACtDlH,EAASC,iBAAiBC,MAAMiH,YAAc+O,EAAO/O,YAGjD+O,EAAO9O,eACTpH,EAASC,iBAAiBC,MAAMkH,aAAYkP,EAAOJ,EAAO9O,eAGxD8O,EAAO7O,kBACTrH,EAASC,iBAAiBC,MAAMmH,gBAAeiP,EAAOJ,EAAO7O,kBAI3D6O,EAAOK,gBAcwB/b,KAFRyb,EAXLC,EAAOK,UAaV3G,aAA6B5P,EAASC,iBAAiB0P,UACxE3P,EAASC,iBAAiB0P,QAAQC,YAAcqG,EAAerG,kBAGrCpV,IAAxByb,EAAepG,MAAsB7P,EAASC,iBAAiB0P,UACjE3P,EAASC,iBAAiB0P,QAAQE,KAAOoG,EAAepG,OAW1DtI,EAAa,YAHPjN,EAAS0F,EAASC,iBAAiBC,OAGTK,UAChCgH,EAAa,aAAcjN,EAAOiI,YAClCgF,EAAa,cAAejN,EAAO2M,YACnCM,EAAa,gBAAiBjN,EAAO4M,cACrCK,EAAa,eAAgBjN,EAAO6M,aA1BpCxK,KAvCEjB,QAAQO,KAAK,WAADoI,OAAY2R,EAAQ,eAbhC,GACF,IA0JF,WACE,IACE,IAAMQ,EAAeC,aAAaC,QAAQ,sBACtCF,IACFlP,EAAc1M,KAAKC,MAAM2b,GACzB9a,QAAQC,IAAI,uBAAwBnD,OAAOkU,KAAKpF,IAEpD,CAAE,MAAO/B,GACP7J,QAAQ6J,MAAM,+BAAgCA,EAChD,CACF,CAjKEoR,EACF,CMjBEC,GJxDAlb,QAAQC,IAAI,6BCGZD,QAAQC,IAAI,sCAGZiJ,OAAOiD,gBAAkBA,ECJzBnM,QAAQC,IAAI,+BAQNiX,EAAahX,SAASC,eAAe,gBACrCgX,EAAqBjX,SAASC,eAAe,yBAE/C+W,GACFA,EAAWzW,iBAAiB,QAAS6U,GAGnC6B,GACFA,EAAmB1W,iBAAiB,QAAS6U,GEwDzCyB,EAAa7W,SAASC,eAAe,eACrC6W,EAAgB9W,SAASC,eAAe,kBACxC8W,EAAmB/W,SAASC,eAAe,qBAE7C4W,GACFA,EAAWtW,iBAAiB,UAAU,WACpC,IAAM0a,EAAiBnc,KAAKoc,QAC5B9W,EAASsP,WAAauH,EAAiB,WAAa,QAEhDnE,GAAiBC,IACnBjX,QAAQC,IAAI,gBAAD0I,OAAiBrE,EAASsP,WAAU,UAC/CoD,EAAchR,MAAMqF,QAAU8P,EAAiB,OAAS,QACxDlE,EAAiBjR,MAAMqF,QAAU8P,EAAiB,QAAU,OAGxD7W,EAASwR,eAAiBxR,EAASsS,gBACrC3V,IAGN,IAKJ,WACE,IAAMqW,EAAcpX,SAASC,eAAe,gBACtCoX,EAAcrX,SAASC,eAAe,gBACtCqX,EAAWtX,SAASC,eAAe,aAErCmX,GACFA,EAAY7W,iBAAiB,SAAS,WAChCyI,OAAOC,aACTD,OAAOC,YAAY6O,cAAc,WAErC,IAGET,GACFA,EAAY9W,iBAAiB,SAAS,WAChCyI,OAAOC,aACTD,OAAOC,YAAY6O,cAAc,WAErC,IAGER,GACFA,EAAS/W,iBAAiB,SAAS,WAC7ByI,OAAOC,aACTD,OAAOC,YAAY6O,cAAc,QAErC,GAEJ,CA3DEqD,GAEArb,QAAQC,IAAI,oCACd","sources":["webpack://lots-app/webpack/bootstrap","webpack://lots-app/webpack/runtime/define property getters","webpack://lots-app/webpack/runtime/hasOwnProperty shorthand","webpack://lots-app/./lots-app/src/components/curves/curves-panel.js","webpack://lots-app/./lots-app/src/components/basic-corrections/basic-corrections.js","webpack://lots-app/./lots-app/src/components/creative/creative-effects.js","webpack://lots-app/./lots-app/src/components/color-wheels/color-wheels.js","webpack://lots-app/./lots-app/src/components/image-preview/preview-controller.js","webpack://lots-app/./lots-app/src/components/presets/presets.js","webpack://lots-app/./lots-app/src/components/common/ui-elements.js","webpack://lots-app/./lots-app/src/services/file-service.js","webpack://lots-app/./lots-app/src/services/lut-generator.js","webpack://lots-app/./lots-app/src/services/export-service.js","webpack://lots-app/./lots-app/src/models/image-processor.js","webpack://lots-app/./lots-app/src/app.js","webpack://lots-app/./lots-app/src/components/image-preview/image-comparison.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// components/curves/curves-panel.js\n// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Default curve parameters\nexport const defaultCurveParams = {\n  rgb: [\n    { x: 0, y: 0 },      // Shadow point\n    { x: 0.25, y: 0.25 }, // Quarter tone\n    { x: 0.5, y: 0.5 },   // Midtone\n    { x: 0.75, y: 0.75 }, // Three-quarter tone\n    { x: 1, y: 1 }       // Highlight point\n  ],\n  red: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  green: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  blue: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  currentChannel: 'rgb'\n};\n\n// Check if a curve is linear (no adjustments)\nexport function isLinearCurve(points) {\n  for (let i = 0; i < points.length; i++) {\n    const expectedY = points[i].x;\n    if (Math.abs(points[i].y - expectedY) > 0.01) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Interpolate a value through a curve\nexport function interpolateCurve(points, value) {\n  // Handle edge cases\n  if (value <= 0) return points[0].y;\n  if (value >= 1) return points[points.length - 1].y;\n  \n  // Find the segment containing the value\n  let i = 0;\n  while (i < points.length - 1 && points[i + 1].x < value) {\n    i++;\n  }\n  \n  // Linear interpolation between points\n  const p1 = points[i];\n  const p2 = points[i + 1];\n  const t = (value - p1.x) / (p2.x - p1.x);\n  \n  return p1.y + t * (p2.y - p1.y);\n}\n\n// Main Curves class\nclass CurvesPanel {\n  constructor(params = {}) {\n    // Merge provided params with defaults\n    this.params = {\n      ...JSON.parse(JSON.stringify(defaultCurveParams)),\n      ...params\n    };\n    \n    // DOM references\n    this.curveCanvas = null;\n    this.curveCtx = null;\n    this.channelButtons = {};\n    this.activePoint = null;\n    \n    // Bind methods to maintain correct context\n    this.init = this.init.bind(this);\n    this.drawCurve = this.drawCurve.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.resetCurve = this.resetCurve.bind(this);\n  }\n  \n  // Initialize the curves panel UI\n  init() {\n    console.log('Initializing Curves Panel');\n    \n    // Get references to curve UI elements\n    this.curveCanvas = document.getElementById('curve-canvas');\n    \n    if (!this.curveCanvas) {\n      console.warn('Curve canvas not found');\n      return;\n    }\n    \n    this.curveCtx = this.curveCanvas.getContext('2d');\n    \n    // Get channel selector buttons\n    this.channelButtons = {\n      rgb: document.getElementById('curve-rgb'),\n      red: document.getElementById('curve-red'),\n      green: document.getElementById('curve-green'),\n      blue: document.getElementById('curve-blue')\n    };\n    \n    // Set up event listeners\n    this.setupEvents();\n    \n    // Initial UI setup\n    this.updateChannelButtonUI();\n    \n    // Initialize by drawing the curve\n    this.drawCurve();\n  }\n  \n  // Set up all event listeners\n  setupEvents() {\n    // Ensure methods are bound\n    if (!this.curveCanvas) return;\n    \n    // Canvas event handling\n    this.curveCanvas.addEventListener('mousedown', this.handleMouseDown);\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n    \n    // Channel selector buttons\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        btn.addEventListener('click', () => {\n          // Set active channel\n          this.params.currentChannel = channel;\n          \n          // Update UI\n          this.updateChannelButtonUI();\n          this.drawCurve();\n        });\n      }\n    }\n    \n    // Reset button\n    const resetCurveBtn = document.getElementById('reset-curve-btn');\n    if (resetCurveBtn) {\n      resetCurveBtn.addEventListener('click', this.resetCurve);\n    }\n  }\n  \n  // Update channel button UI\n  updateChannelButtonUI() {\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        if (channel === this.params.currentChannel) {\n          btn.classList.add('active');\n        } else {\n          btn.classList.remove('active');\n        }\n      }\n    }\n  }\n  \n  // Reset curve to linear\n  resetCurve() {\n    console.log('Resetting curve');\n    \n    // Reset current channel to default linear curve\n    this.params[this.params.currentChannel] = \n      JSON.parse(JSON.stringify(defaultCurveParams[this.params.currentChannel]));\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply to image if available\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Draw the curve onto the canvas\n  drawCurve() {\n    if (!this.curveCanvas || !this.curveCtx) {\n      console.warn('Canvas not ready for drawing');\n      return;\n    }\n    \n    const width = this.curveCanvas.width;\n    const height = this.curveCanvas.height;\n    \n    // Clear canvas\n    this.curveCtx.clearRect(0, 0, width, height);\n    \n    // Get current channel curve points\n    const points = this.params[this.params.currentChannel];\n    \n    // Draw curve background\n    this.curveCtx.fillStyle = 'rgba(20, 20, 20, 0.3)';\n    this.curveCtx.fillRect(0, 0, width, height);\n    \n    // Set curve color based on channel\n    let curveColor;\n    switch (this.params.currentChannel) {\n      case 'red':\n        curveColor = 'rgba(255, 100, 100, 0.8)';\n        break;\n      case 'green':\n        curveColor = 'rgba(100, 255, 100, 0.8)';\n        break;\n      case 'blue':\n        curveColor = 'rgba(100, 100, 255, 0.8)';\n        break;\n      default:\n        curveColor = 'rgba(255, 255, 255, 0.8)';\n    }\n    \n    // Start drawing the curve\n    this.curveCtx.beginPath();\n    \n    // Move to first point\n    this.curveCtx.moveTo(points[0].x * width, (1 - points[0].y) * height);\n    \n    // Draw line segments\n    for (let i = 1; i < points.length; i++) {\n      this.curveCtx.lineTo(points[i].x * width, (1 - points[i].y) * height);\n    }\n    \n    // Style and stroke the path\n    this.curveCtx.strokeStyle = curveColor;\n    this.curveCtx.lineWidth = 2;\n    this.curveCtx.stroke();\n    \n    // Draw control points\n    points.forEach((point, index) => {\n      this.curveCtx.beginPath();\n      this.curveCtx.arc(\n        point.x * width,\n        (1 - point.y) * height,\n        5,\n        0,\n        Math.PI * 2\n      );\n      \n      // Style based on whether it's an endpoint (fixed) or not\n      if (index === 0 || index === points.length - 1) {\n        this.curveCtx.fillStyle = 'rgba(150, 150, 150, 0.8)';\n      } else {\n        this.curveCtx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n      }\n      \n      this.curveCtx.fill();\n      this.curveCtx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n      this.curveCtx.lineWidth = 1;\n      this.curveCtx.stroke();\n    });\n  }\n  \n  // Handle mouse down on curve\n  handleMouseDown(e) {\n    if (!this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Get current channel points\n    const points = this.params[this.params.currentChannel];\n    \n    // Find closest control point\n    let minDistance = Infinity;\n    let closestPoint = null;\n    let pointIndex = -1;\n    \n    points.forEach((point, index) => {\n      const dx = point.x - x;\n      const dy = point.y - y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance < minDistance) {\n        minDistance = distance;\n        closestPoint = point;\n        pointIndex = index;\n      }\n    });\n    \n    // If close enough to a point, make it active\n    if (minDistance < 0.05) {\n      // Don't allow moving first or last point\n      if (pointIndex > 0 && pointIndex < points.length - 1) {\n        this.activePoint = {\n          point: closestPoint,\n          index: pointIndex\n        };\n      }\n    }\n  }\n  \n  // Handle mouse move for curve editing\n  handleMouseMove(e) {\n    if (!this.activePoint || !this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    let x = (e.clientX - rect.left) / rect.width;\n    let y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Clamp values\n    x = Math.max(0, Math.min(1, x));\n    y = Math.max(0, Math.min(1, y));\n    \n    const points = this.params[this.params.currentChannel];\n    const index = this.activePoint.index;\n    \n    // Enforce x ordering and prevent moving end points\n    const prevX = points[index - 1].x;\n    const nextX = points[index + 1].x;\n    \n    // Ensure point stays between its neighbors\n    x = Math.max(prevX + 0.01, Math.min(nextX - 0.01, x));\n    \n    // Update point\n    points[index].x = x;\n    points[index].y = y;\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply adjustments if function exists\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Handle mouse up for curve editing\n  handleMouseUp() {\n    // Clear active point\n    this.activePoint = null;\n  }\n  \n  // Apply curves to RGB values\n  applyCurves(r, g, b) {\n    // Apply RGB curve\n    const rgbPoints = this.params.rgb;\n    \n    r = interpolateCurve(rgbPoints, r);\n    g = interpolateCurve(rgbPoints, g);\n    b = interpolateCurve(rgbPoints, b);\n    \n    // Apply individual channel curves if not linear\n    if (!isLinearCurve(this.params.red)) {\n      r = interpolateCurve(this.params.red, r);\n    }\n    \n    if (!isLinearCurve(this.params.green)) {\n      g = interpolateCurve(this.params.green, g);\n    }\n    \n    if (!isLinearCurve(this.params.blue)) {\n      b = interpolateCurve(this.params.blue, b);\n    }\n    \n    return { r, g, b };\n  }\n  \n  // Apply curves to an entire image\n  applyCurvesToImage(imageData) {\n    const data = imageData.data;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      // Get RGB values and normalize to 0-1\n      let r = data[i] / 255;\n      let g = data[i + 1] / 255;\n      let b = data[i + 2] / 255;\n      \n      // Apply curves\n      const result = this.applyCurves(r, g, b);\n      \n      // Convert back to 0-255 range\n      data[i] = Math.round(result.r * 255);\n      data[i + 1] = Math.round(result.g * 255);\n      data[i + 2] = Math.round(result.b * 255);\n      // Alpha remains unchanged\n    }\n    \n    return imageData;\n  }\n}\n\n// Single instance for the app\nlet curvesPanel = null;\n\n// Initialize the curves panel\nexport function initCurvesPanel() {\n  console.log('Setting up Curves Panel');\n  \n  // Initialize curves parameters in app state if not present\n  if (!appState.currentLutParams.curves) {\n    appState.currentLutParams.curves = JSON.parse(JSON.stringify(defaultCurveParams));\n  }\n  \n  // Create the curves panel with parameters from app state\n  curvesPanel = new CurvesPanel(appState.currentLutParams.curves);\n  \n  // Set up section toggle\n  setupSectionToggle('curves-toggle', 'curves-section');\n  \n  // Initialize when DOM is ready\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    setTimeout(() => curvesPanel.init(), 0);\n  } else {\n    document.addEventListener('DOMContentLoaded', () => curvesPanel.init());\n  }\n  \n  // Store reference in app state\n  appState.curvesPanel = curvesPanel;\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Apply curves to an image\nexport function applyCurvesToImage(imageData) {\n  if (curvesPanel) {\n    return curvesPanel.applyCurvesToImage(imageData);\n  }\n  return imageData;\n}","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Basic Corrections component\nexport function initBasicCorrections() {\n  console.log('Initializing Basic Corrections');\n  \n  // Initialize basic correction parameters if not present\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {\n      contrast: 1.2,\n      saturation: 1.15,\n      redBalance: 1.05,\n      greenBalance: 0.95,\n      blueBalance: 1.1\n    };\n  }\n  \n  // Get slider references\n  const contrastSlider = document.getElementById('contrast');\n  const saturationSlider = document.getElementById('saturation');\n  const redBalanceSlider = document.getElementById('red-balance');\n  const greenBalanceSlider = document.getElementById('green-balance');\n  const blueBalanceSlider = document.getElementById('blue-balance');\n  \n  // Display value references\n  const contrastValue = document.getElementById('contrast-value');\n  const saturationValue = document.getElementById('saturation-value');\n  const redBalanceValue = document.getElementById('red-balance-value');\n  const greenBalanceValue = document.getElementById('green-balance-value');\n  const blueBalanceValue = document.getElementById('blue-balance-value');\n  \n  // Set up event listeners for sliders\n  setupSlider(contrastSlider, contrastValue, 'contrast');\n  setupSlider(saturationSlider, saturationValue, 'saturation');\n  setupSlider(redBalanceSlider, redBalanceValue, 'redBalance');\n  setupSlider(greenBalanceSlider, greenBalanceValue, 'greenBalance');\n  setupSlider(blueBalanceSlider, blueBalanceValue, 'blueBalance');\n  \n  // Initialize LUT title and size controls\n  initTitleAndSizeControls();\n}\n\n// Set up a slider control with its value display\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) return;\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.basic[paramName];\n  valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.basic[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Initialize title and LUT size controls\nfunction initTitleAndSizeControls() {\n  const titleInput = document.getElementById('title');\n  const lutSizeSelect = document.getElementById('lut-size');\n  \n  if (titleInput) {\n    // Set initial value\n    titleInput.value = appState.currentLutParams.title || \"Signature Look\";\n    \n    // Add event listener\n    titleInput.addEventListener('input', () => {\n      appState.currentLutParams.title = titleInput.value;\n    });\n  }\n  \n  if (lutSizeSelect) {\n    // Set initial value\n    lutSizeSelect.value = appState.currentLutParams.size || \"32\";\n    \n    // Add event listener\n    lutSizeSelect.addEventListener('change', () => {\n      appState.currentLutParams.size = parseInt(lutSizeSelect.value);\n    });\n  }\n}\n\n// Apply the basic corrections to an image\nexport function applyBasicCorrections(imageData) {\n  const params = appState.currentLutParams.basic;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply contrast\n    r = applyContrast(r, params.contrast);\n    g = applyContrast(g, params.contrast);\n    b = applyContrast(b, params.contrast);\n    \n    // Apply color balance\n    r *= params.redBalance;\n    g *= params.greenBalance;\n    b *= params.blueBalance;\n    \n    // Apply saturation\n    if (params.saturation !== 1.0) {\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      r = luminance + params.saturation * (r - luminance);\n      g = luminance + params.saturation * (g - luminance);\n      b = luminance + params.saturation * (b - luminance);\n    }\n    \n    // Apply shadow/highlight adjustments (if defined)\n    if (params.shadowsShift && params.highlightsShift) {\n      let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n      let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n      \n      r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n      g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n      b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Helper function to apply contrast\nfunction applyContrast(value, contrast) {\n  return 0.5 + (value - 0.5) * contrast;\n}\n\n// Export functions and constants\nexport {\n    applyContrast\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Creative Effects component\nexport function initCreativeEffects() {\n  console.log('Initializing Creative Effects');\n  \n  // Initialize creative effect parameters if not present\n  if (!appState.currentLutParams.creative) {\n    appState.currentLutParams.creative = {\n      fadedFilm: 0,\n      vibrance: 0\n    };\n  }\n  \n  // Get slider references\n  const fadedFilmSlider = document.getElementById('faded-film');\n  const vibranceSlider = document.getElementById('vibrance');\n  \n  // Display value references\n  const fadedFilmValue = document.getElementById('faded-film-value');\n  const vibranceValue = document.getElementById('vibrance-value');\n  \n  // Set up event listeners for sliders\n  setupSlider(fadedFilmSlider, fadedFilmValue, 'fadedFilm');\n  setupSlider(vibranceSlider, vibranceValue, 'vibrance');\n  \n  // Set up section toggle\n  setupSectionToggle('creative-toggle', 'creative-section');\n}\n\n// Set up a slider control with its value display\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) return;\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.creative[paramName];\n  valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.creative[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Apply creative effects to image data\nexport function applyCreativeEffects(imageData) {\n  const params = appState.currentLutParams.creative;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply vibrance if enabled\n    if (params.vibrance !== 0) {\n      const result = applyVibrance(r, g, b, params.vibrance / 150);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Apply faded film effect if enabled\n    if (params.fadedFilm > 0) {\n      const result = applyFadedFilm(r, g, b, params.fadedFilm / 100);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply vibrance adjustment\nfunction applyVibrance(r, g, b, amount) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate saturation level to determine vibrance effect\n  const maxChannel = Math.max(r, g, b);\n  const minChannel = Math.min(r, g, b);\n  const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n  \n  // Apply vibrance (affects less saturated colors more)\n  const vibranceEffect = amount * (1 - saturationLevel);\n  \n  // Apply the effect to each channel\n  r = luminance + (r - luminance) * (1 + vibranceEffect);\n  g = luminance + (g - luminance) * (1 + vibranceEffect);\n  b = luminance + (b - luminance) * (1 + vibranceEffect);\n  \n  return { r, g, b };\n}\n\n// Apply faded film effect\nfunction applyFadedFilm(r, g, b, amount) {\n  // Faded film effect reduces contrast and slightly shifts the black point\n  const fadeAmount = amount * 0.5; // Adjust the strength\n  \n  // Reduce contrast\n  r = r * (1 - fadeAmount) + 0.5 * fadeAmount;\n  g = g * (1 - fadeAmount) + 0.5 * fadeAmount;\n  b = b * (1 - fadeAmount) + 0.5 * fadeAmount;\n  \n  // Add a slight shift to the black point\n  const blackShift = amount * 0.1;\n  r += blackShift;\n  g += blackShift;\n  b += blackShift;\n  \n  return { r, g, b };\n}\n\n// Export functions and utilities\nexport {\n  applyVibrance,\n  applyFadedFilm\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Color Wheels component\nexport function initColorWheels() {\n  console.log('Initializing Color Wheels');\n  \n  // Initialize color wheel parameters if not present\n  if (!appState.currentLutParams.colorWheels) {\n    appState.currentLutParams.colorWheels = {\n      shadowTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      highlightTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      tintBalance: 0 // Range: -150 to 150\n    };\n  }\n  \n  // Get DOM references\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  // Setup color wheels\n  if (shadowColorWheel) {\n    setupColorWheel(shadowColorWheel, 'shadowTint');\n  }\n  \n  if (highlightColorWheel) {\n    setupColorWheel(highlightColorWheel, 'highlightTint');\n  }\n  \n  // Setup tint balance slider\n  if (tintBalanceSlider && tintBalanceValue) {\n    // Set initial value\n    tintBalanceSlider.value = appState.currentLutParams.colorWheels.tintBalance;\n    tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n    \n    // Add event listener\n    tintBalanceSlider.addEventListener('input', () => {\n      appState.currentLutParams.colorWheels.tintBalance = parseFloat(tintBalanceSlider.value);\n      tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n      applyImageAdjustments();\n    });\n  }\n  \n  // Setup reset button\n  const resetButton = document.querySelector('.reset-btn[data-section=\"colorWheels\"]');\n  if (resetButton) {\n    resetButton.addEventListener('click', resetColorWheels);\n  }\n  \n  // Set up section toggle\n  setupSectionToggle('color-wheels-toggle', 'color-wheels-section');\n}\n\n// Set up a color wheel control\nfunction setupColorWheel(wheel, paramName) {\n  if (!wheel) return;\n  \n  // Clear any existing content\n  wheel.innerHTML = '';\n  \n  // Create a canvas-based color wheel\n  const canvas = document.createElement('canvas');\n  canvas.width = wheel.clientWidth || 80;\n  canvas.height = wheel.clientHeight || 80;\n  wheel.appendChild(canvas);\n  \n  // Use CSS-based color wheel instead of canvas\n  wheel.style.background = \"conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  wheel.style.backgroundImage = \"radial-gradient(circle at center, white 0%, rgba(255, 255, 255, 0) 70%), conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  \n  // Add indicator for current position\n  const indicator = document.createElement('div');\n  indicator.className = 'wheel-indicator';\n  wheel.appendChild(indicator);\n  \n  // Get current tint value\n  const tintValue = appState.currentLutParams.colorWheels[paramName];\n  \n  // Position indicator based on current tint value\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  const maxDistance = Math.min(centerX, centerY) - 2;\n  \n  // Calculate position from tint values\n  // Convert from 0-255 range to -1 to 1 range (128 is center/neutral)\n  const normalizedR = (tintValue.r - 128) / 128;\n  const normalizedG = (tintValue.g - 128) / 128;\n  const normalizedB = (tintValue.b - 128) / 128;\n  \n  // Estimate hue and saturation from RGB (simplified)\n  let saturation = Math.sqrt(normalizedR*normalizedR + normalizedG*normalizedG + normalizedB*normalizedB);\n  saturation = Math.min(1, saturation); // Clamp to 1\n  \n  // This is a simplified conversion - a complete RGB to HSV would be more accurate\n  let hue = 0;\n  if (saturation > 0) {\n    // Rough estimation of hue angle based on RGB values\n    hue = Math.atan2(normalizedG, normalizedR);\n    if (normalizedB > Math.max(normalizedR, normalizedG)) {\n      hue = Math.PI + Math.atan2(normalizedB, -normalizedR);\n    }\n    // Convert to 0-2PI range\n    if (hue < 0) hue += 2 * Math.PI;\n  }\n  \n  // Calculate x,y position on wheel\n  const x = Math.cos(hue) * saturation * maxDistance;\n  const y = Math.sin(hue) * saturation * maxDistance;\n  \n  // Position indicator\n  setWheelIndicatorPosition(wheel, indicator, x, y);\n  \n  // Track if mouse is down\n  let isMouseDown = false;\n  \n  // Handle mouse interactions\n  wheel.addEventListener('mousedown', (e) => {\n    isMouseDown = true;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mousemove', (e) => {\n    if (!isMouseDown) return;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mouseup', () => {\n    isMouseDown = false;\n  });\n  \n  wheel.addEventListener('click', updateWheelFromEvent);\n  \n  function updateWheelFromEvent(e) {\n    const rect = wheel.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    \n    // Get coordinates relative to center\n    const x = e.clientX - rect.left - centerX;\n    const y = e.clientY - rect.top - centerY;\n    \n    // Calculate distance from center (for saturation)\n    const distance = Math.sqrt(x * x + y * y);\n    const maxDistance = Math.min(centerX, centerY) - 2;\n    \n    // Limit to wheel boundary\n    if (distance <= maxDistance) {\n      // Update indicator position\n      setWheelIndicatorPosition(wheel, indicator, x, y);\n      \n      // Calculate angle (for hue)\n      let angle = Math.atan2(y, x);\n      if (angle < 0) angle += 2 * Math.PI;\n      \n      // Normalize distance to 0-1\n      const normalizedDistance = distance / maxDistance;\n      \n      // Calculate color based on position\n      const hue = angle / (2 * Math.PI);\n      const saturation = normalizedDistance;\n      const rgb = hsvToRgb(hue, saturation, 1.0);\n      \n      // Map RGB (0-255) to tint adjustments (64-192, where 128 is neutral)\n      // We use a narrower range to avoid extreme adjustments\n      const mappedR = Math.round(128 + (rgb.r - 128) * saturation);\n      const mappedG = Math.round(128 + (rgb.g - 128) * saturation);\n      const mappedB = Math.round(128 + (rgb.b - 128) * saturation);\n      \n      // Update the parameter\n      appState.currentLutParams.colorWheels[paramName] = { r: mappedR, g: mappedG, b: mappedB };\n      \n      // Apply the adjustment to the image\n      applyImageAdjustments();\n    }\n  }\n}\n\n// Reset color wheels to default values\nfunction resetColorWheels() {\n  // Reset to neutral tints\n  appState.currentLutParams.colorWheels.shadowTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.highlightTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.tintBalance = 0;\n  \n  // Update UI\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  if (tintBalanceSlider) tintBalanceSlider.value = 0;\n  if (tintBalanceValue) tintBalanceValue.textContent = '0.0';\n  \n  // Reset wheel indicators\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  \n  if (shadowColorWheel) {\n    const shadowIndicator = shadowColorWheel.querySelector('.wheel-indicator');\n    if (shadowIndicator) {\n      setWheelIndicatorPosition(shadowColorWheel, shadowIndicator, 0, 0);\n    }\n  }\n  \n  if (highlightColorWheel) {\n    const highlightIndicator = highlightColorWheel.querySelector('.wheel-indicator');\n    if (highlightIndicator) {\n      setWheelIndicatorPosition(highlightColorWheel, highlightIndicator, 0, 0);\n    }\n  }\n  \n  // Apply changes to image\n  applyImageAdjustments();\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Helper for setting wheel indicator position\nfunction setWheelIndicatorPosition(wheel, indicator, x, y) {\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  \n  indicator.style.left = `${centerX + x}px`;\n  indicator.style.top = `${centerY + y}px`;\n}\n\n// Convert HSV (0-1 ranges) to RGB (0-255)\nfunction hsvToRgb(h, s, v) {\n  let r, g, b;\n  \n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  \n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  \n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\n\n// Apply color wheel tinting to an image\nexport function applyColorWheelAdjustments(imageData) {\n  const params = appState.currentLutParams.colorWheels;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply color wheels tinting\n    const result = applyColorWheels(r, g, b, params.shadowTint, params.highlightTint, params.tintBalance / 150);\n    \n    // Clamp values to valid range\n    data[i] = Math.round(Math.min(1.0, Math.max(0.0, result.r)) * 255);\n    data[i + 1] = Math.round(Math.min(1.0, Math.max(0.0, result.g)) * 255);\n    data[i + 2] = Math.round(Math.min(1.0, Math.max(0.0, result.b)) * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply color wheels (shadow and highlight tinting)\nfunction applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate shadow and highlight influence based on luminance\n  let shadowInfluence = Math.pow(1 - luminance, 2);\n  let highlightInfluence = Math.pow(luminance, 2);\n  \n  // Apply tint balance to adjust the crossover point\n  if (tintBalance > 0) {\n    // Shift influence towards highlights\n    shadowInfluence *= (1 - tintBalance);\n    highlightInfluence = highlightInfluence * (1 - tintBalance) + tintBalance;\n  } else if (tintBalance < 0) {\n    // Shift influence towards shadows\n    highlightInfluence *= (1 + tintBalance);\n    shadowInfluence = shadowInfluence * (1 + tintBalance) - tintBalance;\n  }\n  \n  // Convert shadow tint from 0-255 to -1 to 1 range (128 is neutral)\n  const shadowR = (shadowTint.r - 128) / 128;\n  const shadowG = (shadowTint.g - 128) / 128;\n  const shadowB = (shadowTint.b - 128) / 128;\n  \n  // Convert highlight tint from 0-255 to -1 to 1 range (128 is neutral)\n  const highlightR = (highlightTint.r - 128) / 128;\n  const highlightG = (highlightTint.g - 128) / 128;\n  const highlightB = (highlightTint.b - 128) / 128;\n  \n  // Apply shadow tint\n  r += shadowR * shadowInfluence * 0.5;\n  g += shadowG * shadowInfluence * 0.5;\n  b += shadowB * shadowInfluence * 0.5;\n  \n  // Apply highlight tint\n  r += highlightR * highlightInfluence * 0.5;\n  g += highlightG * highlightInfluence * 0.5;\n  b += highlightB * highlightInfluence * 0.5;\n  \n  return { r, g, b };\n}\n\n// Export functions for use in other modules\nexport {\n  hsvToRgb,\n  applyColorWheels\n};","// Import utilities if needed\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Keep track of slider position\nlet currentSliderPosition = 50;\n\n// Initialize the preview controller\nexport function initPreviewController() {\n  console.log('Initializing Preview Controller');\n  \n  // Get DOM elements\n  const originalImage = document.getElementById('original-image');\n  const processedImage = document.getElementById('processed-image');\n  const originalPlaceholder = document.getElementById('original-placeholder');\n  const comparisonContainer = document.getElementById('comparison-container');\n  const imageUploadBtn = document.getElementById('image-upload-btn');\n  \n  // Store references to the DOM elements in the global app state\n  appState.originalImageElement = originalImage;\n  appState.processedImageElement = processedImage;\n  \n  // Set up view toggle buttons\n  setupViewToggleButtons();\n  \n  // Set up image upload button\n  if (imageUploadBtn) {\n    imageUploadBtn.addEventListener('click', handleImageUpload);\n  }\n  \n  // Set up image load handler\n  if (originalImage) {\n    originalImage.onload = () => {\n      console.log(\"Image loaded successfully\");\n      \n      // Store the image in app state\n      appState.originalImage = originalImage;\n      appState.processedImage = processedImage;\n      \n      // Hide placeholder, show comparison container\n      if (originalPlaceholder) originalPlaceholder.style.display = 'none';\n      if (comparisonContainer) comparisonContainer.style.display = 'block';\n      \n      // Initialize comparison slider\n      initComparisonSlider();\n      \n      // Apply adjustments to process the image\n      applyImageAdjustments();\n    };\n  }\n}\n\n// Set up view toggle buttons (split, before, after)\nfunction setupViewToggleButtons() {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  \n  if (viewSplitBtn) {\n    viewSplitBtn.addEventListener('click', () => {\n      setViewMode('split');\n    });\n  }\n  \n  if (viewBeforeBtn) {\n    viewBeforeBtn.addEventListener('click', () => {\n      setViewMode('before');\n    });\n  }\n  \n  if (viewAfterBtn) {\n    viewAfterBtn.addEventListener('click', () => {\n      setViewMode('after');\n    });\n  }\n}\n\n// Handle image upload functionality\nfunction handleImageUpload() {\n  console.log(\"Image upload button clicked\");\n  \n  // In Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    window.electronAPI.openFileDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp'] }]\n    }).then(imagePath => {\n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        appState.originalImageElement.src = `file://${imagePath}`;\n      }\n    }).catch(error => {\n      console.error(\"Error in Electron file dialog:\", error);\n      fallbackFileUpload();\n    });\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    fallbackFileUpload();\n  }\n}\n\n// Fallback file upload function using HTML input for browser context\nfunction fallbackFileUpload() {\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = 'image/*';\n  \n  input.addEventListener('change', function(e) {\n    if (this.files && this.files[0]) {\n      const file = this.files[0];\n      console.log(\"Selected file:\", file.name);\n      \n      const reader = new FileReader();\n      reader.onload = function(event) {\n        appState.originalImageElement.src = event.target.result;\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  });\n  \n  input.click();\n}\n\n// Initialize comparison slider functionality\nfunction initComparisonSlider() {\n  const comparisonContainer = document.getElementById('comparison-container');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  let isSliding = false;\n  let startX = 0;\n  let startPercent = 50;\n\n  // Function to update slider position\n  function updateSliderPosition(percent) {\n    percent = Math.max(0, Math.min(100, percent));\n    \n    // Store the current position\n    currentSliderPosition = percent;\n    \n    // Update the clip-path of the original image container\n    originalImageContainer.style.clipPath = `inset(0 ${100 - percent}% 0 0)`;\n    \n    // Update slider position\n    comparisonSlider.style.left = percent + '%';\n    \n    // Update vertical divider position\n    verticalDivider.style.left = percent + '%';\n  }\n\n  // Handle mouse events\n  comparisonSlider.addEventListener('mousedown', (e) => {\n    isSliding = true;\n    startX = e.clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('mousemove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('mouseup', () => {\n    isSliding = false;\n  });\n\n  // Handle touch events\n  comparisonSlider.addEventListener('touchstart', (e) => {\n    isSliding = true;\n    startX = e.touches[0].clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('touchmove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.touches[0].clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('touchend', () => {\n    isSliding = false;\n  });\n\n  // Click anywhere in container to move slider\n  comparisonContainer.addEventListener('click', (e) => {\n    if (e.target.closest('.toggle-view') || e.target.closest('.slider-handle')) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const percent = (clickX / rect.width) * 100;\n    \n    updateSliderPosition(percent);\n  });\n\n  // Initialize with 50/50 split or restore previous position\n  updateSliderPosition(currentSliderPosition);\n}\n\n// Set view mode (split, before, after)\nfunction setViewMode(mode, resetPosition = true) {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  // Reset all buttons\n  viewSplitBtn.classList.remove('active');\n  viewBeforeBtn.classList.remove('active');\n  viewAfterBtn.classList.remove('active');\n  \n  switch (mode) {\n    case 'split':\n      viewSplitBtn.classList.add('active');\n      \n      // If resetPosition is true, set to 50/50 split; otherwise keep current position\n      if (resetPosition) {\n        currentSliderPosition = 50;\n      }\n      \n      // Position elements based on current slider position\n      originalImageContainer.style.clipPath = `inset(0 ${100 - currentSliderPosition}% 0 0)`;\n      verticalDivider.style.left = `${currentSliderPosition}%`;\n      comparisonSlider.style.left = `${currentSliderPosition}%`;\n      \n      // Make everything visible\n      comparisonSlider.style.display = 'block';\n      originalImageContainer.style.display = 'block';\n      verticalDivider.style.display = 'block'; // Show divider\n      break;\n      \n    case 'before':\n      viewBeforeBtn.classList.add('active');\n      \n      // Show full original image\n      originalImageContainer.style.clipPath = 'inset(0 0 0 0)';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      originalImageContainer.style.display = 'block';\n      break;\n      \n    case 'after':\n      viewAfterBtn.classList.add('active');\n      \n      // Hide original image completely\n      originalImageContainer.style.display = 'none';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      break;\n  }\n}\n\n// Export functions that may be needed by other modules\nexport {\n  setViewMode,\n  currentSliderPosition\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Define built-in presets\nconst builtInPresets = {\n  \"custom\": {\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0]\n  },\n  \"warm\": {\n    contrast: 1.1,\n    saturation: 0.9,\n    redBalance: 1.15,\n    greenBalance: 0.95,\n    blueBalance: 0.85,\n    shadowsShift: [0.08, 0.02, -0.05],\n    highlightsShift: [0.05, 0.0, -0.05]\n  },\n  \"cool\": {\n    contrast: 1.3,\n    saturation: 0.85,\n    redBalance: 0.9,\n    greenBalance: 1.0,\n    blueBalance: 1.2,\n    shadowsShift: [-0.03, 0.0, 0.08],\n    highlightsShift: [0.0, 0.0, 0.03]\n  },\n  \"bw\": {\n    contrast: 1.5,\n    saturation: 0.0,\n    redBalance: 0.33,\n    greenBalance: 0.33,\n    blueBalance: 0.33,\n    shadowsShift: [-0.05, -0.05, -0.05],\n    highlightsShift: [0.05, 0.05, 0.05]\n  },\n  \"film\": {\n    contrast: 0.9,\n    saturation: 0.8,\n    redBalance: 1.1,\n    greenBalance: 1.05,\n    blueBalance: 0.9,\n    shadowsShift: [0.1, 0.05, 0.0],\n    highlightsShift: [-0.02, -0.02, 0.05]\n  }\n};\n\n// Initialize user presets\nlet userPresets = {};\n\n// Initialize the Presets component\nexport function initPresets() {\n  console.log('Initializing Presets');\n  \n  // Initialize preset buttons\n  const presetButtons = document.querySelectorAll('.preset-btn');\n  \n  presetButtons.forEach(btn => {\n    btn.addEventListener('click', () => {\n      // Remove active class from all buttons\n      presetButtons.forEach(b => b.classList.remove('active'));\n      \n      // Add active class to clicked button\n      btn.classList.add('active');\n      \n      // Get preset id from button id\n      const presetId = btn.id.split('-')[1];\n      \n      // Apply the preset\n      applyPreset(presetId);\n    });\n  });\n  \n  // Load any saved user presets\n  loadUserPresets();\n}\n\n// Apply a preset by its ID\nfunction applyPreset(presetId) {\n  // Look for preset in built-in presets first, then user presets\n  const preset = builtInPresets[presetId] || userPresets[presetId];\n  \n  if (!preset) {\n    console.warn(`Preset '${presetId}' not found`);\n    return;\n  }\n  \n  console.log(`Applying preset: ${presetId}`);\n  \n  // Store the active preset ID\n  appState.activePresetId = presetId;\n  \n  // Apply preset to basic parameters\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {};\n  }\n  \n  // Copy preset values to app state\n  appState.currentLutParams.basic.contrast = preset.contrast;\n  appState.currentLutParams.basic.saturation = preset.saturation;\n  appState.currentLutParams.basic.redBalance = preset.redBalance;\n  appState.currentLutParams.basic.greenBalance = preset.greenBalance;\n  appState.currentLutParams.basic.blueBalance = preset.blueBalance;\n  \n  // Set shadows and highlights shift if present\n  if (preset.shadowsShift) {\n    appState.currentLutParams.basic.shadowsShift = [...preset.shadowsShift];\n  }\n  \n  if (preset.highlightsShift) {\n    appState.currentLutParams.basic.highlightsShift = [...preset.highlightsShift];\n  }\n  \n  // If advanced parameters are in the preset, apply them too\n  if (preset.advanced) {\n    applyAdvancedPreset(preset.advanced);\n  }\n  \n  // Update UI sliders to reflect new values\n  updateSlidersFromPreset();\n  \n  // Apply adjustments to image\n  applyImageAdjustments();\n}\n\n// Apply advanced preset parameters if present\nfunction applyAdvancedPreset(advancedParams) {\n  // Apply Lumetri-style parameters if they exist in the preset\n  if (advancedParams.temperature !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.temperature = advancedParams.temperature;\n  }\n  \n  if (advancedParams.tint !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.tint = advancedParams.tint;\n  }\n  \n  // Add more advanced parameters as needed\n}\n\n// Update UI sliders to reflect preset values\nfunction updateSlidersFromPreset() {\n  const params = appState.currentLutParams.basic;\n  \n  // Update basic sliders\n  updateSlider('contrast', params.contrast);\n  updateSlider('saturation', params.saturation);\n  updateSlider('red-balance', params.redBalance);\n  updateSlider('green-balance', params.greenBalance);\n  updateSlider('blue-balance', params.blueBalance);\n}\n\n// Helper to update a slider and its value display\nfunction updateSlider(sliderId, value) {\n  const slider = document.getElementById(sliderId);\n  const valueDisplay = document.getElementById(`${sliderId}-value`);\n  \n  if (slider) {\n    slider.value = value;\n  }\n  \n  if (valueDisplay) {\n    valueDisplay.textContent = value.toFixed(2);\n  }\n}\n\n// Save the current settings as a user preset\nexport function saveCurrentAsPreset(presetName) {\n  if (!presetName) return;\n  \n  // Create a preset from current settings\n  const newPreset = {\n    contrast: appState.currentLutParams.basic.contrast,\n    saturation: appState.currentLutParams.basic.saturation,\n    redBalance: appState.currentLutParams.basic.redBalance,\n    greenBalance: appState.currentLutParams.basic.greenBalance,\n    blueBalance: appState.currentLutParams.basic.blueBalance\n  };\n  \n  // Add shadows and highlights shift if present\n  if (appState.currentLutParams.basic.shadowsShift) {\n    newPreset.shadowsShift = [...appState.currentLutParams.basic.shadowsShift];\n  }\n  \n  if (appState.currentLutParams.basic.highlightsShift) {\n    newPreset.highlightsShift = [...appState.currentLutParams.basic.highlightsShift];\n  }\n  \n  // Add advanced parameters if in advanced mode\n  if (appState.activeMode === 'advanced' && appState.currentLutParams.lumetri) {\n    newPreset.advanced = {\n      temperature: appState.currentLutParams.lumetri.temperature,\n      tint: appState.currentLutParams.lumetri.tint,\n      // Add other advanced parameters\n    };\n  }\n  \n  // Save to user presets\n  userPresets[presetName] = newPreset;\n  \n  // Save to local storage\n  saveUserPresets();\n  \n  // Add the preset to UI\n  addPresetToUI(presetName);\n  \n  console.log(`Saved preset: ${presetName}`);\n}\n\n// Add a user preset to the UI\nfunction addPresetToUI(presetName) {\n  // This function would add a new preset button to the UI\n  // Implementation would depend on how you want to handle user presets in the UI\n  console.log(`Added preset to UI: ${presetName}`);\n}\n\n// Save user presets to local storage\nfunction saveUserPresets() {\n  try {\n    localStorage.setItem('lotsAppUserPresets', JSON.stringify(userPresets));\n  } catch (error) {\n    console.error('Failed to save user presets:', error);\n  }\n}\n\n// Load user presets from local storage\nfunction loadUserPresets() {\n  try {\n    const savedPresets = localStorage.getItem('lotsAppUserPresets');\n    if (savedPresets) {\n      userPresets = JSON.parse(savedPresets);\n      console.log('Loaded user presets:', Object.keys(userPresets));\n    }\n  } catch (error) {\n    console.error('Failed to load user presets:', error);\n  }\n}\n\n// Export functions and constants\nexport {\n  builtInPresets,\n  userPresets,\n  applyPreset\n};","// components/common/ui-elements.js\n// Import app state if needed\nimport { appState } from '../../app.js';\n\n// Initialize common UI elements\nexport function initUiElements() {\n  console.log('Initializing UI Elements');\n  \n  // Initialize modal functionality\n  initModals();\n  \n  // Initialize expandable sections\n  initExpandableSections();\n  \n  // Initialize window control buttons\n  initWindowControls();\n}\n\n// Initialize modal dialogs\nfunction initModals() {\n  // Code Preview Modal\n  const viewCodeBtn = document.getElementById('view-code-btn');\n  const viewCodeBtnAdvanced = document.getElementById('view-code-btn-advanced');\n  const codeModal = document.getElementById('code-modal');\n  const closeModalBtn = document.getElementById('close-modal-btn');\n  \n  if (viewCodeBtn && codeModal) {\n    viewCodeBtn.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (viewCodeBtnAdvanced && codeModal) {\n    viewCodeBtnAdvanced.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (closeModalBtn) {\n    closeModalBtn.addEventListener('click', () => {\n      // Hide any open modal\n      const modals = document.querySelectorAll('.modal');\n      modals.forEach(modal => {\n        modal.style.display = 'none';\n      });\n    });\n  }\n  \n  // Close modals when clicking outside content\n  window.addEventListener('click', (e) => {\n    const modals = document.querySelectorAll('.modal');\n    modals.forEach(modal => {\n      if (e.target === modal) {\n        modal.style.display = 'none';\n      }\n    });\n  });\n}\n\n// Update LUT preview in code modal\nexport function updateLUTPreview(fullPreview = false) {\n  const lutPreview = document.getElementById('lut-preview');\n  if (!lutPreview) return;\n  \n  // Get LUT content from generator (to be implemented)\n  let lutContent = \"# LUT Preview will be generated here\";\n  \n  // In the future, we'll call the actual LUT generator:\n  if (window.generateCubeLUT) {\n    lutContent = window.generateCubeLUT();\n  }\n  \n  if (fullPreview) {\n    // Show the full LUT content in the modal\n    lutPreview.textContent = lutContent;\n  } else {\n    // Just show a preview sample\n    lutPreview.textContent = lutContent.slice(0, 500) + '...';\n  }\n}\n\n// Initialize expandable sections\nfunction initExpandableSections() {\n  // Define sections to initialize as expanded or collapsed\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section', expanded: true },\n    { toggle: 'creative-toggle', content: 'creative-section', expanded: false },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section', expanded: false },\n    { toggle: 'curves-toggle', content: 'curves-section', expanded: false }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (toggle && content) {\n      // Set initial state\n      if (section.expanded) {\n        toggle.classList.add('expanded');\n        content.classList.add('expanded');\n      }\n      \n      toggle.addEventListener('click', () => {\n        toggle.classList.toggle('expanded');\n        content.classList.toggle('expanded');\n      });\n    }\n  });\n}\n\n// Initialize window control buttons for Electron\nfunction initWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Create a simple toast notification\nexport function showToast(message, type = 'info', duration = 3000) {\n  // Create toast container if it doesn't exist\n  let toastContainer = document.querySelector('.toast-container');\n  if (!toastContainer) {\n    toastContainer = document.createElement('div');\n    toastContainer.className = 'toast-container';\n    document.body.appendChild(toastContainer);\n  }\n  \n  // Create toast element\n  const toast = document.createElement('div');\n  toast.className = `toast toast-${type}`;\n  toast.textContent = message;\n  \n  // Add to container\n  toastContainer.appendChild(toast);\n  \n  // Trigger animation\n  setTimeout(() => {\n    toast.classList.add('show');\n  }, 10);\n  \n  // Remove after duration\n  setTimeout(() => {\n    toast.classList.remove('show');\n    \n    // Remove from DOM after animation completes\n    setTimeout(() => {\n      toastContainer.removeChild(toast);\n    }, 300);\n  }, duration);\n  \n  return toast;\n}\n\n// Create a confirmation dialog\nexport function showConfirmDialog(message, onConfirm, onCancel) {\n  // Create dialog\n  const dialogOverlay = document.createElement('div');\n  dialogOverlay.className = 'dialog-overlay';\n  \n  const dialogBox = document.createElement('div');\n  dialogBox.className = 'dialog-box';\n  \n  const messageEl = document.createElement('p');\n  messageEl.textContent = message;\n  \n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.className = 'dialog-buttons';\n  \n  const confirmBtn = document.createElement('button');\n  confirmBtn.className = 'primary';\n  confirmBtn.textContent = 'Confirm';\n  \n  const cancelBtn = document.createElement('button');\n  cancelBtn.textContent = 'Cancel';\n  \n  // Add elements to DOM\n  buttonsContainer.appendChild(cancelBtn);\n  buttonsContainer.appendChild(confirmBtn);\n  \n  dialogBox.appendChild(messageEl);\n  dialogBox.appendChild(buttonsContainer);\n  \n  dialogOverlay.appendChild(dialogBox);\n  document.body.appendChild(dialogOverlay);\n  \n  // Add event listeners\n  confirmBtn.addEventListener('click', () => {\n    if (onConfirm) onConfirm();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  cancelBtn.addEventListener('click', () => {\n    if (onCancel) onCancel();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  // Also close on overlay click\n  dialogOverlay.addEventListener('click', (e) => {\n    if (e.target === dialogOverlay) {\n      if (onCancel) onCancel();\n      document.body.removeChild(dialogOverlay);\n    }\n  });\n  \n  return dialogOverlay;\n}","// services/file-service.js\n// Import app state\nimport { appState } from '../app.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the file service\nexport function initFileService() {\n  console.log('Initializing File Service');\n}\n\n// Open an image file\nexport async function openImageFile() {\n  console.log('Opening image file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const imagePath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp', 'tiff', 'tif'] }]\n      });\n      \n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        return `file://${imagePath}`;\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return await fallbackFileUpload();\n    }\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    return await fallbackFileUpload();\n  }\n  \n  return null;\n}\n\n// Fallback file upload function using HTML input for browser context\nexport function fallbackFileUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve(event.target.result);\n        };\n        \n        reader.readAsDataURL(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}\n\n// Save a LUT file\nexport async function saveLutFile(content, defaultFilename = 'lut.cube') {\n  console.log('Saving LUT file');\n  \n  try {\n    // Format the filename\n    const filename = defaultFilename.endsWith('.cube') ? defaultFilename : `${defaultFilename}.cube`;\n    \n    // If we're in Electron environment\n    if (window.electronAPI && typeof window.electronAPI.saveLut === 'function') {\n      const filePath = await window.electronAPI.saveLut({\n        content,\n        defaultPath: filename\n      });\n      \n      if (filePath) {\n        showToast(`LUT saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([content], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`LUT downloaded as ${filename}`, 'success');\n      return filename;\n    }\n  } catch (error) {\n    console.error('Error saving LUT:', error);\n    showToast('Failed to save LUT file', 'error');\n    return null;\n  }\n}\n\n// Load a LUT file\nexport async function loadLutFile() {\n  console.log('Loading LUT file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const lutPath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'CUBE Files', extensions: ['cube'] }]\n      });\n      \n      if (lutPath) {\n        // In a real implementation, we would read the file content here\n        console.log(\"Selected LUT:\", lutPath);\n        \n        // Placeholder for actual file reading logic\n        // The content would be returned and parsed elsewhere\n        return {\n          path: lutPath,\n          filename: lutPath.split('/').pop(),\n          content: \"# Placeholder for actual LUT content\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return null;\n    }\n  } else {\n    // Browser environment\n    return await fallbackLutUpload();\n  }\n  \n  return null;\n}\n\n// Fallback LUT upload function using HTML input for browser context\nexport function fallbackLutUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.cube';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected LUT file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve({\n            filename: file.name,\n            content: event.target.result\n          });\n        };\n        \n        reader.readAsText(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}","// services/lut-generator.js\n// Import app state and utilities\nimport { appState } from '../app.js';\nimport { applyContrast } from '../components/basic-corrections/basic-corrections.js';\nimport { applyFadedFilm } from '../components/creative/creative-effects.js';\nimport { applyColorWheels } from '../components/color-wheels/color-wheels.js';\nimport { interpolateCurve, isLinearCurve } from '../components/curves/curves-panel.js';\n\n// Initialize the LUT generator service\nexport function initLutGenerator() {\n  console.log('Initializing LUT Generator Service');\n  \n  // Make the generator available globally\n  window.generateCubeLUT = generateCubeLUT;\n}\n\n// Generate a CUBE format LUT based on current parameters\nexport function generateCubeLUT() {\n  const lutParams = appState.currentLutParams;\n  const size = lutParams.size || 32;\n  let content = '';\n  \n  // Header\n  content += `# ${lutParams.title}\\n`;\n  content += '# Generated by LOTS App\\n\\n';\n  content += `LUT_3D_SIZE ${size}\\n`;\n  content += 'DOMAIN_MIN 0.0 0.0 0.0\\n';\n  content += 'DOMAIN_MAX 1.0 1.0 1.0\\n\\n';\n  \n  // Generate the 3D LUT entries\n  const step = 1.0 / (size - 1);\n  \n  for (let b = 0; b < size; b++) {\n    for (let g = 0; g < size; g++) {\n      for (let r = 0; r < size; r++) {\n        // Calculate normalized RGB values (0.0 to 1.0)\n        let redValue = r * step;\n        let greenValue = g * step;\n        let blueValue = b * step;\n        \n        // Apply adjustments based on the current mode\n        if (appState.activeMode === 'basic') {\n          const result = applyBasicLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        } else {\n          const result = applyAdvancedLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        }\n        \n        // Clamp values to valid range\n        redValue = Math.min(1.0, Math.max(0.0, redValue));\n        greenValue = Math.min(1.0, Math.max(0.0, greenValue));\n        blueValue = Math.min(1.0, Math.max(0.0, blueValue));\n        \n        // Add the entry to the LUT\n        content += `${redValue.toFixed(6)} ${greenValue.toFixed(6)} ${blueValue.toFixed(6)}\\n`;\n      }\n    }\n  }\n  \n  return content;\n}\n\n// Apply basic mode adjustments to a single color point\nexport function applyBasicLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams.basic || {};\n  \n  // Apply contrast\n  r = applyContrast(r, params.contrast || 1.0);\n  g = applyContrast(g, params.contrast || 1.0);\n  b = applyContrast(b, params.contrast || 1.0);\n  \n  // Apply color balance\n  r *= params.redBalance || 1.0;\n  g *= params.greenBalance || 1.0;\n  b *= params.blueBalance || 1.0;\n  \n  // Apply shadow/highlight adjustments\n  if (params.shadowsShift && params.highlightsShift) {\n    let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n    let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n    \n    r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n    g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n    b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n  }\n  \n  // Apply saturation\n  if (params.saturation !== undefined && params.saturation !== 1.0) {\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    r = luminance + params.saturation * (r - luminance);\n    g = luminance + params.saturation * (g - luminance);\n    b = luminance + params.saturation * (b - luminance);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply advanced mode adjustments to a single color point\nexport function applyAdvancedLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams;\n  \n  // 1. Apply temperature and tint\n  if (params.lumetri && (params.lumetri.temperature !== 0 || params.lumetri.tint !== 0)) {\n    const tempResult = applyTemperatureAndTint(\n      r, g, b, \n      params.lumetri.temperature / 150, \n      params.lumetri.tint / 150\n    );\n    r = tempResult.r;\n    g = tempResult.g;\n    b = tempResult.b;\n  }\n  \n  // 2. Apply exposure and contrast\n  if (params.lumetri) {\n    // Apply exposure\n    if (params.lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, params.lumetri.exposure);\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (params.lumetri.contrast !== 0) {\n      const contrastValue = 1 + (params.lumetri.contrast / 150 * 1.5);\n      r = applyContrast(r, contrastValue);\n      g = applyContrast(g, contrastValue);\n      b = applyContrast(b, contrastValue);\n    }\n  }\n  \n  // 3. Apply highlights, shadows, whites, blacks adjustments\n  if (params.lumetri) {\n    const toneResult = applyToneAdjustments(\n      r, g, b,\n      params.lumetri.highlights / 150 * 1.5,\n      params.lumetri.shadows / 150 * 1.5,\n      params.lumetri.whites / 150 * 1.5,\n      params.lumetri.blacks / 150 * 1.5\n    );\n    r = toneResult.r;\n    g = toneResult.g;\n    b = toneResult.b;\n  }\n  \n  // 4. Apply color wheels tinting\n  if (params.colorWheels) {\n    const shadowTint = params.colorWheels.shadowTint;\n    const highlightTint = params.colorWheels.highlightTint;\n    const tintBalance = params.colorWheels.tintBalance / 150;\n    \n    if (shadowTint.r !== 128 || shadowTint.g !== 128 || shadowTint.b !== 128 ||\n        highlightTint.r !== 128 || highlightTint.g !== 128 || highlightTint.b !== 128 ||\n        tintBalance !== 0) {\n      \n      const colorWheelResult = applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance);\n      r = colorWheelResult.r;\n      g = colorWheelResult.g;\n      b = colorWheelResult.b;\n    }\n  }\n  \n  // 5. Apply curves\n  if (params.curves) {\n    // Apply RGB curve first\n    const rgbPoints = params.curves.rgb;\n    if (rgbPoints) {\n      r = interpolateCurve(rgbPoints, r);\n      g = interpolateCurve(rgbPoints, g);\n      b = interpolateCurve(rgbPoints, b);\n    }\n    \n    // Apply individual channel curves if not linear\n    if (params.curves.red && !isLinearCurve(params.curves.red)) {\n      r = interpolateCurve(params.curves.red, r);\n    }\n    \n    if (params.curves.green && !isLinearCurve(params.curves.green)) {\n      g = interpolateCurve(params.curves.green, g);\n    }\n    \n    if (params.curves.blue && !isLinearCurve(params.curves.blue)) {\n      b = interpolateCurve(params.curves.blue, b);\n    }\n  }\n  \n  // 6. Apply creative effects (vibrance, saturation, faded film)\n  if (params.creative) {\n    // Apply vibrance\n    if (params.creative.vibrance !== 0) {\n      const vibranceAmount = params.creative.vibrance / 150;\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      const maxChannel = Math.max(r, g, b);\n      const minChannel = Math.min(r, g, b);\n      const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n      const vibranceEffect = vibranceAmount * (1 - saturationLevel);\n      \n      r = luminance + (r - luminance) * (1 + vibranceEffect);\n      g = luminance + (g - luminance) * (1 + vibranceEffect);\n      b = luminance + (b - luminance) * (1 + vibranceEffect);\n    }\n    \n    // Apply faded film effect\n    if (params.creative.fadedFilm > 0) {\n      const fadedResult = applyFadedFilm(r, g, b, params.creative.fadedFilm / 100);\n      r = fadedResult.r;\n      g = fadedResult.g;\n      b = fadedResult.b;\n    }\n  }\n  \n  return { r, g, b };\n}\n\n// Apply temperature and tint adjustments\nexport function applyTemperatureAndTint(r, g, b, temperature, tint) {\n  // Temperature: blue-yellow shift\n  // Positive = cooler (more blue), Negative = warmer (more yellow)\n  const tempFactor = temperature;\n  \n  // Tint: green-magenta shift\n  // Positive = more magenta, Negative = more green\n  const tintFactor = tint;\n  \n  // Apply temperature (blue-yellow balance)\n  if (tempFactor < 0) {\n    // Warmer: boost red/green, reduce blue\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  } else if (tempFactor > 0) {\n    // Cooler: boost blue, reduce red/green\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  }\n  \n  // Apply tint (green-magenta balance)\n  if (tintFactor > 0) {\n    // More magenta: boost red and blue, reduce green\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  } else if (tintFactor < 0) {\n    // More green: boost green, reduce red and blue\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply tone adjustments (highlights, shadows, whites, blacks)\nexport function applyToneAdjustments(r, g, b, highlights, shadows, whites, blacks) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Apply highlights adjustment (affects brighter areas)\n  let highlightEffect = Math.pow(luminance, 2) * highlights;\n  \n  // Apply shadows adjustment (affects darker areas)\n  let shadowEffect = Math.pow(1 - luminance, 2) * shadows;\n  \n  // Apply whites adjustment (affects the brightest areas)\n  let whitesEffect = Math.pow(luminance, 4) * whites;\n  \n  // Apply blacks adjustment (affects the darkest areas)\n  let blacksEffect = Math.pow(1 - luminance, 4) * blacks;\n  \n  // Combine all adjustments\n  const totalEffect = highlightEffect + shadowEffect + whitesEffect + blacksEffect;\n  \n  // Apply the combined effect to RGB channels\n  r += totalEffect;\n  g += totalEffect;\n  b += totalEffect;\n  \n  return { r, g, b };\n}","// services/export-service.js\n// Import app state and services\nimport { appState } from '../app.js';\nimport { saveLutFile } from './file-service.js';\nimport { generateCubeLUT } from './lut-generator.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the export service\nexport function initExportService() {\n  console.log('Initializing Export Service');\n  \n  // Set up export buttons\n  setupExportButtons();\n}\n\n// Set up export button click handlers\nfunction setupExportButtons() {\n  const saveLutBtn = document.getElementById('save-lut-btn');\n  const saveLutBtnAdvanced = document.getElementById('save-lut-btn-advanced');\n  \n  if (saveLutBtn) {\n    saveLutBtn.addEventListener('click', handleExportLut);\n  }\n  \n  if (saveLutBtnAdvanced) {\n    saveLutBtnAdvanced.addEventListener('click', handleExportLut);\n  }\n}\n\n// Handle the LUT export button click\nexport async function handleExportLut() {\n  console.log('Exporting LUT');\n  \n  try {\n    // Generate the LUT content\n    const lutContent = generateCubeLUT();\n    \n    // Format filename from title\n    const defaultFilename = formatFilename(appState.currentLutParams.title);\n    \n    // Save the file\n    const result = await saveLutFile(lutContent, defaultFilename);\n    \n    if (result) {\n      console.log('LUT exported successfully');\n    } else {\n      console.warn('LUT export was cancelled or failed');\n    }\n  } catch (error) {\n    console.error('Error exporting LUT:', error);\n    showToast('Failed to export LUT: ' + error.message, 'error');\n  }\n}\n\n// Format a filename from the LUT title\nexport function formatFilename(title) {\n  if (!title) return 'lut.cube';\n  \n  // Replace spaces with underscores and remove special characters\n  let filename = title.replace(/\\s+/g, '_')\n                      .replace(/[^a-zA-Z0-9_-]/g, '')\n                      .toLowerCase();\n  \n  // Add .cube extension if not present\n  if (!filename.endsWith('.cube')) {\n    filename += '.cube';\n  }\n  \n  return filename;\n}\n\n// Export the current image with adjustments applied\nexport async function exportProcessedImage() {\n  console.log('Exporting processed image');\n  \n  if (!appState.processedImageElement) {\n    showToast('No processed image to export', 'error');\n    return null;\n  }\n  \n  try {\n    // Get the processed image source (already contains the applied adjustments)\n    const imageDataUrl = appState.processedImageElement.src;\n    \n    // In Electron environment, we would save the file using Electron APIs\n    if (window.electronAPI && typeof window.electronAPI.saveImage === 'function') {\n      const defaultName = 'processed_image.jpg';\n      \n      const filePath = await window.electronAPI.saveImage({\n        dataUrl: imageDataUrl,\n        defaultPath: defaultName\n      });\n      \n      if (filePath) {\n        showToast(`Image saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const a = document.createElement('a');\n      a.href = imageDataUrl;\n      a.download = 'processed_image.jpg';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      \n      showToast('Image downloaded', 'success');\n      return 'processed_image.jpg';\n    }\n  } catch (error) {\n    console.error('Error exporting image:', error);\n    showToast('Failed to export image', 'error');\n    return null;\n  }\n}\n\n// Export all settings as a preset file\nexport function exportPreset() {\n  console.log('Exporting preset');\n  \n  try {\n    // Create a preset object with current settings\n    const preset = {\n      name: appState.currentLutParams.title || 'Unnamed Preset',\n      basic: { ...appState.currentLutParams.basic },\n      advanced: {\n        lumetri: appState.currentLutParams.lumetri ? { ...appState.currentLutParams.lumetri } : null,\n        colorWheels: appState.currentLutParams.colorWheels ? { ...appState.currentLutParams.colorWheels } : null,\n        curves: appState.currentLutParams.curves ? { ...appState.currentLutParams.curves } : null\n      },\n      version: '1.0'\n    };\n    \n    // Convert to JSON\n    const presetJson = JSON.stringify(preset, null, 2);\n    \n    // Format filename\n    const defaultFilename = `${formatFilename(preset.name).replace('.cube', '')}.lotspreset`;\n    \n    // Save the file using Electron or browser download\n    if (window.electronAPI && typeof window.electronAPI.savePreset === 'function') {\n      return window.electronAPI.savePreset({\n        content: presetJson,\n        defaultPath: defaultFilename\n      }).then(filePath => {\n        if (filePath) {\n          showToast(`Preset saved to: ${filePath}`, 'success');\n          return filePath;\n        }\n        return null;\n      });\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([presetJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = defaultFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`Preset downloaded as ${defaultFilename}`, 'success');\n      return Promise.resolve(defaultFilename);\n    }\n  } catch (error) {\n    console.error('Error exporting preset:', error);\n    showToast('Failed to export preset', 'error');\n    return Promise.resolve(null);\n  }\n}","// models/image-processor.js\n// Import necessary functions from other modules\nimport { appState } from '../app.js';\nimport { applyBasicCorrections } from '../components/basic-corrections/basic-corrections.js';\nimport { applyCreativeEffects } from '../components/creative/creative-effects.js';\nimport { applyColorWheelAdjustments } from '../components/color-wheels/color-wheels.js';\nimport { applyCurvesToImage } from '../components/curves/curves-panel.js';\n\n// Process an image with current adjustments in basic mode\nexport function processImageBasic(originalImage) {\n  console.log('Processing image with basic adjustments');\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply basic corrections\n    applyBasicCorrections(imageData);\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing image:', error);\n    return null;\n  }\n}\n\n// Process an image with current adjustments in advanced mode\nexport function processImageAdvanced(originalImage) {\n  console.log('Processing image with advanced adjustments');\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply adjustments in sequence\n    \n    // 1. Apply color wheels adjustments\n    applyColorWheelAdjustments(imageData);\n    \n    // 2. Apply creative effects (faded film, vibrance)\n    applyCreativeEffects(imageData);\n    \n    // 3. Apply curves adjustments\n    if (appState.curvesPanel) {\n      applyCurvesToImage(imageData);\n    }\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing advanced image:', error);\n    return null;\n  }\n}\n\n// Process the image based on current app mode\nexport function processImage(originalImage) {\n  if (appState.activeMode === 'basic') {\n    return processImageBasic(originalImage);\n  } else {\n    return processImageAdvanced(originalImage);\n  }\n}\n\n// Apply the current adjustments to the displayed image\nexport function applyAdjustmentsToImage() {\n  const originalImage = appState.originalImageElement;\n  const processedImage = appState.processedImageElement;\n  \n  if (!originalImage || !processedImage) {\n    console.warn('Image elements not available');\n    return;\n  }\n  \n  // Process the image\n  const processedImageUrl = processImage(originalImage);\n  \n  if (processedImageUrl) {\n    // Update the processed image with the new data\n    processedImage.src = processedImageUrl;\n  }\n}\n\n// Export the image processing functions\nexport default {\n  processImageBasic,\n  processImageAdvanced,\n  processImage,\n  applyAdjustmentsToImage\n};","// Import styles\nimport './styles/compare.css';\nimport './styles/base.css';\nimport './styles/layout.css';\nimport './styles/components.css';\nimport './styles/tools.css';\nimport './styles/themes.css';\nimport './styles/animations.css';\n\n// Import components\nimport { initCurvesPanel } from './components/curves/curves-panel.js';\nimport { initBasicCorrections } from './components/basic-corrections/basic-corrections.js';\nimport { initCreativeEffects } from './components/creative/creative-effects.js';\nimport { initColorWheels } from './components/color-wheels/color-wheels.js';\nimport { initImageComparison } from './components/image-preview/image-comparison.js';\nimport { initPreviewController } from './components/image-preview/preview-controller.js';\nimport { initPresets } from './components/presets/presets.js';\nimport { initUiElements } from './components/common/ui-elements.js';\n\n// Import services\nimport { initFileService } from './services/file-service.js';\nimport { initLutGenerator } from './services/lut-generator.js';\nimport { initExportService } from './services/export-service.js';\n\n// Import image processing utilities\nimport { processImage, applyAdjustmentsToImage } from './models/image-processor.js';\n\n// App state\nlet appState = {\n  activeMode: 'basic', // 'basic' or 'advanced'\n  originalImage: null,\n  processedImage: null,\n  currentLutParams: {\n    // Basic parameters\n    size: 32,\n    title: \"Signature Look\",\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0],\n    \n    // Advanced parameters will be added by the respective modules\n  }\n};\n\n// Initialize the application\nfunction initApp() {\n  console.log('LOTS App initializing...');\n  \n  // Make app state available globally for modules\n  window.appState = appState;\n  \n  // Initialize UI components\n  initUiElements();\n  initBasicCorrections();\n  initCreativeEffects();\n  initColorWheels();\n  initCurvesPanel();\n  initImageComparison();\n  initPreviewController();\n  initPresets();\n  \n  // Initialize services\n  initFileService();\n  initLutGenerator();\n  initExportService();\n  \n  // Set up mode toggle\n  setupModeToggle();\n  \n  // Set up window control buttons\n  setupWindowControls();\n  \n  console.log('LOTS App initialized successfully');\n}\n\n// Set up mode toggle (basic/advanced)\nfunction setupModeToggle() {\n  const modeToggle = document.getElementById('mode-toggle');\n  const basicControls = document.getElementById('basic-controls');\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (modeToggle) {\n    modeToggle.addEventListener('change', function() {\n      const isAdvancedMode = this.checked;\n      appState.activeMode = isAdvancedMode ? 'advanced' : 'basic';\n      \n      if (basicControls && advancedControls) {\n        console.log(`Switching to ${appState.activeMode} mode`);\n        basicControls.style.display = isAdvancedMode ? 'none' : 'block';\n        advancedControls.style.display = isAdvancedMode ? 'block' : 'none';\n        \n        // Apply current image adjustments with the new mode\n        if (appState.originalImage && appState.processedImage) {\n          applyImageAdjustments();\n        }\n      }\n    });\n  }\n}\n\n// Set up window control buttons for Electron\nfunction setupWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Apply adjustments to image based on current mode and parameters\nfunction applyImageAdjustments() {\n  if (!appState.originalImage) return;\n  \n  console.log('Applying image adjustments');\n  \n  // Actually process the image instead of just logging\n  try {\n    // Use the image processor to apply adjustments\n    const processedImageUrl = processImage(appState.originalImageElement);\n    \n    // Update the processed image with the new data\n    if (processedImageUrl && appState.processedImageElement) {\n      appState.processedImageElement.src = processedImageUrl;\n    }\n  } catch (error) {\n    console.error('Error processing image:', error);\n  }\n}\n\n// Apply basic mode adjustments\nfunction applyBasicAdjustments() {\n  console.log('Applying basic adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Apply advanced mode adjustments\nfunction applyAdvancedAdjustments() {\n  console.log('Applying advanced Lumetri-style adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Make certain functions available globally\nwindow.applyImageAdjustments = applyImageAdjustments;\n\n// Initialize the app when the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// Export functions for use in other modules\nexport { \n  appState,\n  applyImageAdjustments,\n  applyBasicAdjustments,\n  applyAdvancedAdjustments\n};","// Import app state\nimport { appState } from '../../app.js';\n\n// Initialize image comparison\nexport function initImageComparison() {\n  console.log('Initializing Image Comparison');\n  // Will implement comparison slider functionality \n}\n\n// Export functions\nexport default {\n  initImageComparison\n};"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","defaultCurveParams","rgb","x","y","red","green","blue","currentChannel","isLinearCurve","points","i","length","expectedY","Math","abs","interpolateCurve","value","p1","p2","t","CurvesPanel","params","arguments","undefined","_classCallCheck","this","_objectSpread","JSON","parse","stringify","curveCanvas","curveCtx","channelButtons","activePoint","init","bind","drawCurve","handleMouseDown","handleMouseMove","handleMouseUp","resetCurve","console","log","document","getElementById","getContext","setupEvents","updateChannelButtonUI","warn","_this","addEventListener","_loop","channel","btn","resetCurveBtn","classList","add","remove","applyImageAdjustments","_this2","width","height","clearRect","curveColor","fillStyle","fillRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","forEach","point","index","arc","PI","fill","e","rect","getBoundingClientRect","clientX","left","clientY","top","minDistance","Infinity","closestPoint","pointIndex","dx","dy","distance","sqrt","max","min","prevX","nextX","r","g","b","rgbPoints","imageData","data","result","applyCurves","round","curvesPanel","setupSlider","slider","valueDisplay","paramName","appState","currentLutParams","basic","textContent","toFixed","parseFloat","applyContrast","contrast","creative","applyVibrance","amount","luminance","maxChannel","minChannel","vibranceEffect","applyFadedFilm","fadeAmount","blackShift","setupColorWheel","wheel","innerHTML","canvas","createElement","clientWidth","clientHeight","appendChild","style","background","backgroundImage","indicator","className","tintValue","colorWheels","centerX","centerY","maxDistance","normalizedR","normalizedG","normalizedB","saturation","hue","atan2","cos","sin","setWheelIndicatorPosition","isMouseDown","updateWheelFromEvent","angle","h","s","floor","f","p","q","hsvToRgb","mappedR","mappedG","mappedB","resetColorWheels","shadowTint","highlightTint","tintBalance","tintBalanceSlider","tintBalanceValue","shadowColorWheel","highlightColorWheel","shadowIndicator","querySelector","highlightIndicator","concat","applyColorWheels","shadowInfluence","pow","highlightInfluence","currentSliderPosition","handleImageUpload","window","electronAPI","openFileDialog","properties","filters","name","extensions","then","imagePath","originalImageElement","src","error","fallbackFileUpload","input","type","accept","files","file","reader","FileReader","onload","event","target","readAsDataURL","click","setViewMode","mode","resetPosition","viewSplitBtn","viewBeforeBtn","viewAfterBtn","originalImageContainer","comparisonSlider","verticalDivider","clipPath","display","builtInPresets","redBalance","greenBalance","blueBalance","shadowsShift","highlightsShift","userPresets","updateSlider","sliderId","updateLUTPreview","fullPreview","lutPreview","lutContent","generateCubeLUT","slice","showToast","message","duration","toastContainer","body","toast","setTimeout","removeChild","_regeneratorRuntime","n","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","saveLutFile","_x","_saveLutFile","apply","_callee2","content","defaultFilename","filename","filePath","blob","url","_args2","_context2","endsWith","saveLut","defaultPath","Blob","URL","createObjectURL","href","download","revokeObjectURL","t0","_next","_throw","lutParams","size","title","step","redValue","greenValue","blueValue","activeMode","applyBasicLutAdjustments","applyAdvancedLutAdjustments","shadowEffect","highlightEffect","lumetri","temperature","tint","tempResult","applyTemperatureAndTint","exposure","exposureFactor","contrastValue","toneResult","highlights","shadows","whites","blacks","totalEffect","applyToneAdjustments","colorWheelResult","curves","vibrance","vibranceAmount","fadedFilm","fadedResult","handleExportLut","_handleExportLut","_callee","_context","formatFilename","replace","toLowerCase","processImage","originalImage","ctx","naturalWidth","naturalHeight","drawImage","getImageData","applyBasicCorrections","putImageData","toDataURL","processImageBasic","applyColorWheelAdjustments","applyCreativeEffects","applyCurvesToImage","processImageAdvanced","processedImage","processedImageUrl","processedImageElement","modeToggle","basicControls","advancedControls","saveLutBtn","saveLutBtnAdvanced","toggle","section","minimizeBtn","maximizeBtn","closeBtn","viewCodeBtn","viewCodeBtnAdvanced","codeModal","closeModalBtn","querySelectorAll","modal","expanded","windowControl","titleInput","lutSizeSelect","contrastSlider","saturationSlider","redBalanceSlider","greenBalanceSlider","blueBalanceSlider","saturationValue","redBalanceValue","greenBalanceValue","blueBalanceValue","parseInt","initBasicCorrections","fadedFilmSlider","vibranceSlider","fadedFilmValue","vibranceValue","initCreativeEffects","resetButton","initColorWheels","readyState","originalPlaceholder","comparisonContainer","imageUploadBtn","isSliding","startX","startPercent","updateSliderPosition","percent","sliderLeft","preventDefault","deltaPercent","touches","closest","initComparisonSlider","initPreviewController","presetButtons","presetId","advancedParams","preset","id","split","activePresetId","_toConsumableArray","advanced","savedPresets","localStorage","getItem","loadUserPresets","initPresets","isAdvancedMode","checked","setupWindowControls"],"sourceRoot":""}