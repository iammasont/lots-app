{"version":3,"file":"bundle.js","mappings":";mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,o+CCK3E,IAAMI,EAAqB,CAChCC,IAAK,CACH,CAAEC,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IAEbC,IAAK,CACH,CAAEF,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IAEbE,MAAO,CACL,CAAEH,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IAEbG,KAAM,CACJ,CAAEJ,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IAEbI,eAAgB,OAIX,SAASC,EAAcC,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAAK,CACtC,IAAME,EAAYH,EAAOC,GAAGR,EAC5B,GAAIW,KAAKC,IAAIL,EAAOC,GAAGP,EAAIS,GAAa,IACtC,OAAO,CAEX,CACA,OAAO,CACT,CAGO,SAASG,EAAiBN,EAAQO,GAEvC,GAAIA,GAAS,EAAG,OAAOP,EAAO,GAAGN,EACjC,GAAIa,GAAS,EAAG,OAAOP,EAAOA,EAAOE,OAAS,GAAGR,EAIjD,IADA,IAAIO,EAAI,EACDA,EAAID,EAAOE,OAAS,GAAKF,EAAOC,EAAI,GAAGR,EAAIc,GAChDN,IAIF,IAAMO,EAAKR,EAAOC,GACZQ,EAAKT,EAAOC,EAAI,GAGhBS,EAAgBD,EAAGhB,EAAIe,EAAGf,EAC1BkB,EAAsB,IAAlBD,EAAsB,GAAKH,EAAQC,EAAGf,GAAKiB,EAGrD,OAAOF,EAAGd,EAAIiB,GAAKF,EAAGf,EAAIc,EAAGd,EAC/B,CAEA,IACMkB,EAAW,WAyCf,SAxCA,SAAAA,IAAyB,IAAbC,EAAMC,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,+FAACE,CAAA,KAAAJ,GAErBK,KAAKJ,OAAMK,EAAAA,EAAA,GACNC,KAAKC,MAAMD,KAAKE,UAAU9B,KAC1BsB,GAILI,KAAKK,YAAc,KACnBL,KAAKM,SAAW,KAChBN,KAAKO,eAAiB,CAAC,EACvBP,KAAKQ,YAAc,KACnBR,KAAKS,YAAc,EACnBT,KAAKU,UAAY,2BACjBV,KAAKW,cAAgB,2BACrBX,KAAKY,YAAc,CACjBrC,IAAK,2BACLG,IAAK,2BACLC,MAAO,2BACPC,KAAM,4BAIRoB,KAAKa,cAAe,EACpBb,KAAKc,YAAa,EAGlBd,KAAKe,KAAOf,KAAKe,KAAKC,KAAKhB,MAC3BA,KAAKiB,UAAYjB,KAAKiB,UAAUD,KAAKhB,MACrCA,KAAKkB,gBAAkBlB,KAAKkB,gBAAgBF,KAAKhB,MACjDA,KAAKmB,gBAAkBnB,KAAKmB,gBAAgBH,KAAKhB,MACjDA,KAAKoB,cAAgBpB,KAAKoB,cAAcJ,KAAKhB,MAC7CA,KAAKqB,cAAgBrB,KAAKqB,cAAcL,KAAKhB,MAC7CA,KAAKsB,YAActB,KAAKsB,YAAYN,KAAKhB,MACzCA,KAAKuB,WAAavB,KAAKuB,WAAWP,KAAKhB,MACvCA,KAAKwB,iBAAmBxB,KAAKwB,iBAAiBR,KAAKhB,MACnDA,KAAKyB,SAAWzB,KAAKyB,SAAST,KAAKhB,MACnCA,KAAK0B,YAAc1B,KAAK0B,YAAYV,KAAKhB,KAC3C,IAEA,EAAArC,IAAA,OAAA2B,MACA,WACEqC,QAAQC,IAAI,6BAGZ5B,KAAKK,YAAcwB,SAASC,eAAe,gBAEtC9B,KAAKK,aAKVL,KAAKM,SAAWN,KAAKK,YAAY0B,WAAW,MAG5C/B,KAAKO,eAAiB,CACpBhC,IAAKsD,SAASC,eAAe,aAC7BpD,IAAKmD,SAASC,eAAe,aAC7BnD,MAAOkD,SAASC,eAAe,eAC/BlD,KAAMiD,SAASC,eAAe,eAIhC9B,KAAKgC,cAGLhC,KAAKiC,wBAGLjC,KAAKiB,aArBHU,QAAQO,KAAK,yBAsBjB,GAEA,CAAAvE,IAAA,cAAA2B,MACA,WAAc,IAAA6C,EAAA,KAEZ,GAAKnC,KAAKK,YAAV,CAGAL,KAAKK,YAAY+B,iBAAiB,YAAapC,KAAKkB,iBACpDW,SAASO,iBAAiB,YAAapC,KAAKmB,iBAC5CU,SAASO,iBAAiB,UAAWpC,KAAKoB,eAG1CS,SAASO,iBAAiB,UAAWpC,KAAKqB,eAC1CQ,SAASO,iBAAiB,QAASpC,KAAKsB,aAExC,IAAAe,EAAA,SAAAC,GAEE,IAAMC,EAAMJ,EAAK5B,eAAe+B,GAC5BC,GACFA,EAAIH,iBAAiB,SAAS,WAE5BD,EAAKvC,OAAOf,eAAiByD,EAG7BH,EAAKF,wBACLE,EAAKlB,WACP,GAEJ,EAZA,IAAK,IAAMqB,KAAWtC,KAAKO,eAAc8B,EAAAC,GAezC,IAAME,EAAgBX,SAASC,eAAe,mBAC1CU,GACFA,EAAcJ,iBAAiB,QAASpC,KAAKuB,WA7BlB,CA+B/B,GAEA,CAAA5D,IAAA,gBAAA2B,MACA,SAAcmD,GAEE,UAAVA,EAAE9E,MACJqC,KAAKa,cAAe,EACpBb,KAAKK,YAAYqC,MAAMC,OAAS,aAIpB,QAAVF,EAAE9E,KAA2B,WAAV8E,EAAE9E,MACvBqC,KAAKc,YAAa,EAClBd,KAAKK,YAAYqC,MAAMC,OAAS,cAEpC,GAEA,CAAAhF,IAAA,cAAA2B,MACA,SAAYmD,GACI,UAAVA,EAAE9E,MACJqC,KAAKa,cAAe,EACpBb,KAAKK,YAAYqC,MAAMC,OAAS,WAGpB,QAAVF,EAAE9E,KAA2B,WAAV8E,EAAE9E,MACvBqC,KAAKc,YAAa,EAClBd,KAAKK,YAAYqC,MAAMC,OAAS,UAEpC,GAEA,CAAAhF,IAAA,wBAAA2B,MACA,WACE,IAAK,IAAMgD,KAAWtC,KAAKO,eAAgB,CACzC,IAAMgC,EAAMvC,KAAKO,eAAe+B,GAC5BC,IACED,IAAYtC,KAAKJ,OAAOf,eAC1B0D,EAAIK,UAAUC,IAAI,UAElBN,EAAIK,UAAUE,OAAO,UAG3B,CACF,GAEA,CAAAnF,IAAA,aAAA2B,MACA,WACEqC,QAAQC,IAAI,mBAGZ5B,KAAKJ,OAAOI,KAAKJ,OAAOf,gBACtBqB,KAAKC,MAAMD,KAAKE,UAAU9B,EAAmB0B,KAAKJ,OAAOf,kBAG3DmB,KAAKiB,YAIH8B,GAEJ,GAEA,CAAApF,IAAA,WAAA2B,MACA,SAAS0D,EAAOC,GACdjD,KAAKM,SAAS4C,YAAclD,KAAKU,UACjCV,KAAKM,SAAS6C,UAAY,EAG1B,IAAK,IAAInE,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMR,EAAIW,KAAKiE,MAAMJ,GAAShE,EAAI,IAAM,GACxCgB,KAAKM,SAAS+C,YACdrD,KAAKM,SAASgD,OAAO9E,EAAG,GACxBwB,KAAKM,SAASiD,OAAO/E,EAAGyE,GACxBjD,KAAKM,SAASkD,QAChB,CAGA,IAAK,IAAIxE,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMP,EAAIU,KAAKiE,MAAMH,GAAUjE,EAAI,IAAM,GACzCgB,KAAKM,SAAS+C,YACdrD,KAAKM,SAASgD,OAAO,EAAG7E,GACxBuB,KAAKM,SAASiD,OAAOP,EAAOvE,GAC5BuB,KAAKM,SAASkD,QAChB,CAGAxD,KAAKM,SAAS4C,YAAclD,KAAKW,cACjCX,KAAKM,SAAS+C,YACdrD,KAAKM,SAASgD,OAAO,EAAGL,GACxBjD,KAAKM,SAASiD,OAAOP,EAAO,GAC5BhD,KAAKM,SAASkD,QAChB,GAEA,CAAA7F,IAAA,YAAA2B,MACA,WACE,GAAKU,KAAKK,aAAgBL,KAAKM,SAA/B,CAKA,IAAM0C,EAAQhD,KAAKK,YAAY2C,MACzBC,EAASjD,KAAKK,YAAY4C,OAGhCjD,KAAKM,SAASmD,UAAU,EAAG,EAAGT,EAAOC,GAGrCjD,KAAKM,SAASoD,UAAY,wBAC1B1D,KAAKM,SAASqD,SAAS,EAAG,EAAGX,EAAOC,GAGpCjD,KAAK4D,SAASZ,EAAOC,GAGrB,IAAMlE,EAASiB,KAAKJ,OAAOI,KAAKJ,OAAOf,gBAGjCgF,EAAa7D,KAAKY,YAAYZ,KAAKJ,OAAOf,gBAG1CiF,wnBAAeC,CAAIhF,GAAQiF,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEzF,EAAI0F,EAAE1F,CAAC,IAGzDwB,KAAKmE,gBAAgBL,EAAcd,EAAOC,EAAQY,GAGlD7D,KAAKoE,kBAAkBN,EAAcd,EAAOC,EA5B5C,MAFEtB,QAAQO,KAAK,+BA+BjB,GAEA,CAAAvE,IAAA,kBAAA2B,MACA,SAAgBP,EAAQiE,EAAOC,EAAQY,GACrC,KAAI9E,EAAOE,OAAS,GAApB,CAMAe,KAAKM,SAAS+C,YAGdrD,KAAKM,SAASgD,OACZvE,EAAO,GAAGP,EAAIwE,GACb,EAAIjE,EAAO,GAAGN,GAAKwE,GAItB,IAAK,IAAIvD,EAXI,IAWMA,GAAK,EAAGA,GAXd,IAWyB,CAGpC,IADA,IAAIV,EAAI,EACDA,EAAID,EAAOE,OAAS,GAAKF,EAAOC,EAAI,GAAGR,EAAIkB,GAChDV,IAIF,KAAIA,GAAKD,EAAOE,OAAS,GAAzB,CAEA,IAAMM,EAAKR,EAAOC,GACZQ,EAAKT,EAAOC,EAAI,GAGtB,KAAIU,EAAIH,EAAGf,GAAKkB,EAAIF,EAAGhB,GAAvB,CAGA,IAAM6F,GAAY3E,EAAIH,EAAGf,IAAMgB,EAAGhB,EAAIe,EAAGf,GACnCC,EAAIc,EAAGd,EAAI4F,GAAY7E,EAAGf,EAAIc,EAAGd,GAGvCuB,KAAKM,SAASiD,OACZ7D,EAAIsD,GACH,EAAIvE,GAAKwE,EATsB,CANE,CAiBtC,CAGAjD,KAAKM,SAASiD,OACZxE,EAAOA,EAAOE,OAAS,GAAGT,EAAIwE,GAC7B,EAAIjE,EAAOA,EAAOE,OAAS,GAAGR,GAAKwE,GAItCjD,KAAKM,SAAS4C,YAAcW,EAC5B7D,KAAKM,SAAS6C,UAAY,EAC1BnD,KAAKM,SAASkD,QAnDe,CAoD/B,GAEA,CAAA7F,IAAA,oBAAA2B,MACA,SAAkBP,EAAQiE,EAAOC,GAAQ,IAAAqB,EAAA,KACvCvF,EAAOwF,SAAQ,SAACC,EAAOC,GACrB,IAAMC,EAAwB,IAAVD,GAAeA,IAAU1F,EAAOE,OAAS,EACvDT,EAAIgG,EAAMhG,EAAIwE,EACdvE,GAAK,EAAI+F,EAAM/F,GAAKwE,EAG1BqB,EAAKhE,SAAS+C,YACdiB,EAAKhE,SAASqE,IAAInG,EAAGC,EAAG6F,EAAK7D,YAAa,EAAa,EAAVtB,KAAKyF,IAG9CF,EACFJ,EAAKhE,SAASoD,UAAY,2BACjBY,EAAK9D,aAAe8D,EAAK9D,YAAYgE,QAAUA,EACxDF,EAAKhE,SAASoD,UAAY,2BAE1BY,EAAKhE,SAASoD,UAAY,2BAG5BY,EAAKhE,SAASuE,OACdP,EAAKhE,SAAS4C,YAAc,qBAC5BoB,EAAKhE,SAAS6C,UAAY,EAC1BmB,EAAKhE,SAASkD,QAChB,GACF,GAEA,CAAA7F,IAAA,mBAAA2B,MACA,SAAiBd,EAAGC,GAClB,IAAMM,EAASiB,KAAKJ,OAAOI,KAAKJ,OAAOf,gBACnCiG,EAAcC,IACdC,EAAe,KACfC,GAAc,EAclB,OAZAlG,EAAOwF,SAAQ,SAACC,EAAOC,GACrB,IAAMS,EAAKV,EAAMhG,EAAIA,EACf2G,EAAKX,EAAM/F,EAAIA,EACf2G,EAAWjG,KAAKkG,KAAKH,EAAKA,EAAKC,EAAKA,GAEtCC,EAAWN,IACbA,EAAcM,EACdJ,EAAeR,EACfS,EAAaR,EAEjB,IAEO,CACLD,MAAOQ,EACPP,MAAOQ,EACPG,SAAUN,EAEd,GAEA,CAAAnH,IAAA,WAAA2B,MACA,SAASd,EAAGC,GAKV,IAJA,IAAMM,EAASiB,KAAKJ,OAAOI,KAAKJ,OAAOf,gBAGnCyG,EAAcvG,EAAOE,OAChBD,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IACjC,GAAIR,EAAIO,EAAOC,GAAGR,EAAG,CACnB8G,EAActG,EACd,KACF,CAcF,OAVAD,EAAOwG,OAAOD,EAAa,EAAG,CAAE9G,EAAAA,EAAGC,EAAAA,IAGnCuB,KAAKiB,YAIH8B,IAGKuC,CACT,GAEA,CAAA3H,IAAA,cAAA2B,MACA,SAAYmF,GACV,IAAM1F,EAASiB,KAAKJ,OAAOI,KAAKJ,OAAOf,gBAGnC4F,EAAQ,GAAKA,EAAQ1F,EAAOE,OAAS,IACvCF,EAAOwG,OAAOd,EAAO,GAGrBzE,KAAKiB,YAIH8B,IAGN,GAEA,CAAApF,IAAA,kBAAA2B,MACA,SAAgBmD,GACd,GAAKzC,KAAKK,YAAV,CAEA,IAAMmF,EAAOxF,KAAKK,YAAYoF,wBACxBjH,GAAKiE,EAAEiD,QAAUF,EAAKG,MAAQH,EAAKxC,MACnCvE,EAAI,GAAKgE,EAAEmD,QAAUJ,EAAKK,KAAOL,EAAKvC,OAGtC6C,EAAW3G,KAAK4G,IAAI,EAAG5G,KAAK6G,IAAI,EAAGxH,IACnCyH,EAAW9G,KAAK4G,IAAI,EAAG5G,KAAK6G,IAAI,EAAGvH,IAGnCyH,EAAUlG,KAAKwB,iBAAiBsE,EAAUG,GAG5CjG,KAAKa,aAEHqF,EAAQd,SAAW,KACrBpF,KAAKyB,SAASqE,EAAUG,GAMxBjG,KAAKc,WAEHoF,EAAQd,SAAW,KAAQc,EAAQzB,MAAQ,GAAKyB,EAAQzB,MAAQzE,KAAKJ,OAAOI,KAAKJ,OAAOf,gBAAgBI,OAAS,GACnHe,KAAK0B,YAAYwE,EAAQzB,OAMzByB,EAAQd,SAAW,MAEjBc,EAAQzB,MAAQ,GAAKyB,EAAQzB,MAAQzE,KAAKJ,OAAOI,KAAKJ,OAAOf,gBAAgBI,OAAS,EACxFe,KAAKQ,YAAc,CACjBgE,MAAO0B,EAAQ1B,MACfC,MAAOyB,EAAQzB,MACf0B,OAAQL,EACRM,OAAQH,GAIVjG,KAAKQ,YAAc,CACjBgE,MAAO0B,EAAQ1B,MACfC,MAAOyB,EAAQzB,MACf0B,OAAQL,EACRM,OAAQH,EACRI,cAAc,GAKlBrG,KAAKiB,YArDsB,CAuD/B,GAEA,CAAAtD,IAAA,kBAAA2B,MACA,SAAgBmD,GACd,GAAKzC,KAAKQ,aAAgBR,KAAKK,YAA/B,CAEA,IAAMmF,EAAOxF,KAAKK,YAAYoF,wBAC1BjH,GAAKiE,EAAEiD,QAAUF,EAAKG,MAAQH,EAAKxC,MACnCvE,EAAI,GAAKgE,EAAEmD,QAAUJ,EAAKK,KAAOL,EAAKvC,OAG1CzE,EAAIW,KAAK4G,IAAI,EAAG5G,KAAK6G,IAAI,EAAGxH,IAC5BC,EAAIU,KAAK4G,IAAI,EAAG5G,KAAK6G,IAAI,EAAGvH,IAE5B,IAAMM,EAASiB,KAAKJ,OAAOI,KAAKJ,OAAOf,gBACjC4F,EAAQzE,KAAKQ,YAAYiE,MAG/B,GAAIzE,KAAKQ,YAAY6F,aACnBtH,EAAO0F,GAAOhG,EAAIA,MACb,CAEL,IAAM6H,EAAS7B,EAAQ,EAAK1F,EAAO0F,EAAQ,GAAGjG,EAAI,IAAO,EACnD+H,EAAS9B,EAAQ1F,EAAOE,OAAS,EAAKF,EAAO0F,EAAQ,GAAGjG,EAAI,IAAO,EAGzEO,EAAO0F,GAAOjG,EAAIW,KAAK4G,IAAIO,EAAOnH,KAAK6G,IAAIO,EAAO/H,IAClDO,EAAO0F,GAAOhG,EAAIA,CACpB,CAGAuB,KAAKiB,YAIH8B,GA/BgD,CAiCpD,GAEA,CAAApF,IAAA,gBAAA2B,MACA,SAAcmD,GACZzC,KAAKQ,YAAc,KACnBR,KAAKiB,WACP,GAEA,CAAAtD,IAAA,cAAA2B,MACA,SAAYkH,EAAGC,EAAGvC,GAEhB,IAAMwC,EAAY1G,KAAKJ,OAAOrB,IAmB9B,OAjBAiI,EAAInH,EAAiBqH,EAAWF,GAChCC,EAAIpH,EAAiBqH,EAAWD,GAChCvC,EAAI7E,EAAiBqH,EAAWxC,GAG3BpF,EAAckB,KAAKJ,OAAOlB,OAC7B8H,EAAInH,EAAiBW,KAAKJ,OAAOlB,IAAK8H,IAGnC1H,EAAckB,KAAKJ,OAAOjB,SAC7B8H,EAAIpH,EAAiBW,KAAKJ,OAAOjB,MAAO8H,IAGrC3H,EAAckB,KAAKJ,OAAOhB,QAC7BsF,EAAI7E,EAAiBW,KAAKJ,OAAOhB,KAAMsF,IAGlC,CAAEsC,EAAAA,EAAGC,EAAAA,EAAGvC,EAAAA,EACjB,GAEA,CAAAvG,IAAA,qBAAA2B,MACA,SAAmBqH,GAGjB,IAFA,IAAMC,EAAOD,EAAUC,KAEd5H,EAAI,EAAGA,EAAI4H,EAAK3H,OAAQD,GAAK,EAAG,CAEvC,IAAIwH,EAAII,EAAK5H,GAAK,IACdyH,EAAIG,EAAK5H,EAAI,GAAK,IAClBkF,EAAI0C,EAAK5H,EAAI,GAAK,IAGhB6H,EAAS7G,KAAK8G,YAAYN,EAAGC,EAAGvC,GAGtC0C,EAAK5H,GAAKG,KAAKiE,MAAiB,IAAXyD,EAAOL,GAC5BI,EAAK5H,EAAI,GAAKG,KAAKiE,MAAiB,IAAXyD,EAAOJ,GAChCG,EAAK5H,EAAI,GAAKG,KAAKiE,MAAiB,IAAXyD,EAAO3C,EAElC,CAEA,OAAOyC,CACT,oFAAC,CAzhBc,GA6hBbI,EAAc,KCxUlB,SAASC,EAAa1H,GAGpB,OAAc,IAAVA,EAAoB,KAEpBA,EAAQ,EAEHH,KAAKiE,MAAM,KAAQ9D,EAAQ,IAAO,MAGlCH,KAAKiE,MAAM,KAAQ9D,EAAQ,IAAO,KAE7C,CAGA,SAAS2H,EAAqBC,EAAWC,GACvC,GAAKD,EAAL,CAKA,IAAQE,EAAsED,EAAtEC,GAAIC,EAAkEF,EAAlEE,MAAOrB,EAA2DmB,EAA3DnB,IAAKD,EAAsDoB,EAAtDpB,IAAKuB,EAAiDH,EAAjDG,KAAMC,EAA2CJ,EAA3CI,aAAcC,EAA6BL,EAA7BK,UAAWC,EAAkBN,EAAlBM,cAC5D9F,QAAQC,IAAI,6BAAD8F,OAA8BN,EAAE,SAAAM,OAAQF,IAGnD,IAAMG,EAAkB9F,SAAS+F,cAAc,OAC/CD,EAAgBE,UAAY,gBAG5B,IAAMC,EAAejG,SAAS+F,cAAc,SAC5CE,EAAaC,aAAa,MAAOX,GACjCU,EAAaE,YAAcX,EAAQ,IAGnC,IAAMY,EAAepG,SAAS+F,cAAc,QAK5C,GAJAK,EAAab,GAAK,GAAHM,OAAMN,EAAE,UACvBa,EAAaJ,UAAY,kBAGrBJ,EAAe,CAEjB,IAAMS,EAAclB,EAAaO,GACjCU,EAAaD,YAAc,GAAHN,OAAMQ,EAAW,KAGzCD,EAAarF,UAAUC,IAAI,eAC7B,MAEEoF,EAAaD,YAAcT,EAAaY,QAAQ,GAIlDL,EAAaM,YAAYH,GAGzB,IAAMI,EAASxG,SAAS+F,cAAc,SAuCtC,OAtCAS,EAAOC,KAAO,QACdD,EAAOjB,GAAKA,EACZiB,EAAOrC,IAAMA,EACbqC,EAAOtC,IAAMA,EACbsC,EAAOf,KAAOA,EACde,EAAO/I,MAAQiI,EAGfI,EAAgBS,YAAYN,GAC5BH,EAAgBS,YAAYC,GAC5BnB,EAAUkB,YAAYT,GAGtBU,EAAOjG,iBAAiB,SAAS,WAU/B,GARKmG,EAASC,iBAAiBC,UAC7BF,EAASC,iBAAiBC,QAAU,CAAC,GAIvCF,EAASC,iBAAiBC,QAAQjB,GAAakB,WAAWL,EAAO/I,OAG7DmI,EAAe,CAEjB,IAAMS,EAAclB,EAAa0B,WAAWL,EAAO/I,QACnD2I,EAAaD,YAAc,GAAHN,OAAMQ,EAAW,IAC3C,MAEED,EAAaD,YAAcU,WAAWL,EAAO/I,OAAO6I,QAAQ,GAG9DxG,QAAQC,IAAI,+BAAD8F,OAAgCF,EAAS,OAAAE,OAAMW,EAAO/I,QAGjEyD,GACF,IAEO,CAAEsF,OAAAA,EAAQJ,aAAAA,EA3EjB,CAFEtG,QAAQgH,MAAM,0CA8ElB,CAGA,SAASC,IACPjH,QAAQC,IAAI,2CAGZ2G,EAASC,iBAAiBC,QAAU,CAClCI,SAAU,EACVC,SAAU,EACVC,WAAY,EACZC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EACRC,YAAa,EACbC,KAAM,GAIQvH,SAASwH,iBAAiB,iDAClC9E,SAAQ,SAAA8D,GACd,IAAMb,EAAYa,EAAOjB,GAAGkC,MAAM,KAAK,GACvCjB,EAAO/I,MAAQiJ,EAASC,iBAAiBC,QAAQjB,IAAc,EAG/D,IAAMS,EAAepG,SAASC,eAAe,GAAD4F,OAAIW,EAAOjB,GAAE,WACrDa,IAEAA,EAAaD,YADG,gBAAdR,EACyB,QAEA,MAGjC,IAGAzE,GACF,CAGA,SAASwG,EAAYlB,EAAQJ,EAAcT,GACpCa,GAAWJ,GAMhBI,EAAO/I,MAAQiJ,EAASC,iBAAiBgB,MAAMhC,GAC/CS,EAAaD,YAAcO,EAASC,iBAAiBgB,MAAMhC,GAAWW,QAAQ,GAG9EE,EAAOjG,iBAAiB,SAAS,WAE/BmG,EAASC,iBAAiBgB,MAAMhC,GAAakB,WAAWL,EAAO/I,OAG/D2I,EAAaD,YAAcO,EAASC,iBAAiBgB,MAAMhC,GAAWW,QAAQ,GAE9ExG,QAAQC,IAAI,4BAAD8F,OAA6BF,EAAS,OAAAE,OAAMW,EAAO/I,QAG9DyD,GACF,KApBEpB,QAAQO,KAAK,yBAADwF,OAA0BF,EAAS,uBAqBnD,CAkCO,SAASiC,EAAsB9C,GAIpC,IAHA,IAAM/G,EAAS2I,EAASC,iBAAiBgB,MACnC5C,EAAOD,EAAUC,KAEd5H,EAAI,EAAGA,EAAI4H,EAAK3H,OAAQD,GAAK,EAAG,CAEvC,IAAIwH,EAAII,EAAK5H,GAAK,IACdyH,EAAIG,EAAK5H,EAAI,GAAK,IAClBkF,EAAI0C,EAAK5H,EAAI,GAAK,IAatB,GAVAwH,EAAIkD,EAAclD,EAAG5G,EAAOkJ,UAC5BrC,EAAIiD,EAAcjD,EAAG7G,EAAOkJ,UAC5B5E,EAAIwF,EAAcxF,EAAGtE,EAAOkJ,UAG5BtC,GAAK5G,EAAO+J,WACZlD,GAAK7G,EAAOgK,aACZ1F,GAAKtE,EAAOiK,YAGc,IAAtBjK,EAAOkK,WAAoB,CAC7B,IAAMC,EAAY,MAASvD,EAAI,MAASC,EAAI,MAASvC,EACrDsC,EAAIuD,EAAYnK,EAAOkK,YAActD,EAAIuD,GACzCtD,EAAIsD,EAAYnK,EAAOkK,YAAcrD,EAAIsD,GACzC7F,EAAI6F,EAAYnK,EAAOkK,YAAc5F,EAAI6F,EAC3C,CAGA,GAAInK,EAAOoK,cAAgBpK,EAAOqK,gBAAiB,CACjD,IAAIC,EAAe/K,KAAKgL,IAAI,EAAIhL,KAAK4G,IAAIS,EAAGrH,KAAK4G,IAAIU,EAAGvC,IAAK,GACzDkG,EAAkBjL,KAAKgL,IAAIhL,KAAK4G,IAAIS,EAAGrH,KAAK4G,IAAIU,EAAGvC,IAAK,GAE5DsC,GAAK5G,EAAOoK,aAAa,GAAKE,EAAetK,EAAOqK,gBAAgB,GAAKG,EACzE3D,GAAK7G,EAAOoK,aAAa,GAAKE,EAAetK,EAAOqK,gBAAgB,GAAKG,EACzElG,GAAKtE,EAAOoK,aAAa,GAAKE,EAAetK,EAAOqK,gBAAgB,GAAKG,CAC3E,CAGA5D,EAAIrH,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKS,IAChCC,EAAItH,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKU,IAChCvC,EAAI/E,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAK7B,IAGhC0C,EAAK5H,GAAKG,KAAKiE,MAAU,IAAJoD,GACrBI,EAAK5H,EAAI,GAAKG,KAAKiE,MAAU,IAAJqD,GACzBG,EAAK5H,EAAI,GAAKG,KAAKiE,MAAU,IAAJc,EAE3B,CAEA,OAAOyC,CACT,CAGA,SAAS+C,EAAcpK,EAAOwJ,GAC5B,MAAO,IAAOxJ,EAAQ,IAAOwJ,CAC/B,CC1eA,SAASS,EAAYlB,EAAQJ,EAAcT,GACpCa,GAAWJ,IAGhBI,EAAO/I,MAAQiJ,EAASC,iBAAiB6B,SAAS7C,GAClDS,EAAaD,YAAcO,EAASC,iBAAiB6B,SAAS7C,GAAWW,QAAQ,GAGjFE,EAAOjG,iBAAiB,SAAS,WAE/BmG,EAASC,iBAAiB6B,SAAS7C,GAAakB,WAAWL,EAAO/I,OAGlE2I,EAAaD,YAAcO,EAASC,iBAAiB6B,SAAS7C,GAAWW,QAAQ,GAGjFpF,GACF,IACF,CA2EA,SAASuH,EAAc9D,EAAGC,EAAGvC,EAAGqG,GAE9B,IAAMR,EAAY,MAASvD,EAAI,MAASC,EAAI,MAASvC,EAG/CsG,EAAarL,KAAK4G,IAAIS,EAAGC,EAAGvC,GAC5BuG,EAAatL,KAAK6G,IAAIQ,EAAGC,EAAGvC,GAI5BwG,EAAiBH,GAAU,GAHM,IAAfC,EAAmB,GAAKA,EAAaC,GAAcD,IAU3E,MAAO,CAAEhE,EAJTA,EAAIuD,GAAavD,EAAIuD,IAAc,EAAIW,GAI3BjE,EAHZA,EAAIsD,GAAatD,EAAIsD,IAAc,EAAIW,GAGxBxG,EAFfA,EAAI6F,GAAa7F,EAAI6F,IAAc,EAAIW,GAGzC,CAGA,SAASC,EAAenE,EAAGC,EAAGvC,EAAGqG,GAE/B,IAAMK,EAAsB,GAATL,EAGnB/D,EAAIA,GAAK,EAAIoE,GAAc,GAAMA,EACjCnE,EAAIA,GAAK,EAAImE,GAAc,GAAMA,EACjC1G,EAAIA,GAAK,EAAI0G,GAAc,GAAMA,EAGjC,IAAMC,EAAsB,GAATN,EAKnB,MAAO,CAAE/D,EAJTA,GAAKqE,EAIOpE,EAHZA,GAAKoE,EAGU3G,EAFfA,GAAK2G,EAGP,CC1GA,SAASC,EAAgBC,EAAOvD,GAC9B,GAAKuD,EAAL,CAGAA,EAAMC,UAAY,GAGlB,IAAMC,EAASpJ,SAAS+F,cAAc,UACtCqD,EAAOjI,MAAQ+H,EAAMG,aAAe,GACpCD,EAAOhI,OAAS8H,EAAMI,cAAgB,GACtCJ,EAAM3C,YAAY6C,GAGlBF,EAAMrI,MAAM0I,WAAa,8DACzBL,EAAMrI,MAAM2I,gBAAkB,qPAC9BN,EAAMrI,MAAM4I,aAAe,MAC3BP,EAAMrI,MAAM6I,UAAY,2CACxBR,EAAMrI,MAAM8I,OAAS,OAGrB,IAAMC,EAAY5J,SAAS+F,cAAc,OACzC6D,EAAU5D,UAAY,kBACtBkD,EAAM3C,YAAYqD,GAGlB,IAAMC,EAAYnD,EAASC,iBAAiBmD,YAAYnE,GAGlDoE,EAAUb,EAAMG,YAAc,EAC9BW,EAAUd,EAAMI,aAAe,EAC/BW,EAAc3M,KAAK6G,IAAI4F,EAASC,GAAW,EAI3CE,GAAeL,EAAUlF,EAAI,KAAO,IACpCwF,GAAeN,EAAUjF,EAAI,KAAO,IACpCwF,GAAeP,EAAUxH,EAAI,KAAO,IAGtC4F,EAAa3K,KAAKkG,KAAK0G,EAAYA,EAAcC,EAAYA,EAAcC,EAAYA,GAIvFC,EAAM,GAHVpC,EAAa3K,KAAK6G,IAAI,EAAG8D,IAIR,IAEfoC,EAAM/M,KAAKgN,MAAMH,EAAaD,GAC1BE,EAAc9M,KAAK4G,IAAIgG,EAAaC,KACtCE,EAAM/M,KAAKyF,GAAKzF,KAAKgN,MAAMF,GAAcF,IAGvCG,EAAM,IAAGA,GAAO,EAAI/M,KAAKyF,KAI/B,IAAMpG,EAAIW,KAAKiN,IAAIF,GAAOpC,EAAagC,EACjCrN,EAAIU,KAAKkN,IAAIH,GAAOpC,EAAagC,EAGvCQ,EAA0BvB,EAAOU,EAAWjN,EAAGC,GAG/C,IAAI8N,GAAc,EAGlBxB,EAAM3I,iBAAiB,aAAa,SAACK,GACnC8J,GAAc,EACdC,EAAqB/J,EACvB,IAEAZ,SAASO,iBAAiB,aAAa,SAACK,GACjC8J,GACLC,EAAqB/J,EACvB,IAEAZ,SAASO,iBAAiB,WAAW,WACnCmK,GAAc,CAChB,IAEAxB,EAAM3I,iBAAiB,QAASoK,EA9Ed,CAgFlB,SAASA,EAAqB/J,GAC5B,IAAM+C,EAAOuF,EAAMtF,wBACbmG,EAAUpG,EAAKxC,MAAQ,EACvB6I,EAAUrG,EAAKvC,OAAS,EAGxBzE,EAAIiE,EAAEiD,QAAUF,EAAKG,KAAOiG,EAC5BnN,EAAIgE,EAAEmD,QAAUJ,EAAKK,IAAMgG,EAG3BzG,EAAWjG,KAAKkG,KAAK7G,EAAIA,EAAIC,EAAIA,GACjCqN,EAAc3M,KAAK6G,IAAI4F,EAASC,GAAW,EAGjD,GAAIzG,GAAY0G,EAAa,CAE3BQ,EAA0BvB,EAAOU,EAAWjN,EAAGC,GAG/C,IAAIgO,EAAQtN,KAAKgN,MAAM1N,EAAGD,GACtBiO,EAAQ,IAAGA,GAAS,EAAItN,KAAKyF,IAGjC,IAIMkF,EAJqB1E,EAAW0G,EAKhCvN,EA4EZ,SAAkBmO,EAAGC,GACnB,IAAInG,EAAGC,EAAGvC,EAEJlF,EAAIG,KAAKyN,MAAU,EAAJF,GACfG,EAAQ,EAAJH,EAAQ1N,EACZ8N,EAjFoC,GAiF3B,EAAIH,GACbI,EAlFoC,GAkF3B,EAAIF,EAAIF,GACjBjN,EAnFoC,GAmF3B,GAAK,EAAImN,GAAKF,GAE7B,OAAQ3N,EAAI,GACV,KAAK,EAAGwH,EAtFgC,EAsFzBC,EAAI/G,EAAGwE,EAAI4I,EAAG,MAC7B,KAAK,EAAGtG,EAAIuG,EAAGtG,EAvFyB,EAuFlBvC,EAAI4I,EAAG,MAC7B,KAAK,EAAGtG,EAAIsG,EAAGrG,EAxFyB,EAwFlBvC,EAAIxE,EAAG,MAC7B,KAAK,EAAG8G,EAAIsG,EAAGrG,EAAIsG,EAAG7I,EAzFkB,EAyFX,MAC7B,KAAK,EAAGsC,EAAI9G,EAAG+G,EAAIqG,EAAG5I,EA1FkB,EA0FX,MAC7B,KAAK,EAAGsC,EA3FgC,EA2FzBC,EAAIqG,EAAG5I,EAAI6I,EAG5B,MAAO,CACLvG,EAAGrH,KAAKiE,MAAU,IAAJoD,GACdC,EAAGtH,KAAKiE,MAAU,IAAJqD,GACdvC,EAAG/E,KAAKiE,MAAU,IAAJc,GAElB,CAnGkB8I,CAFAP,GAAS,EAAItN,KAAKyF,IAEJkF,GAIpBmD,EAAU9N,KAAKiE,MAAM,KAAO7E,EAAIiI,EAAI,KAAOsD,GAC3CoD,EAAU/N,KAAKiE,MAAM,KAAO7E,EAAIkI,EAAI,KAAOqD,GAC3CqD,EAAUhO,KAAKiE,MAAM,KAAO7E,EAAI2F,EAAI,KAAO4F,GAGjDvB,EAASC,iBAAiBmD,YAAYnE,GAAa,CAAEhB,EAAGyG,EAASxG,EAAGyG,EAAShJ,EAAGiJ,GAGhFpK,GACF,CACF,CACF,CAGA,SAASqK,IAEP7E,EAASC,iBAAiBmD,YAAY0B,WAAa,CAAE7G,EAAG,IAAKC,EAAG,IAAKvC,EAAG,KACxEqE,EAASC,iBAAiBmD,YAAY2B,cAAgB,CAAE9G,EAAG,IAAKC,EAAG,IAAKvC,EAAG,KAC3EqE,EAASC,iBAAiBmD,YAAY4B,YAAc,EAGpD,IAAMC,EAAoB3L,SAASC,eAAe,gBAC5C2L,EAAmB5L,SAASC,eAAe,sBAE7C0L,IAAmBA,EAAkBlO,MAAQ,GAC7CmO,IAAkBA,EAAiBzF,YAAc,OAGrD,IAAM0F,EAAmB7L,SAASC,eAAe,sBAC3C6L,EAAsB9L,SAASC,eAAe,yBAEpD,GAAI4L,EAAkB,CACpB,IAAME,EAAkBF,EAAiBG,cAAc,oBACnDD,GACFtB,EAA0BoB,EAAkBE,EAAiB,EAAG,EAEpE,CAEA,GAAID,EAAqB,CACvB,IAAMG,EAAqBH,EAAoBE,cAAc,oBACzDC,GACFxB,EAA0BqB,EAAqBG,EAAoB,EAAG,EAE1E,CAGA/K,GACF,CAgBA,SAASuJ,EAA0BvB,EAAOU,EAAWjN,EAAGC,GACtD,IAAMmN,EAAUb,EAAMG,YAAc,EAC9BW,EAAUd,EAAMI,aAAe,EAErCM,EAAU/I,MAAMiD,KAAO,GAAH+B,OAAMkE,EAAUpN,EAAC,MACrCiN,EAAU/I,MAAMmD,IAAM,GAAH6B,OAAMmE,EAAUpN,EAAC,KACtC,CAqDA,SAASsP,EAAiBvH,EAAGC,EAAGvC,EAAGmJ,EAAYC,EAAeC,GAE5D,IAAMxD,EAAY,MAASvD,EAAI,MAASC,EAAI,MAASvC,EAGjD8J,EAAkB7O,KAAKgL,IAAI,EAAIJ,EAAW,GAC1CkE,EAAqB9O,KAAKgL,IAAIJ,EAAW,GAiC7C,OA9BIwD,EAAc,GAEhBS,GAAoB,EAAIT,EACxBU,EAAqBA,GAAsB,EAAIV,GAAeA,GACrDA,EAAc,IAEvBU,GAAuB,EAAIV,EAC3BS,EAAkBA,GAAmB,EAAIT,GAAeA,GAc1D/G,IAViB6G,EAAW7G,EAAI,KAAO,IAUxBwH,EAAkB,GACjCvH,IAViB4G,EAAW5G,EAAI,KAAO,IAUxBuH,EAAkB,GACjC9J,IAViBmJ,EAAWnJ,EAAI,KAAO,IAUxB8J,EAAkB,GAO1B,CAAExH,EAJTA,IAVoB8G,EAAc9G,EAAI,KAAO,IAU3ByH,EAAqB,GAI3BxH,EAHZA,IAVoB6G,EAAc7G,EAAI,KAAO,IAU3BwH,EAAqB,GAGxB/J,EAFfA,IAVoBoJ,EAAcpJ,EAAI,KAAO,IAU3B+J,EAAqB,GAGzC,CCvUA,IAAIC,EAAwB,GAyE5B,SAASC,IACPxM,QAAQC,IAAI,+BAGRwM,OAAOC,aAA4D,mBAAtCD,OAAOC,YAAYC,eAClDF,OAAOC,YAAYC,eAAe,CAChCC,WAAY,CAAC,YACbC,QAAS,CAAC,CAAEC,KAAM,SAAUC,WAAY,CAAC,MAAO,OAAQ,MAAO,WAC9DC,MAAK,SAAAC,GACFA,IACFjN,QAAQC,IAAI,kBAAmBgN,GAC/BrG,EAASsG,qBAAqBC,IAAM,UAAHpH,OAAakH,GAElD,IAAE,OAAO,SAAAjG,GACPhH,QAAQgH,MAAM,iCAAkCA,GAChDoG,GACF,KAGApN,QAAQC,IAAI,4BACZmN,IAEJ,CAGA,SAASA,IACP,IAAMC,EAAQnN,SAAS+F,cAAc,SACrCoH,EAAM1G,KAAO,OACb0G,EAAMC,OAAS,UAEfD,EAAM5M,iBAAiB,UAAU,SAASK,GACxC,GAAIzC,KAAKkP,OAASlP,KAAKkP,MAAM,GAAI,CAC/B,IAAMC,EAAOnP,KAAKkP,MAAM,GACxBvN,QAAQC,IAAI,iBAAkBuN,EAAKV,MAEnC,IAAMW,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAASC,GACvBhH,EAASsG,qBAAqBC,IAAMS,EAAMC,OAAO3I,MACnD,EAEAuI,EAAOK,cAAcN,EACvB,CACF,IAEAH,EAAMU,OACR,CAoGA,SAASC,EAAYC,GAA4B,IAAtBC,IAAahQ,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,KAAAA,UAAA,GAChCiQ,EAAejO,SAASC,eAAe,cACvCiO,EAAgBlO,SAASC,eAAe,eACxCkO,EAAenO,SAASC,eAAe,cACvCmO,EAAyBpO,SAASC,eAAe,4BACjDoO,EAAmBrO,SAASC,eAAe,qBAC3CqO,EAAkBtO,SAASC,eAAe,oBAOhD,OAJAgO,EAAalN,UAAUE,OAAO,UAC9BiN,EAAcnN,UAAUE,OAAO,UAC/BkN,EAAapN,UAAUE,OAAO,UAEtB8M,GACN,IAAK,QACHE,EAAalN,UAAUC,IAAI,UAGvBgN,IACF3B,EAAwB,IAI1B+B,EAAuBvN,MAAM0N,SAAW,WAAH1I,OAAc,IAAMwG,EAAqB,UAC9EiC,EAAgBzN,MAAMiD,KAAO,GAAH+B,OAAMwG,EAAqB,KACrDgC,EAAiBxN,MAAMiD,KAAO,GAAH+B,OAAMwG,EAAqB,KAGtDgC,EAAiBxN,MAAM2N,QAAU,QACjCJ,EAAuBvN,MAAM2N,QAAU,QACvCF,EAAgBzN,MAAM2N,QAAU,QAChC,MAEF,IAAK,SACHN,EAAcnN,UAAUC,IAAI,UAG5BoN,EAAuBvN,MAAM0N,SAAW,iBAGxCF,EAAiBxN,MAAM2N,QAAU,OACjCF,EAAgBzN,MAAM2N,QAAU,OAChCJ,EAAuBvN,MAAM2N,QAAU,QACvC,MAEF,IAAK,QACHL,EAAapN,UAAUC,IAAI,UAG3BoN,EAAuBvN,MAAM2N,QAAU,OAGvCH,EAAiBxN,MAAM2N,QAAU,OACjCF,EAAgBzN,MAAM2N,QAAU,OAGtC,+tBClRA,IAAMC,EAAiB,CACrB,OAAU,CACRxH,SAAU,IACVgB,WAAY,KACZH,WAAY,KACZC,aAAc,IACdC,YAAa,IACbG,aAAc,CAAC,IAAM,GAAM,KAC3BC,gBAAiB,CAAC,IAAM,IAAM,IAEhC,KAAQ,CACNnB,SAAU,IACVgB,WAAY,GACZH,WAAY,KACZC,aAAc,IACdC,YAAa,IACbG,aAAc,CAAC,IAAM,KAAO,KAC5BC,gBAAiB,CAAC,IAAM,GAAM,MAEhC,KAAQ,CACNnB,SAAU,IACVgB,WAAY,IACZH,WAAY,GACZC,aAAc,EACdC,YAAa,IACbG,aAAc,EAAE,IAAM,EAAK,KAC3BC,gBAAiB,CAAC,EAAK,EAAK,MAE9B,GAAM,CACJnB,SAAU,IACVgB,WAAY,EACZH,WAAY,IACZC,aAAc,IACdC,YAAa,IACbG,aAAc,EAAE,KAAO,KAAO,KAC9BC,gBAAiB,CAAC,IAAM,IAAM,MAEhC,KAAQ,CACNnB,SAAU,GACVgB,WAAY,GACZH,WAAY,IACZC,aAAc,KACdC,YAAa,GACbG,aAAc,CAAC,GAAK,IAAM,GAC1BC,gBAAiB,EAAE,KAAO,IAAM,OAKhCsG,EAAc,CAAC,EAwGnB,SAASC,EAAaC,EAAUnR,GAC9B,IAAM+I,EAASxG,SAASC,eAAe2O,GACjCxI,EAAepG,SAASC,eAAe,GAAD4F,OAAI+I,EAAQ,WAEpDpI,IACFA,EAAO/I,MAAQA,GAGb2I,IACFA,EAAaD,YAAc1I,EAAM6I,QAAQ,GAE7C,CC9FO,SAASuI,IAAsC,IAArBC,EAAW9Q,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GACpC+Q,EAAa/O,SAASC,eAAe,eAC3C,GAAK8O,EAAL,CAMA,IAAIC,EAAa,uCAGbzC,OAAO0C,kBACTD,EAAazC,OAAO0C,mBAKpBF,EAAW5I,YAFT2I,EAEuBE,EAGAA,EAAWE,MAAM,EAAG,KAAO,KAftD,MAFEpP,QAAQO,KAAK,gCAmBjB,CA6GO,SAAS8O,EAAUC,GAAyC,IAAhC3I,EAAIzI,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,OAAQqR,EAAQrR,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAC3D8B,QAAQC,IAAI,uBAAD8F,OAAwBuJ,EAAO,MAAAvJ,OAAKY,EAAI,MAGnD,IAAI6I,EAAiBtP,SAASgM,cAAc,oBACvCsD,KACHA,EAAiBtP,SAAS+F,cAAc,QACzBC,UAAY,kBAC3BhG,SAASuP,KAAKhJ,YAAY+I,IAI5B,IAAME,EAAQxP,SAAS+F,cAAc,OAsBrC,OArBAyJ,EAAMxJ,UAAY,eAAHH,OAAkBY,GACjC+I,EAAMrJ,YAAciJ,EAGpBE,EAAe/I,YAAYiJ,GAG3BC,YAAW,WACTD,EAAMzO,UAAUC,IAAI,OACtB,GAAG,IAGHyO,YAAW,WACTD,EAAMzO,UAAUE,OAAO,QAGvBwO,YAAW,WACTH,EAAeI,YAAYF,EAC7B,GAAG,IACL,GAAGH,GAEIG,CACT,oPC/OAG,EAAA,kBAAA/O,CAAA,MAAA/C,EAAA+C,EAAA,GAAA+D,EAAA3I,OAAAM,UAAAsT,EAAAjL,EAAApI,eAAAR,EAAAC,OAAAC,gBAAA,SAAA4B,EAAA+C,EAAA+D,GAAA9G,EAAA+C,GAAA+D,EAAAlH,KAAA,EAAAN,EAAA,mBAAA0S,OAAAA,OAAA,GAAAzN,EAAAjF,EAAA2S,UAAA,aAAAC,EAAA5S,EAAA6S,eAAA,kBAAAC,EAAA9S,EAAA+S,aAAA,yBAAAC,EAAAtS,EAAA+C,EAAA+D,GAAA,OAAA3I,OAAAC,eAAA4B,EAAA+C,EAAA,CAAAnD,MAAAkH,EAAAzI,YAAA,EAAAkU,cAAA,EAAAC,UAAA,IAAAxS,EAAA+C,EAAA,KAAAuP,EAAA,aAAAtS,GAAAsS,EAAA,SAAAtS,EAAA+C,EAAA+D,GAAA,OAAA9G,EAAA+C,GAAA+D,CAAA,WAAA2L,EAAAzS,EAAA+C,EAAA+D,EAAAiL,GAAA,IAAAzS,EAAAyD,GAAAA,EAAAtE,qBAAAiU,EAAA3P,EAAA2P,EAAAnO,EAAApG,OAAAwU,OAAArT,EAAAb,WAAAyT,EAAA,IAAAU,EAAAb,GAAA,WAAA7T,EAAAqG,EAAA,WAAA3E,MAAAiT,EAAA7S,EAAA8G,EAAAoL,KAAA3N,CAAA,UAAAuO,EAAA9S,EAAA+C,EAAA+D,GAAA,WAAA8B,KAAA,SAAAmK,IAAA/S,EAAArB,KAAAoE,EAAA+D,GAAA,OAAA9G,GAAA,OAAA4I,KAAA,QAAAmK,IAAA/S,EAAA,EAAA+C,EAAA0P,KAAAA,EAAA,IAAAzF,EAAA,iBAAAgG,EAAA,iBAAA7F,EAAA,YAAAF,EAAA,YAAAlO,EAAA,YAAA2T,IAAA,UAAAO,IAAA,UAAAC,IAAA,KAAA9F,EAAA,GAAAkF,EAAAlF,EAAA7I,GAAA,8BAAA4O,EAAAhV,OAAAiV,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvM,GAAAiL,EAAApT,KAAA0U,EAAA9O,KAAA6I,EAAAiG,GAAA,IAAAtM,EAAAmM,EAAAzU,UAAAiU,EAAAjU,UAAAN,OAAAwU,OAAAvF,GAAA,SAAAmG,EAAAvT,GAAA,0BAAA6E,SAAA,SAAA9B,GAAAuP,EAAAtS,EAAA+C,GAAA,SAAA/C,GAAA,YAAAwT,QAAAzQ,EAAA/C,EAAA,gBAAAyT,EAAAzT,EAAA+C,GAAA,SAAA2Q,EAAA5M,EAAA5I,EAAAoB,EAAAiF,GAAA,IAAA2N,EAAAY,EAAA9S,EAAA8G,GAAA9G,EAAA9B,GAAA,aAAAgU,EAAAtJ,KAAA,KAAAwJ,EAAAF,EAAAa,IAAA/F,EAAAoF,EAAAxS,MAAA,OAAAoN,GAAA,UAAA2G,EAAA3G,IAAA+E,EAAApT,KAAAqO,EAAA,WAAAjK,EAAA6Q,QAAA5G,EAAA6G,SAAA5E,MAAA,SAAAjP,GAAA0T,EAAA,OAAA1T,EAAAV,EAAAiF,EAAA,aAAAvE,GAAA0T,EAAA,QAAA1T,EAAAV,EAAAiF,EAAA,IAAAxB,EAAA6Q,QAAA5G,GAAAiC,MAAA,SAAAjP,GAAAoS,EAAAxS,MAAAI,EAAAV,EAAA8S,EAAA,aAAApS,GAAA,OAAA0T,EAAA,QAAA1T,EAAAV,EAAAiF,EAAA,IAAAA,EAAA2N,EAAAa,IAAA,KAAAjM,EAAA5I,EAAA,gBAAA0B,MAAA,SAAAI,EAAA+R,GAAA,SAAA+B,IAAA,WAAA/Q,GAAA,SAAAA,EAAA+D,GAAA4M,EAAA1T,EAAA+R,EAAAhP,EAAA+D,EAAA,WAAAA,EAAAA,EAAAA,EAAAmI,KAAA6E,EAAAA,GAAAA,GAAA,aAAAjB,EAAA9P,EAAA+D,EAAAiL,GAAA,IAAA7T,EAAA8O,EAAA,gBAAA1N,EAAAiF,GAAA,GAAArG,IAAAiP,EAAA,MAAA4G,MAAA,mCAAA7V,IAAA+O,EAAA,cAAA3N,EAAA,MAAAiF,EAAA,OAAA3E,MAAAI,EAAAgU,MAAA,OAAAjC,EAAAkC,OAAA3U,EAAAyS,EAAAgB,IAAAxO,IAAA,KAAA2N,EAAAH,EAAAmC,SAAA,GAAAhC,EAAA,KAAAE,EAAA+B,EAAAjC,EAAAH,GAAA,GAAAK,EAAA,IAAAA,IAAArT,EAAA,gBAAAqT,CAAA,cAAAL,EAAAkC,OAAAlC,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAAgB,SAAA,aAAAhB,EAAAkC,OAAA,IAAA/V,IAAA8O,EAAA,MAAA9O,EAAA+O,EAAA8E,EAAAgB,IAAAhB,EAAAuC,kBAAAvC,EAAAgB,IAAA,gBAAAhB,EAAAkC,QAAAlC,EAAAwC,OAAA,SAAAxC,EAAAgB,KAAA7U,EAAAiP,EAAA,IAAAC,EAAA0F,EAAA/P,EAAA+D,EAAAiL,GAAA,cAAA3E,EAAAxE,KAAA,IAAA1K,EAAA6T,EAAAiC,KAAA/G,EAAA+F,EAAA5F,EAAA2F,MAAAhU,EAAA,gBAAAa,MAAAwN,EAAA2F,IAAAiB,KAAAjC,EAAAiC,KAAA,WAAA5G,EAAAxE,OAAA1K,EAAA+O,EAAA8E,EAAAkC,OAAA,QAAAlC,EAAAgB,IAAA3F,EAAA2F,IAAA,YAAAoB,EAAApR,EAAA+D,GAAA,IAAAiL,EAAAjL,EAAAmN,OAAA/V,EAAA6E,EAAAkP,SAAAF,GAAA,GAAA7T,IAAA8B,EAAA,OAAA8G,EAAAoN,SAAA,eAAAnC,GAAAhP,EAAAkP,SAAA,SAAAnL,EAAAmN,OAAA,SAAAnN,EAAAiM,IAAA/S,EAAAmU,EAAApR,EAAA+D,GAAA,UAAAA,EAAAmN,SAAA,WAAAlC,IAAAjL,EAAAmN,OAAA,QAAAnN,EAAAiM,IAAA,IAAAyB,UAAA,oCAAAzC,EAAA,aAAAhT,EAAA,IAAAO,EAAAwT,EAAA5U,EAAA6E,EAAAkP,SAAAnL,EAAAiM,KAAA,aAAAzT,EAAAsJ,KAAA,OAAA9B,EAAAmN,OAAA,QAAAnN,EAAAiM,IAAAzT,EAAAyT,IAAAjM,EAAAoN,SAAA,KAAAnV,EAAA,IAAAwF,EAAAjF,EAAAyT,IAAA,OAAAxO,EAAAA,EAAAyP,MAAAlN,EAAA/D,EAAA0R,YAAAlQ,EAAA3E,MAAAkH,EAAA4N,KAAA3R,EAAA4R,QAAA,WAAA7N,EAAAmN,SAAAnN,EAAAmN,OAAA,OAAAnN,EAAAiM,IAAA/S,GAAA8G,EAAAoN,SAAA,KAAAnV,GAAAwF,GAAAuC,EAAAmN,OAAA,QAAAnN,EAAAiM,IAAA,IAAAyB,UAAA,oCAAA1N,EAAAoN,SAAA,KAAAnV,EAAA,UAAA6V,EAAA5U,GAAA,IAAA+C,EAAA,CAAA8R,OAAA7U,EAAA,SAAAA,IAAA+C,EAAA+R,SAAA9U,EAAA,SAAAA,IAAA+C,EAAAgS,WAAA/U,EAAA,GAAA+C,EAAAiS,SAAAhV,EAAA,SAAAiV,WAAAC,KAAAnS,EAAA,UAAAoS,EAAAnV,GAAA,IAAA+C,EAAA/C,EAAAoV,YAAA,GAAArS,EAAA6F,KAAA,gBAAA7F,EAAAgQ,IAAA/S,EAAAoV,WAAArS,CAAA,UAAA6P,EAAA5S,GAAA,KAAAiV,WAAA,EAAAJ,OAAA,SAAA7U,EAAA6E,QAAA+P,EAAA,WAAAS,OAAA,YAAA/B,EAAAvQ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA+D,EAAA/D,EAAAwB,GAAA,GAAAuC,EAAA,OAAAA,EAAAnI,KAAAoE,GAAA,sBAAAA,EAAA2R,KAAA,OAAA3R,EAAA,IAAAuS,MAAAvS,EAAAxD,QAAA,KAAArB,GAAA,EAAAoB,EAAA,SAAAoV,IAAA,OAAAxW,EAAA6E,EAAAxD,QAAA,GAAAwS,EAAApT,KAAAoE,EAAA7E,GAAA,OAAAwW,EAAA9U,MAAAmD,EAAA7E,GAAAwW,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA9U,MAAAI,EAAA0U,EAAAV,MAAA,EAAAU,CAAA,SAAApV,EAAAoV,KAAApV,CAAA,YAAAkV,UAAAb,EAAA5Q,GAAA,2BAAAkQ,EAAAxU,UAAAyU,EAAAhV,EAAA6I,EAAA,eAAAnH,MAAAsT,EAAAX,cAAA,IAAArU,EAAAgV,EAAA,eAAAtT,MAAAqT,EAAAV,cAAA,IAAAU,EAAAsC,YAAAjD,EAAAY,EAAAd,EAAA,qBAAArP,EAAAyS,oBAAA,SAAAxV,GAAA,IAAA+C,EAAA,mBAAA/C,GAAAA,EAAAyV,YAAA,QAAA1S,IAAAA,IAAAkQ,GAAA,uBAAAlQ,EAAAwS,aAAAxS,EAAAgM,MAAA,EAAAhM,EAAA2S,KAAA,SAAA1V,GAAA,OAAA7B,OAAAwX,eAAAxX,OAAAwX,eAAA3V,EAAAkT,IAAAlT,EAAA4V,UAAA1C,EAAAZ,EAAAtS,EAAAoS,EAAA,sBAAApS,EAAAvB,UAAAN,OAAAwU,OAAA5L,GAAA/G,CAAA,EAAA+C,EAAA8S,MAAA,SAAA7V,GAAA,OAAA6T,QAAA7T,EAAA,EAAAuT,EAAAE,EAAAhV,WAAA6T,EAAAmB,EAAAhV,UAAAyT,GAAA,0BAAAnP,EAAA0Q,cAAAA,EAAA1Q,EAAA+S,MAAA,SAAA9V,EAAA8G,EAAAiL,EAAA7T,EAAAoB,QAAA,IAAAA,IAAAA,EAAAyW,SAAA,IAAAxR,EAAA,IAAAkP,EAAAhB,EAAAzS,EAAA8G,EAAAiL,EAAA7T,GAAAoB,GAAA,OAAAyD,EAAAyS,oBAAA1O,GAAAvC,EAAAA,EAAAmQ,OAAAzF,MAAA,SAAAjP,GAAA,OAAAA,EAAAgU,KAAAhU,EAAAJ,MAAA2E,EAAAmQ,MAAA,KAAAnB,EAAAxM,GAAAuL,EAAAvL,EAAAqL,EAAA,aAAAE,EAAAvL,EAAAxC,GAAA,0BAAA+N,EAAAvL,EAAA,qDAAAhE,EAAAiT,KAAA,SAAAhW,GAAA,IAAA+C,EAAA5E,OAAA6B,GAAA8G,EAAA,WAAAiL,KAAAhP,EAAA+D,EAAAoO,KAAAnD,GAAA,OAAAjL,EAAAmP,UAAA,SAAAvB,IAAA,KAAA5N,EAAAvH,QAAA,KAAAS,EAAA8G,EAAAoP,MAAA,GAAAlW,KAAA+C,EAAA,OAAA2R,EAAA9U,MAAAI,EAAA0U,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3R,EAAAuQ,OAAAA,EAAAV,EAAAnU,UAAA,CAAAgX,YAAA7C,EAAAyC,MAAA,SAAAtS,GAAA,QAAAoT,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArU,EAAA,KAAAgU,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAlB,IAAA/S,EAAA,KAAAiV,WAAApQ,QAAAsQ,IAAApS,EAAA,QAAA+D,KAAA,WAAAA,EAAAsP,OAAA,IAAArE,EAAApT,KAAA,KAAAmI,KAAAwO,OAAAxO,EAAAuK,MAAA,WAAAvK,GAAA9G,EAAA,EAAAqW,KAAA,gBAAArC,MAAA,MAAAhU,EAAA,KAAAiV,WAAA,GAAAG,WAAA,aAAApV,EAAA4I,KAAA,MAAA5I,EAAA+S,IAAA,YAAAuD,IAAA,EAAAhC,kBAAA,SAAAvR,GAAA,QAAAiR,KAAA,MAAAjR,EAAA,IAAA+D,EAAA,cAAAyP,EAAAxE,EAAA7T,GAAA,OAAAqG,EAAAqE,KAAA,QAAArE,EAAAwO,IAAAhQ,EAAA+D,EAAA4N,KAAA3C,EAAA7T,IAAA4I,EAAAmN,OAAA,OAAAnN,EAAAiM,IAAA/S,KAAA9B,CAAA,SAAAA,EAAA,KAAA+W,WAAA1V,OAAA,EAAArB,GAAA,IAAAA,EAAA,KAAAoB,EAAA,KAAA2V,WAAA/W,GAAAqG,EAAAjF,EAAA8V,WAAA,YAAA9V,EAAAuV,OAAA,OAAA0B,EAAA,UAAAjX,EAAAuV,QAAA,KAAAsB,KAAA,KAAAjE,EAAAH,EAAApT,KAAAW,EAAA,YAAA8S,EAAAL,EAAApT,KAAAW,EAAA,iBAAA4S,GAAAE,EAAA,SAAA+D,KAAA7W,EAAAwV,SAAA,OAAAyB,EAAAjX,EAAAwV,UAAA,WAAAqB,KAAA7W,EAAAyV,WAAA,OAAAwB,EAAAjX,EAAAyV,WAAA,SAAA7C,GAAA,QAAAiE,KAAA7W,EAAAwV,SAAA,OAAAyB,EAAAjX,EAAAwV,UAAA,YAAA1C,EAAA,MAAA2B,MAAA,kDAAAoC,KAAA7W,EAAAyV,WAAA,OAAAwB,EAAAjX,EAAAyV,WAAA,KAAAR,OAAA,SAAAvU,EAAA+C,GAAA,QAAA+D,EAAA,KAAAmO,WAAA1V,OAAA,EAAAuH,GAAA,IAAAA,EAAA,KAAA5I,EAAA,KAAA+W,WAAAnO,GAAA,GAAA5I,EAAA2W,QAAA,KAAAsB,MAAApE,EAAApT,KAAAT,EAAA,oBAAAiY,KAAAjY,EAAA6W,WAAA,KAAAzV,EAAApB,EAAA,OAAAoB,IAAA,UAAAU,GAAA,aAAAA,IAAAV,EAAAuV,QAAA9R,GAAAA,GAAAzD,EAAAyV,aAAAzV,EAAA,UAAAiF,EAAAjF,EAAAA,EAAA8V,WAAA,UAAA7Q,EAAAqE,KAAA5I,EAAAuE,EAAAwO,IAAAhQ,EAAAzD,GAAA,KAAA2U,OAAA,YAAAS,KAAApV,EAAAyV,WAAAhW,GAAA,KAAAyX,SAAAjS,EAAA,EAAAiS,SAAA,SAAAxW,EAAA+C,GAAA,aAAA/C,EAAA4I,KAAA,MAAA5I,EAAA+S,IAAA,gBAAA/S,EAAA4I,MAAA,aAAA5I,EAAA4I,KAAA,KAAA8L,KAAA1U,EAAA+S,IAAA,WAAA/S,EAAA4I,MAAA,KAAA0N,KAAA,KAAAvD,IAAA/S,EAAA+S,IAAA,KAAAkB,OAAA,cAAAS,KAAA,kBAAA1U,EAAA4I,MAAA7F,IAAA,KAAA2R,KAAA3R,GAAAhE,CAAA,EAAA0X,OAAA,SAAAzW,GAAA,QAAA+C,EAAA,KAAAkS,WAAA1V,OAAA,EAAAwD,GAAA,IAAAA,EAAA,KAAA+D,EAAA,KAAAmO,WAAAlS,GAAA,GAAA+D,EAAAiO,aAAA/U,EAAA,YAAAwW,SAAA1P,EAAAsO,WAAAtO,EAAAkO,UAAAG,EAAArO,GAAA/H,CAAA,kBAAAiB,GAAA,QAAA+C,EAAA,KAAAkS,WAAA1V,OAAA,EAAAwD,GAAA,IAAAA,EAAA,KAAA+D,EAAA,KAAAmO,WAAAlS,GAAA,GAAA+D,EAAA+N,SAAA7U,EAAA,KAAA+R,EAAAjL,EAAAsO,WAAA,aAAArD,EAAAnJ,KAAA,KAAA1K,EAAA6T,EAAAgB,IAAAoC,EAAArO,EAAA,QAAA5I,CAAA,QAAA6V,MAAA,0BAAA2C,cAAA,SAAA3T,EAAA+D,EAAAiL,GAAA,YAAAmC,SAAA,CAAAjC,SAAAqB,EAAAvQ,GAAA0R,WAAA3N,EAAA6N,QAAA5C,GAAA,cAAAkC,SAAA,KAAAlB,IAAA/S,GAAAjB,CAAA,GAAAgE,CAAA,UAAA4T,EAAA5E,EAAA/R,EAAA+C,EAAA+D,EAAA5I,EAAAqG,EAAA2N,GAAA,QAAA5S,EAAAyS,EAAAxN,GAAA2N,GAAAE,EAAA9S,EAAAM,KAAA,OAAAmS,GAAA,YAAAhP,EAAAgP,EAAA,CAAAzS,EAAA0U,KAAAhU,EAAAoS,GAAA2D,QAAAnC,QAAAxB,GAAAnD,KAAAnI,EAAA5I,EAAA,CAuEO,SAAe0Y,EAAWC,GAAA,OAAAC,EAAAC,MAAC,KAAD5W,UAAA,CAwCjC,SAAA2W,IAFC,OA7GD/E,EA+GAD,IAAA4D,MAxCO,SAAAsB,EAA2BC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/S,EAAAgT,EAAApX,UAAA,OAAA2R,IAAAW,MAAA,SAAA+E,GAAA,cAAAA,EAAArB,KAAAqB,EAAA9C,MAAA,OAOrC,GAPuCwC,EAAeK,EAAAhY,OAAA,QAAAa,IAAAmX,EAAA,GAAAA,EAAA,GAAG,WAC3DtV,QAAQC,IAAI,mBAAmBsV,EAAArB,KAAA,EAIvBgB,EAAWD,EAAgBO,SAAS,SAAWP,EAAkB,GAAHlP,OAAMkP,EAAe,UAGrFxI,OAAOC,aAAqD,mBAA/BD,OAAOC,YAAY+I,QAAsB,CAAAF,EAAA9C,KAAA,gBAAA8C,EAAA9C,KAAA,EACjDhG,OAAOC,YAAY+I,QAAQ,CAChDT,QAAAA,EACAU,YAAaR,IACb,OAHY,KAARC,EAAQI,EAAApD,MAKA,CAAFoD,EAAA9C,KAAA,SACwC,OAAlDpD,EAAU,iBAADtJ,OAAkBoP,GAAY,WAAWI,EAAAjD,OAAA,SAC3C6C,GAAQ,QAAAI,EAAA9C,KAAA,iBAcqC,OAVhD2C,EAAO,IAAIO,KAAK,CAACX,GAAU,CAAErO,KAAM,eACnC0O,EAAMO,IAAIC,gBAAgBT,IAC1B9S,EAAIpC,SAAS+F,cAAc,MAC/B6P,KAAOT,EACT/S,EAAEyT,SAAWb,EACbhV,SAASuP,KAAKhJ,YAAYnE,GAC1BA,EAAEyL,QACF7N,SAASuP,KAAKG,YAAYtN,GAC1BsT,IAAII,gBAAgBX,GAEpBhG,EAAU,qBAADtJ,OAAsBmP,GAAY,WAAWK,EAAAjD,OAAA,SAC/C4C,GAAQ,QAAAK,EAAA9C,KAAA,iBAI6B,OAJ7B8C,EAAArB,KAAA,GAAAqB,EAAAU,GAAAV,EAAA,SAGjBvV,QAAQgH,MAAM,oBAAmBuO,EAAAU,IACjC5G,EAAU,0BAA2B,SAASkG,EAAAjD,OAAA,SACvC,MAAI,yBAAAiD,EAAAnB,OAAA,GAAAW,EAAA,kBAIfF,EA/GA,eAAA9W,EAAA,KAAA+C,EAAA5C,UAAA,WAAA4V,SAAA,SAAAjP,EAAA5I,GAAA,IAAAqG,EAAAwN,EAAAgF,MAAA/W,EAAA+C,GAAA,SAAAoV,EAAApG,GAAA4E,EAAApS,EAAAuC,EAAA5I,EAAAia,EAAAC,EAAA,OAAArG,EAAA,UAAAqG,EAAArG,GAAA4E,EAAApS,EAAAuC,EAAA5I,EAAAia,EAAAC,EAAA,QAAArG,EAAA,CAAAoG,OAAA,OA6GCrB,EAAAC,MAAA,KAAA5W,WA7GD,IAAA4R,CA6GC,CC7FM,SAASX,IACd,IAAMiH,EAAYxP,EAASC,iBACrBwP,EAAOD,EAAUC,MAAQ,GAC3BrB,EAAU,GAGdA,GAAW,KAAJjP,OAASqQ,EAAUE,MAAK,MAC/BtB,GAAW,8BACXA,GAAW,eAAJjP,OAAmBsQ,EAAI,MAC9BrB,GAAW,2BACXA,GAAW,6BAKX,IAFA,IAAMrP,EAAO,GAAO0Q,EAAO,GAElB9T,EAAI,EAAGA,EAAI8T,EAAM9T,IACxB,IAAK,IAAIuC,EAAI,EAAGA,EAAIuR,EAAMvR,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIwR,EAAMxR,IAAK,CAE7B,IAAI0R,EAAW1R,EAAIc,EACf6Q,EAAa1R,EAAIa,EACjB8Q,EAAYlU,EAAIoD,EAGpB,GAA4B,UAAxBiB,EAAS8P,WAAwB,CACnC,IAAMxR,EAASyR,EAAyBJ,EAAUC,EAAYC,GAC9DF,EAAWrR,EAAOL,EAClB2R,EAAatR,EAAOJ,EACpB2R,EAAYvR,EAAO3C,CACrB,KAAO,CACL,IAAM2C,EAAS0R,EAA4BL,EAAUC,EAAYC,GACjEF,EAAWrR,EAAOL,EAClB2R,EAAatR,EAAOJ,EACpB2R,EAAYvR,EAAO3C,CACrB,CAGAgU,EAAW/Y,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKmS,IACvCC,EAAahZ,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKoS,IACzCC,EAAYjZ,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKqS,IAGxCzB,GAAW,GAAJjP,OAAOwQ,EAAS/P,QAAQ,GAAE,KAAAT,OAAIyQ,EAAWhQ,QAAQ,GAAE,KAAAT,OAAI0Q,EAAUjQ,QAAQ,GAAE,KACpF,CAIJ,OAAOwO,CACT,CAGO,SAAS2B,EAAyB9R,EAAGC,EAAGvC,GAC7C,IAAMtE,EAAS2I,EAASC,iBAAiBgB,OAAS,CAAC,EAanD,GAVAhD,EAAIkD,EAAclD,EAAG5G,EAAOkJ,UAAY,GACxCrC,EAAIiD,EAAcjD,EAAG7G,EAAOkJ,UAAY,GACxC5E,EAAIwF,EAAcxF,EAAGtE,EAAOkJ,UAAY,GAGxCtC,GAAK5G,EAAO+J,YAAc,EAC1BlD,GAAK7G,EAAOgK,cAAgB,EAC5B1F,GAAKtE,EAAOiK,aAAe,EAGvBjK,EAAOoK,cAAgBpK,EAAOqK,gBAAiB,CACjD,IAAIC,EAAe/K,KAAKgL,IAAI,EAAIhL,KAAK4G,IAAIS,EAAGrH,KAAK4G,IAAIU,EAAGvC,IAAK,GACzDkG,EAAkBjL,KAAKgL,IAAIhL,KAAK4G,IAAIS,EAAGrH,KAAK4G,IAAIU,EAAGvC,IAAK,GAE5DsC,GAAK5G,EAAOoK,aAAa,GAAKE,EAAetK,EAAOqK,gBAAgB,GAAKG,EACzE3D,GAAK7G,EAAOoK,aAAa,GAAKE,EAAetK,EAAOqK,gBAAgB,GAAKG,EACzElG,GAAKtE,EAAOoK,aAAa,GAAKE,EAAetK,EAAOqK,gBAAgB,GAAKG,CAC3E,CAGA,QAA0BtK,IAAtBF,EAAOkK,YAAkD,IAAtBlK,EAAOkK,WAAoB,CAChE,IAAMC,EAAY,MAASvD,EAAI,MAASC,EAAI,MAASvC,EACrDsC,EAAIuD,EAAYnK,EAAOkK,YAActD,EAAIuD,GACzCtD,EAAIsD,EAAYnK,EAAOkK,YAAcrD,EAAIsD,GACzC7F,EAAI6F,EAAYnK,EAAOkK,YAAc5F,EAAI6F,EAC3C,CAEA,MAAO,CAAEvD,EAAAA,EAAGC,EAAAA,EAAGvC,EAAAA,EACjB,CAGO,SAASqU,EAA4B/R,EAAGC,EAAGvC,GAChD,IAAMtE,EAAS2I,EAASC,iBAGxB,GAAI5I,EAAO6I,UAA2C,IAA/B7I,EAAO6I,QAAQU,aAA6C,IAAxBvJ,EAAO6I,QAAQW,MAAa,CACrF,IAAMoP,EAiHH,SAAiChS,EAAGC,EAAGvC,EAAGiF,EAAaC,GAmC5D,OAhCmBD,EAOF,GAPEA,EAYK,KAHtB3C,GAAS,EAAiB,GATT2C,EAUjB1C,GAAS,EAAiB,GAVT0C,EAWjBjF,GAAS,EAAiB,GAXTiF,IAIAC,EAgBF,GAhBEA,EAqBK,KAHtB5C,GAAS,EAAiB,GAlBT4C,EAmBjB3C,GAAS,EAAiB,GAnBT2C,EAoBjBlF,GAAS,EAAiB,GApBTkF,GA4BZ,CAAE5C,EAAAA,EAAGC,EAAAA,EAAGvC,EAAAA,EACjB,CArJuBuU,CACjBjS,EAAGC,EAAGvC,EACNtE,EAAO6I,QAAQU,YAAc,IAC7BvJ,EAAO6I,QAAQW,KAAO,KAExB5C,EAAIgS,EAAWhS,EACfC,EAAI+R,EAAW/R,EACfvC,EAAIsU,EAAWtU,CACjB,CAGA,GAAItE,EAAO6I,QAAS,CAElB,GAAgC,IAA5B7I,EAAO6I,QAAQI,SAAgB,CACjC,IAAM6P,EAAiBvZ,KAAKgL,IAAI,EAAGvK,EAAO6I,QAAQI,SAAW,KAC7DrC,GAAKkS,EACLjS,GAAKiS,EACLxU,GAAKwU,CACP,CAGA,GAAgC,IAA5B9Y,EAAO6I,QAAQK,SAAgB,CACjC,IAAM6P,EAAgB,EAAK/Y,EAAO6I,QAAQK,SAAW,IACrDtC,EAAIkD,EAAclD,EAAGmS,GACrBlS,EAAIiD,EAAcjD,EAAGkS,GACrBzU,EAAIwF,EAAcxF,EAAGyU,EACvB,CACF,CAGA,GAAI/Y,EAAO6I,QAAS,CAClB,IAAMmQ,EAyHH,SAA8BpS,EAAGC,EAAGvC,EAAG6E,EAAYC,EAASC,EAAQC,GAEzE,IAAMa,EAAY,MAASvD,EAAI,MAASC,EAAI,MAASvC,EAe/C2U,EAZgB1Z,KAAKgL,IAAIJ,EAAW,GAAKhB,EAG5B5J,KAAKgL,IAAI,EAAIJ,EAAW,GAAKf,EAG7B7J,KAAKgL,IAAIJ,EAAW,GAAKd,EAGzB9J,KAAKgL,IAAI,EAAIJ,EAAW,GAAKb,EAUhD,MAAO,CAAE1C,EAJTA,GAAKqS,EAIOpS,EAHZA,GAAKoS,EAGU3U,EAFfA,GAAK2U,EAGP,CAlJuBC,CACjBtS,EAAGC,EAAGvC,EACNtE,EAAO6I,QAAQM,WAAa,IAC5BnJ,EAAO6I,QAAQO,QAAU,IACzBpJ,EAAO6I,QAAQQ,OAAS,IACxBrJ,EAAO6I,QAAQS,OAAS,KAE1B1C,EAAIoS,EAAWpS,EACfC,EAAImS,EAAWnS,EACfvC,EAAI0U,EAAW1U,CACjB,CAGA,GAAItE,EAAO+L,YAAa,CACtB,IAAM0B,EAAazN,EAAO+L,YAAY0B,WAChCC,EAAgB1N,EAAO+L,YAAY2B,cACnCC,EAAc3N,EAAO+L,YAAY4B,YAAc,IAErD,GAAqB,MAAjBF,EAAW7G,GAA8B,MAAjB6G,EAAW5G,GAA8B,MAAjB4G,EAAWnJ,GACvC,MAApBoJ,EAAc9G,GAAiC,MAApB8G,EAAc7G,GAAiC,MAApB6G,EAAcpJ,GACpD,IAAhBqJ,EAAmB,CAErB,IAAMwL,EAAmBhL,EAAiBvH,EAAGC,EAAGvC,EAAGmJ,EAAYC,EAAeC,GAC9E/G,EAAIuS,EAAiBvS,EACrBC,EAAIsS,EAAiBtS,EACrBvC,EAAI6U,EAAiB7U,CACvB,CACF,CAGA,GAAItE,EAAOoZ,OAAQ,CAEjB,IAAMtS,EAAY9G,EAAOoZ,OAAOza,IAC5BmI,IACFF,EAAInH,EAAiBqH,EAAWF,GAChCC,EAAIpH,EAAiBqH,EAAWD,GAChCvC,EAAI7E,EAAiBqH,EAAWxC,IAI9BtE,EAAOoZ,OAAOta,MAAQI,EAAcc,EAAOoZ,OAAOta,OACpD8H,EAAInH,EAAiBO,EAAOoZ,OAAOta,IAAK8H,IAGtC5G,EAAOoZ,OAAOra,QAAUG,EAAcc,EAAOoZ,OAAOra,SACtD8H,EAAIpH,EAAiBO,EAAOoZ,OAAOra,MAAO8H,IAGxC7G,EAAOoZ,OAAOpa,OAASE,EAAcc,EAAOoZ,OAAOpa,QACrDsF,EAAI7E,EAAiBO,EAAOoZ,OAAOpa,KAAMsF,GAE7C,CAGA,GAAItE,EAAOyK,SAAU,CAEnB,GAAiC,IAA7BzK,EAAOyK,SAAS4O,SAAgB,CAClC,IAAMC,EAAiBtZ,EAAOyK,SAAS4O,SAAW,IAC5ClP,EAAY,MAASvD,EAAI,MAASC,EAAI,MAASvC,EAC/CsG,EAAarL,KAAK4G,IAAIS,EAAGC,EAAGvC,GAC5BuG,EAAatL,KAAK6G,IAAIQ,EAAGC,EAAGvC,GAE5BwG,EAAiBwO,GAAkB,GADF,IAAf1O,EAAmB,GAAKA,EAAaC,GAAcD,IAG3EhE,EAAIuD,GAAavD,EAAIuD,IAAc,EAAIW,GACvCjE,EAAIsD,GAAatD,EAAIsD,IAAc,EAAIW,GACvCxG,EAAI6F,GAAa7F,EAAI6F,IAAc,EAAIW,EACzC,CAGA,GAAI9K,EAAOyK,SAAS8O,UAAY,EAAG,CACjC,IAAMC,EAAczO,EAAenE,EAAGC,EAAGvC,EAAGtE,EAAOyK,SAAS8O,UAAY,KACxE3S,EAAI4S,EAAY5S,EAChBC,EAAI2S,EAAY3S,EAChBvC,EAAIkV,EAAYlV,CAClB,CACF,CAEA,MAAO,CAAEsC,EAAAA,EAAGC,EAAAA,EAAGvC,EAAAA,EACjB,oPCzNAsN,EAAA,kBAAA/O,CAAA,MAAA/C,EAAA+C,EAAA,GAAA+D,EAAA3I,OAAAM,UAAAsT,EAAAjL,EAAApI,eAAAR,EAAAC,OAAAC,gBAAA,SAAA4B,EAAA+C,EAAA+D,GAAA9G,EAAA+C,GAAA+D,EAAAlH,KAAA,EAAAN,EAAA,mBAAA0S,OAAAA,OAAA,GAAAzN,EAAAjF,EAAA2S,UAAA,aAAAC,EAAA5S,EAAA6S,eAAA,kBAAAC,EAAA9S,EAAA+S,aAAA,yBAAAC,EAAAtS,EAAA+C,EAAA+D,GAAA,OAAA3I,OAAAC,eAAA4B,EAAA+C,EAAA,CAAAnD,MAAAkH,EAAAzI,YAAA,EAAAkU,cAAA,EAAAC,UAAA,IAAAxS,EAAA+C,EAAA,KAAAuP,EAAA,aAAAtS,GAAAsS,EAAA,SAAAtS,EAAA+C,EAAA+D,GAAA,OAAA9G,EAAA+C,GAAA+D,CAAA,WAAA2L,EAAAzS,EAAA+C,EAAA+D,EAAAiL,GAAA,IAAAzS,EAAAyD,GAAAA,EAAAtE,qBAAAiU,EAAA3P,EAAA2P,EAAAnO,EAAApG,OAAAwU,OAAArT,EAAAb,WAAAyT,EAAA,IAAAU,EAAAb,GAAA,WAAA7T,EAAAqG,EAAA,WAAA3E,MAAAiT,EAAA7S,EAAA8G,EAAAoL,KAAA3N,CAAA,UAAAuO,EAAA9S,EAAA+C,EAAA+D,GAAA,WAAA8B,KAAA,SAAAmK,IAAA/S,EAAArB,KAAAoE,EAAA+D,GAAA,OAAA9G,GAAA,OAAA4I,KAAA,QAAAmK,IAAA/S,EAAA,EAAA+C,EAAA0P,KAAAA,EAAA,IAAAzF,EAAA,iBAAAgG,EAAA,iBAAA7F,EAAA,YAAAF,EAAA,YAAAlO,EAAA,YAAA2T,IAAA,UAAAO,IAAA,UAAAC,IAAA,KAAA9F,EAAA,GAAAkF,EAAAlF,EAAA7I,GAAA,8BAAA4O,EAAAhV,OAAAiV,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvM,GAAAiL,EAAApT,KAAA0U,EAAA9O,KAAA6I,EAAAiG,GAAA,IAAAtM,EAAAmM,EAAAzU,UAAAiU,EAAAjU,UAAAN,OAAAwU,OAAAvF,GAAA,SAAAmG,EAAAvT,GAAA,0BAAA6E,SAAA,SAAA9B,GAAAuP,EAAAtS,EAAA+C,GAAA,SAAA/C,GAAA,YAAAwT,QAAAzQ,EAAA/C,EAAA,gBAAAyT,EAAAzT,EAAA+C,GAAA,SAAA2Q,EAAA5M,EAAA5I,EAAAoB,EAAAiF,GAAA,IAAA2N,EAAAY,EAAA9S,EAAA8G,GAAA9G,EAAA9B,GAAA,aAAAgU,EAAAtJ,KAAA,KAAAwJ,EAAAF,EAAAa,IAAA/F,EAAAoF,EAAAxS,MAAA,OAAAoN,GAAA,UAAA2G,EAAA3G,IAAA+E,EAAApT,KAAAqO,EAAA,WAAAjK,EAAA6Q,QAAA5G,EAAA6G,SAAA5E,MAAA,SAAAjP,GAAA0T,EAAA,OAAA1T,EAAAV,EAAAiF,EAAA,aAAAvE,GAAA0T,EAAA,QAAA1T,EAAAV,EAAAiF,EAAA,IAAAxB,EAAA6Q,QAAA5G,GAAAiC,MAAA,SAAAjP,GAAAoS,EAAAxS,MAAAI,EAAAV,EAAA8S,EAAA,aAAApS,GAAA,OAAA0T,EAAA,QAAA1T,EAAAV,EAAAiF,EAAA,IAAAA,EAAA2N,EAAAa,IAAA,KAAAjM,EAAA5I,EAAA,gBAAA0B,MAAA,SAAAI,EAAA+R,GAAA,SAAA+B,IAAA,WAAA/Q,GAAA,SAAAA,EAAA+D,GAAA4M,EAAA1T,EAAA+R,EAAAhP,EAAA+D,EAAA,WAAAA,EAAAA,EAAAA,EAAAmI,KAAA6E,EAAAA,GAAAA,GAAA,aAAAjB,EAAA9P,EAAA+D,EAAAiL,GAAA,IAAA7T,EAAA8O,EAAA,gBAAA1N,EAAAiF,GAAA,GAAArG,IAAAiP,EAAA,MAAA4G,MAAA,mCAAA7V,IAAA+O,EAAA,cAAA3N,EAAA,MAAAiF,EAAA,OAAA3E,MAAAI,EAAAgU,MAAA,OAAAjC,EAAAkC,OAAA3U,EAAAyS,EAAAgB,IAAAxO,IAAA,KAAA2N,EAAAH,EAAAmC,SAAA,GAAAhC,EAAA,KAAAE,EAAA+B,EAAAjC,EAAAH,GAAA,GAAAK,EAAA,IAAAA,IAAArT,EAAA,gBAAAqT,CAAA,cAAAL,EAAAkC,OAAAlC,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAAgB,SAAA,aAAAhB,EAAAkC,OAAA,IAAA/V,IAAA8O,EAAA,MAAA9O,EAAA+O,EAAA8E,EAAAgB,IAAAhB,EAAAuC,kBAAAvC,EAAAgB,IAAA,gBAAAhB,EAAAkC,QAAAlC,EAAAwC,OAAA,SAAAxC,EAAAgB,KAAA7U,EAAAiP,EAAA,IAAAC,EAAA0F,EAAA/P,EAAA+D,EAAAiL,GAAA,cAAA3E,EAAAxE,KAAA,IAAA1K,EAAA6T,EAAAiC,KAAA/G,EAAA+F,EAAA5F,EAAA2F,MAAAhU,EAAA,gBAAAa,MAAAwN,EAAA2F,IAAAiB,KAAAjC,EAAAiC,KAAA,WAAA5G,EAAAxE,OAAA1K,EAAA+O,EAAA8E,EAAAkC,OAAA,QAAAlC,EAAAgB,IAAA3F,EAAA2F,IAAA,YAAAoB,EAAApR,EAAA+D,GAAA,IAAAiL,EAAAjL,EAAAmN,OAAA/V,EAAA6E,EAAAkP,SAAAF,GAAA,GAAA7T,IAAA8B,EAAA,OAAA8G,EAAAoN,SAAA,eAAAnC,GAAAhP,EAAAkP,SAAA,SAAAnL,EAAAmN,OAAA,SAAAnN,EAAAiM,IAAA/S,EAAAmU,EAAApR,EAAA+D,GAAA,UAAAA,EAAAmN,SAAA,WAAAlC,IAAAjL,EAAAmN,OAAA,QAAAnN,EAAAiM,IAAA,IAAAyB,UAAA,oCAAAzC,EAAA,aAAAhT,EAAA,IAAAO,EAAAwT,EAAA5U,EAAA6E,EAAAkP,SAAAnL,EAAAiM,KAAA,aAAAzT,EAAAsJ,KAAA,OAAA9B,EAAAmN,OAAA,QAAAnN,EAAAiM,IAAAzT,EAAAyT,IAAAjM,EAAAoN,SAAA,KAAAnV,EAAA,IAAAwF,EAAAjF,EAAAyT,IAAA,OAAAxO,EAAAA,EAAAyP,MAAAlN,EAAA/D,EAAA0R,YAAAlQ,EAAA3E,MAAAkH,EAAA4N,KAAA3R,EAAA4R,QAAA,WAAA7N,EAAAmN,SAAAnN,EAAAmN,OAAA,OAAAnN,EAAAiM,IAAA/S,GAAA8G,EAAAoN,SAAA,KAAAnV,GAAAwF,GAAAuC,EAAAmN,OAAA,QAAAnN,EAAAiM,IAAA,IAAAyB,UAAA,oCAAA1N,EAAAoN,SAAA,KAAAnV,EAAA,UAAA6V,EAAA5U,GAAA,IAAA+C,EAAA,CAAA8R,OAAA7U,EAAA,SAAAA,IAAA+C,EAAA+R,SAAA9U,EAAA,SAAAA,IAAA+C,EAAAgS,WAAA/U,EAAA,GAAA+C,EAAAiS,SAAAhV,EAAA,SAAAiV,WAAAC,KAAAnS,EAAA,UAAAoS,EAAAnV,GAAA,IAAA+C,EAAA/C,EAAAoV,YAAA,GAAArS,EAAA6F,KAAA,gBAAA7F,EAAAgQ,IAAA/S,EAAAoV,WAAArS,CAAA,UAAA6P,EAAA5S,GAAA,KAAAiV,WAAA,EAAAJ,OAAA,SAAA7U,EAAA6E,QAAA+P,EAAA,WAAAS,OAAA,YAAA/B,EAAAvQ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA+D,EAAA/D,EAAAwB,GAAA,GAAAuC,EAAA,OAAAA,EAAAnI,KAAAoE,GAAA,sBAAAA,EAAA2R,KAAA,OAAA3R,EAAA,IAAAuS,MAAAvS,EAAAxD,QAAA,KAAArB,GAAA,EAAAoB,EAAA,SAAAoV,IAAA,OAAAxW,EAAA6E,EAAAxD,QAAA,GAAAwS,EAAApT,KAAAoE,EAAA7E,GAAA,OAAAwW,EAAA9U,MAAAmD,EAAA7E,GAAAwW,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAA9U,MAAAI,EAAA0U,EAAAV,MAAA,EAAAU,CAAA,SAAApV,EAAAoV,KAAApV,CAAA,YAAAkV,UAAAb,EAAA5Q,GAAA,2BAAAkQ,EAAAxU,UAAAyU,EAAAhV,EAAA6I,EAAA,eAAAnH,MAAAsT,EAAAX,cAAA,IAAArU,EAAAgV,EAAA,eAAAtT,MAAAqT,EAAAV,cAAA,IAAAU,EAAAsC,YAAAjD,EAAAY,EAAAd,EAAA,qBAAArP,EAAAyS,oBAAA,SAAAxV,GAAA,IAAA+C,EAAA,mBAAA/C,GAAAA,EAAAyV,YAAA,QAAA1S,IAAAA,IAAAkQ,GAAA,uBAAAlQ,EAAAwS,aAAAxS,EAAAgM,MAAA,EAAAhM,EAAA2S,KAAA,SAAA1V,GAAA,OAAA7B,OAAAwX,eAAAxX,OAAAwX,eAAA3V,EAAAkT,IAAAlT,EAAA4V,UAAA1C,EAAAZ,EAAAtS,EAAAoS,EAAA,sBAAApS,EAAAvB,UAAAN,OAAAwU,OAAA5L,GAAA/G,CAAA,EAAA+C,EAAA8S,MAAA,SAAA7V,GAAA,OAAA6T,QAAA7T,EAAA,EAAAuT,EAAAE,EAAAhV,WAAA6T,EAAAmB,EAAAhV,UAAAyT,GAAA,0BAAAnP,EAAA0Q,cAAAA,EAAA1Q,EAAA+S,MAAA,SAAA9V,EAAA8G,EAAAiL,EAAA7T,EAAAoB,QAAA,IAAAA,IAAAA,EAAAyW,SAAA,IAAAxR,EAAA,IAAAkP,EAAAhB,EAAAzS,EAAA8G,EAAAiL,EAAA7T,GAAAoB,GAAA,OAAAyD,EAAAyS,oBAAA1O,GAAAvC,EAAAA,EAAAmQ,OAAAzF,MAAA,SAAAjP,GAAA,OAAAA,EAAAgU,KAAAhU,EAAAJ,MAAA2E,EAAAmQ,MAAA,KAAAnB,EAAAxM,GAAAuL,EAAAvL,EAAAqL,EAAA,aAAAE,EAAAvL,EAAAxC,GAAA,0BAAA+N,EAAAvL,EAAA,qDAAAhE,EAAAiT,KAAA,SAAAhW,GAAA,IAAA+C,EAAA5E,OAAA6B,GAAA8G,EAAA,WAAAiL,KAAAhP,EAAA+D,EAAAoO,KAAAnD,GAAA,OAAAjL,EAAAmP,UAAA,SAAAvB,IAAA,KAAA5N,EAAAvH,QAAA,KAAAS,EAAA8G,EAAAoP,MAAA,GAAAlW,KAAA+C,EAAA,OAAA2R,EAAA9U,MAAAI,EAAA0U,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3R,EAAAuQ,OAAAA,EAAAV,EAAAnU,UAAA,CAAAgX,YAAA7C,EAAAyC,MAAA,SAAAtS,GAAA,QAAAoT,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArU,EAAA,KAAAgU,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAlB,IAAA/S,EAAA,KAAAiV,WAAApQ,QAAAsQ,IAAApS,EAAA,QAAA+D,KAAA,WAAAA,EAAAsP,OAAA,IAAArE,EAAApT,KAAA,KAAAmI,KAAAwO,OAAAxO,EAAAuK,MAAA,WAAAvK,GAAA9G,EAAA,EAAAqW,KAAA,gBAAArC,MAAA,MAAAhU,EAAA,KAAAiV,WAAA,GAAAG,WAAA,aAAApV,EAAA4I,KAAA,MAAA5I,EAAA+S,IAAA,YAAAuD,IAAA,EAAAhC,kBAAA,SAAAvR,GAAA,QAAAiR,KAAA,MAAAjR,EAAA,IAAA+D,EAAA,cAAAyP,EAAAxE,EAAA7T,GAAA,OAAAqG,EAAAqE,KAAA,QAAArE,EAAAwO,IAAAhQ,EAAA+D,EAAA4N,KAAA3C,EAAA7T,IAAA4I,EAAAmN,OAAA,OAAAnN,EAAAiM,IAAA/S,KAAA9B,CAAA,SAAAA,EAAA,KAAA+W,WAAA1V,OAAA,EAAArB,GAAA,IAAAA,EAAA,KAAAoB,EAAA,KAAA2V,WAAA/W,GAAAqG,EAAAjF,EAAA8V,WAAA,YAAA9V,EAAAuV,OAAA,OAAA0B,EAAA,UAAAjX,EAAAuV,QAAA,KAAAsB,KAAA,KAAAjE,EAAAH,EAAApT,KAAAW,EAAA,YAAA8S,EAAAL,EAAApT,KAAAW,EAAA,iBAAA4S,GAAAE,EAAA,SAAA+D,KAAA7W,EAAAwV,SAAA,OAAAyB,EAAAjX,EAAAwV,UAAA,WAAAqB,KAAA7W,EAAAyV,WAAA,OAAAwB,EAAAjX,EAAAyV,WAAA,SAAA7C,GAAA,QAAAiE,KAAA7W,EAAAwV,SAAA,OAAAyB,EAAAjX,EAAAwV,UAAA,YAAA1C,EAAA,MAAA2B,MAAA,kDAAAoC,KAAA7W,EAAAyV,WAAA,OAAAwB,EAAAjX,EAAAyV,WAAA,KAAAR,OAAA,SAAAvU,EAAA+C,GAAA,QAAA+D,EAAA,KAAAmO,WAAA1V,OAAA,EAAAuH,GAAA,IAAAA,EAAA,KAAA5I,EAAA,KAAA+W,WAAAnO,GAAA,GAAA5I,EAAA2W,QAAA,KAAAsB,MAAApE,EAAApT,KAAAT,EAAA,oBAAAiY,KAAAjY,EAAA6W,WAAA,KAAAzV,EAAApB,EAAA,OAAAoB,IAAA,UAAAU,GAAA,aAAAA,IAAAV,EAAAuV,QAAA9R,GAAAA,GAAAzD,EAAAyV,aAAAzV,EAAA,UAAAiF,EAAAjF,EAAAA,EAAA8V,WAAA,UAAA7Q,EAAAqE,KAAA5I,EAAAuE,EAAAwO,IAAAhQ,EAAAzD,GAAA,KAAA2U,OAAA,YAAAS,KAAApV,EAAAyV,WAAAhW,GAAA,KAAAyX,SAAAjS,EAAA,EAAAiS,SAAA,SAAAxW,EAAA+C,GAAA,aAAA/C,EAAA4I,KAAA,MAAA5I,EAAA+S,IAAA,gBAAA/S,EAAA4I,MAAA,aAAA5I,EAAA4I,KAAA,KAAA8L,KAAA1U,EAAA+S,IAAA,WAAA/S,EAAA4I,MAAA,KAAA0N,KAAA,KAAAvD,IAAA/S,EAAA+S,IAAA,KAAAkB,OAAA,cAAAS,KAAA,kBAAA1U,EAAA4I,MAAA7F,IAAA,KAAA2R,KAAA3R,GAAAhE,CAAA,EAAA0X,OAAA,SAAAzW,GAAA,QAAA+C,EAAA,KAAAkS,WAAA1V,OAAA,EAAAwD,GAAA,IAAAA,EAAA,KAAA+D,EAAA,KAAAmO,WAAAlS,GAAA,GAAA+D,EAAAiO,aAAA/U,EAAA,YAAAwW,SAAA1P,EAAAsO,WAAAtO,EAAAkO,UAAAG,EAAArO,GAAA/H,CAAA,kBAAAiB,GAAA,QAAA+C,EAAA,KAAAkS,WAAA1V,OAAA,EAAAwD,GAAA,IAAAA,EAAA,KAAA+D,EAAA,KAAAmO,WAAAlS,GAAA,GAAA+D,EAAA+N,SAAA7U,EAAA,KAAA+R,EAAAjL,EAAAsO,WAAA,aAAArD,EAAAnJ,KAAA,KAAA1K,EAAA6T,EAAAgB,IAAAoC,EAAArO,EAAA,QAAA5I,CAAA,QAAA6V,MAAA,0BAAA2C,cAAA,SAAA3T,EAAA+D,EAAAiL,GAAA,YAAAmC,SAAA,CAAAjC,SAAAqB,EAAAvQ,GAAA0R,WAAA3N,EAAA6N,QAAA5C,GAAA,cAAAkC,SAAA,KAAAlB,IAAA/S,GAAAjB,CAAA,GAAAgE,CAAA,UAAA4T,EAAA5E,EAAA/R,EAAA+C,EAAA+D,EAAA5I,EAAAqG,EAAA2N,GAAA,QAAA5S,EAAAyS,EAAAxN,GAAA2N,GAAAE,EAAA9S,EAAAM,KAAA,OAAAmS,GAAA,YAAAhP,EAAAgP,EAAA,CAAAzS,EAAA0U,KAAAhU,EAAAoS,GAAA2D,QAAAnC,QAAAxB,GAAAnD,KAAAnI,EAAA5I,EAAA,CA6BO,SAAeyb,IAAe,OAAAC,EAAA7C,MAAC,KAAD5W,UAAA,CAwBrC,SAAAyZ,IAFC,OAnDD7H,EAqDAD,IAAA4D,MAxBO,SAAAmE,IAAA,IAAA1I,EAAA+F,EAAA,OAAApF,IAAAW,MAAA,SAAAqH,GAAA,cAAAA,EAAA3D,KAAA2D,EAAApF,MAAA,OAUH,OATFzS,QAAQC,IAAI,iBAAiB4X,EAAA3D,KAAA,EAIrBhF,EAAaC,IAGb8F,EAAkB6C,EAAelR,EAASC,iBAAiByP,OAEjEuB,EAAApF,KAAA,EACqBkC,EAAYzF,EAAY+F,GAAgB,OAAjD4C,EAAA1F,KAGVnS,QAAQC,IAAI,6BAEZD,QAAQO,KAAK,sCACdsX,EAAApF,KAAA,iBAAAoF,EAAA3D,KAAA,GAAA2D,EAAA5B,GAAA4B,EAAA,SAED7X,QAAQgH,MAAM,uBAAsB6Q,EAAA5B,IACpC5G,EAAU,yBAA2BwI,EAAA5B,GAAM3G,QAAS,SAAS,yBAAAuI,EAAAzD,OAAA,GAAAwD,EAAA,kBAIjED,EArDA,eAAA5Z,EAAA,KAAA+C,EAAA5C,UAAA,WAAA4V,SAAA,SAAAjP,EAAA5I,GAAA,IAAAqG,EAAAwN,EAAAgF,MAAA/W,EAAA+C,GAAA,SAAAoV,EAAApG,GAAA4E,EAAApS,EAAAuC,EAAA5I,EAAAia,EAAAC,EAAA,OAAArG,EAAA,UAAAqG,EAAArG,GAAA4E,EAAApS,EAAAuC,EAAA5I,EAAAia,EAAAC,EAAA,QAAArG,EAAA,CAAAoG,OAAA,QAmDCpB,MAAA,KAAA5W,WAnDD,IAAA4R,CAmDC,CAGM,SAASgI,EAAexB,GAC7B,IAAKA,EAAO,MAAO,WAGnB,IAAIpB,EAAWoB,EAAMyB,QAAQ,OAAQ,KAChBA,QAAQ,kBAAmB,IAC3BC,cAOrB,OAJK9C,EAASM,SAAS,WACrBN,GAAY,SAGPA,CACT,CC0KO,SAAS+C,EAAaC,GAG3B,OAFAlY,QAAQC,IAAI,uBAAD8F,OAAwBa,EAAS8P,WAAU,UAE1B,UAAxB9P,EAAS8P,WAzOR,SAA2BwB,GAGhC,GAFAlY,QAAQC,IAAI,4CAEPiY,EAEH,OADAlY,QAAQgH,MAAM,uBACP,KAGT,IAEE,IAAMsC,EAASpJ,SAAS+F,cAAc,UAChCkS,EAAM7O,EAAOlJ,WAAW,MAG9BkJ,EAAOjI,MAAQ6W,EAAcE,aAC7B9O,EAAOhI,OAAS4W,EAAcG,cAG9BF,EAAIG,UAAUJ,EAAe,EAAG,GAGhC,IAAMlT,EAAYmT,EAAII,aAAa,EAAG,EAAGjP,EAAOjI,MAAOiI,EAAOhI,QAS9D,OANAwG,EAAsB9C,GAGtBmT,EAAIK,aAAaxT,EAAW,EAAG,GAGxBsE,EAAOmP,UAAU,aAAc,EACxC,CAAE,MAAOzR,GAEP,OADAhH,QAAQgH,MAAM,0BAA2BA,GAClC,IACT,CACF,CAuMW0R,CAAkBR,GApMtB,SAA8BA,GAInC,GAHAlY,QAAQC,IAAI,8CACZD,QAAQC,IAAI,uBAAwB1B,KAAKE,UAAUmI,EAASC,iBAAiBC,QAAS,KAAM,KAEvFoR,EAEH,OADAlY,QAAQgH,MAAM,uBACP,KAGT,IAEE,IAAMsC,EAASpJ,SAAS+F,cAAc,UAChCkS,EAAM7O,EAAOlJ,WAAW,MAG9BkJ,EAAOjI,MAAQ6W,EAAcE,aAC7B9O,EAAOhI,OAAS4W,EAAcG,cAG9BF,EAAIG,UAAUJ,EAAe,EAAG,GAGhC,IAAMlT,EAAYmT,EAAII,aAAa,EAAG,EAAGjP,EAAOjI,MAAOiI,EAAOhI,QAmC9D,OAhCAtB,QAAQC,IAAI,6CAGZD,QAAQC,IAAI,iCACZ6H,EAAsB9C,GAGtBhF,QAAQC,IAAI,mCAiChB,SAAiC+E,GAC/B,IAAK4B,EAASC,iBAAiBC,QAE7B,OADA9G,QAAQO,KAAK,mCACNyE,EAGT,IAAM8B,EAAUF,EAASC,iBAAiBC,QACpC7B,EAAOD,EAAUC,KAEvBjF,QAAQC,IAAI,4CAA6C,aAAF8F,OACxCe,EAAQI,SAAQ,mBAAAnB,OAChBe,EAAQK,SAAQ,qBAAApB,OACde,EAAQM,WAAU,kBAAArB,OACrBe,EAAQO,QAAO,iBAAAtB,OAChBe,EAAQQ,OAAM,iBAAAvB,OACde,EAAQS,OAAM,sBAAAxB,OACTe,EAAQU,YAAW,eAAAzB,OAC1Be,EAAQW,OAEnB,IAAK,IAAIpK,EAAI,EAAGA,EAAI4H,EAAK3H,OAAQD,GAAK,EAAG,CAEvC,IAAIwH,EAAII,EAAK5H,GAAK,IACdyH,EAAIG,EAAK5H,EAAI,GAAK,IAClBkF,EAAI0C,EAAK5H,EAAI,GAAK,IAGtB,GAAyB,IAArByJ,EAAQI,SAAgB,CAC1B,IAAM6P,EAAiBvZ,KAAKgL,IAAI,EAAG1B,EAAQI,SAAW,KACtDrC,GAAKkS,EACLjS,GAAKiS,EACLxU,GAAKwU,CACP,CAGA,GAAyB,IAArBjQ,EAAQK,SAAgB,CAC1B,IAAMwR,EAAiB,EAAK7R,EAAQK,SAAW,IACzCyR,EAAW,GACjB/T,EAAI+T,GAAY/T,EAAI+T,GAAYD,EAChC7T,EAAI8T,GAAY9T,EAAI8T,GAAYD,EAChCpW,EAAIqW,GAAYrW,EAAIqW,GAAYD,CAClC,CAGA,IAAMvQ,EAAY,MAASvD,EAAI,MAASC,EAAI,MAASvC,EAGrD,GAA2B,IAAvBuE,EAAQM,WAAkB,CAC5B,IAAMkF,EAAqB9O,KAAKgL,IAAIJ,EAAW,GACzCyQ,EAAc/R,EAAQM,WAAa,IAAO,GAChDvC,GAAKgU,EAAavM,EAClBxH,GAAK+T,EAAavM,EAClB/J,GAAKsW,EAAavM,CACpB,CAGA,GAAwB,IAApBxF,EAAQO,QAAe,CACzB,IAAMgF,EAAkB7O,KAAKgL,IAAI,EAAIJ,EAAW,GAC1CyQ,EAAc/R,EAAQO,QAAU,IAAO,GAC7CxC,GAAKgU,EAAaxM,EAClBvH,GAAK+T,EAAaxM,EAClB9J,GAAKsW,EAAaxM,CACpB,CAGA,GAAuB,IAAnBvF,EAAQQ,OAAc,CACxB,IAAMwR,EAAkBtb,KAAKgL,IAAIJ,EAAW,GACtCyQ,EAAc/R,EAAQQ,OAAS,IAAO,GAC5CzC,GAAKgU,EAAaC,EAClBhU,GAAK+T,EAAaC,EAClBvW,GAAKsW,EAAaC,CACpB,CAEA,GAAuB,IAAnBhS,EAAQS,OAAc,CACxB,IAAMwR,EAAkBvb,KAAKgL,IAAI,EAAIJ,EAAW,GAC1CyQ,EAAc/R,EAAQS,OAAS,IAAO,GAC5C1C,GAAKgU,EAAaE,EAClBjU,GAAK+T,EAAaE,EAClBxW,GAAKsW,EAAaE,CACpB,CAGA,GAA4B,IAAxBjS,EAAQU,aAAsC,IAAjBV,EAAQW,KAAY,CAEnD,IAAMuR,EAAOlS,EAAQU,YAAc,IAGjC3C,GAAM,EAAW,GAAPmU,EACVlU,GAAM,EAAW,GAAPkU,EACVzW,GAAM,EAAW,GAAPyW,EASZ,IAAMC,EAAUnS,EAAQW,KAAO,IAG7B5C,GAAM,EAAc,GAAVoU,EACVnU,GAAM,EAAc,GAAVmU,EACV1W,GAAM,EAAc,GAAV0W,CAOd,CAGApU,EAAIrH,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKS,IAChCC,EAAItH,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKU,IAChCvC,EAAI/E,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAK7B,IAGhC0C,EAAK5H,GAAKG,KAAKiE,MAAU,IAAJoD,GACrBI,EAAK5H,EAAI,GAAKG,KAAKiE,MAAU,IAAJqD,GACzBG,EAAK5H,EAAI,GAAKG,KAAKiE,MAAU,IAAJc,EAE3B,CAGF,CA5JI2W,CAAwBlU,GAGxBhF,QAAQC,IAAI,wCPwLT,SAAoC+E,GAIzC,IAHA,IAAM/G,EAAS2I,EAASC,iBAAiBmD,YACnC/E,EAAOD,EAAUC,KAEd5H,EAAI,EAAGA,EAAI4H,EAAK3H,OAAQD,GAAK,EAAG,CAEvC,IAKM6H,EAASkH,EALPnH,EAAK5H,GAAK,IACV4H,EAAK5H,EAAI,GAAK,IACd4H,EAAK5H,EAAI,GAAK,IAGmBY,EAAOyN,WAAYzN,EAAO0N,cAAe1N,EAAO2N,YAAc,KAGvG3G,EAAK5H,GAAKG,KAAKiE,MAA+C,IAAzCjE,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKc,EAAOL,KACxDI,EAAK5H,EAAI,GAAKG,KAAKiE,MAA+C,IAAzCjE,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKc,EAAOJ,KAC5DG,EAAK5H,EAAI,GAAKG,KAAKiE,MAA+C,IAAzCjE,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKc,EAAO3C,IAE9D,CAGF,CO5MI4W,CAA2BnU,GAG3BhF,QAAQC,IAAI,gCRJT,SAA8B+E,GAInC,IAHA,IAAM/G,EAAS2I,EAASC,iBAAiB6B,SACnCzD,EAAOD,EAAUC,KAEd5H,EAAI,EAAGA,EAAI4H,EAAK3H,OAAQD,GAAK,EAAG,CAEvC,IAAIwH,EAAII,EAAK5H,GAAK,IACdyH,EAAIG,EAAK5H,EAAI,GAAK,IAClBkF,EAAI0C,EAAK5H,EAAI,GAAK,IAGtB,GAAwB,IAApBY,EAAOqZ,SAAgB,CACzB,IAAMpS,EAASyD,EAAc9D,EAAGC,EAAGvC,EAAGtE,EAAOqZ,SAAW,KACxDzS,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXvC,EAAI2C,EAAO3C,CACb,CAGA,GAAItE,EAAOuZ,UAAY,EAAG,CACxB,IAAMtS,EAAS8D,EAAenE,EAAGC,EAAGvC,EAAGtE,EAAOuZ,UAAY,KAC1D3S,EAAIK,EAAOL,EACXC,EAAII,EAAOJ,EACXvC,EAAI2C,EAAO3C,CACb,CAGAsC,EAAIrH,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKS,IAChCC,EAAItH,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAKU,IAChCvC,EAAI/E,KAAK6G,IAAI,EAAK7G,KAAK4G,IAAI,EAAK7B,IAGhC0C,EAAK5H,GAAKG,KAAKiE,MAAU,IAAJoD,GACrBI,EAAK5H,EAAI,GAAKG,KAAKiE,MAAU,IAAJqD,GACzBG,EAAK5H,EAAI,GAAKG,KAAKiE,MAAU,IAAJc,EAE3B,CAGF,CQlCI6W,CAAqBpU,GAGrBhF,QAAQC,IAAI,kCACR2G,EAASxB,YVsjBV,SAA4BJ,GAC7BI,GACKA,EAAYiU,mBAAmBrU,EAG1C,CU1jBMqU,CAAmBrU,GAEnBhF,QAAQO,KAAK,2DAIf4X,EAAIK,aAAaxT,EAAW,EAAG,GAE/BhF,QAAQC,IAAI,gCAGLqJ,EAAOmP,UAAU,aAAc,EACxC,CAAE,MAAOzR,GAEP,OADAhH,QAAQgH,MAAM,mCAAoCA,GAC3C,IACT,CACF,CAwIWsS,CAAqBpB,EAEhC,CC3NA,IAAItR,EAAW,CACb8P,WAAY,QACZwB,cAAe,KACfqB,eAAgB,KAChB1S,iBAAkB,CAEhBwP,KAAM,GACNC,MAAO,iBACPnP,SAAU,IACVgB,WAAY,KACZH,WAAY,KACZC,aAAc,IACdC,YAAa,IACbG,aAAc,CAAC,IAAM,GAAM,KAC3BC,gBAAiB,CAAC,IAAM,IAAM,GAG9BxB,QAAS,CACPI,SAAU,EACVC,SAAU,EACVC,WAAY,EACZC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EACRC,YAAa,EACbC,KAAM,KA8HZ,SAASrG,IACP,GAAKwF,EAASsR,cAAd,CAKAlY,QAAQC,IAAI,iCAAD8F,OAAkCa,EAAS8P,WAAU,UAGhE,IAEE,IAAM8C,EAAoBvB,EAAarR,EAASsG,sBAG5CsM,GAAqB5S,EAAS6S,uBAChC7S,EAAS6S,sBAAsBtM,IAAMqM,EACrCxZ,QAAQC,IAAI,4BAEZD,QAAQO,KAAK,mCAEjB,CAAE,MAAOyG,GACPhH,QAAQgH,MAAM,0BAA2BA,EAC3C,CAlBA,MAFEhH,QAAQO,KAAK,+BAqBjB,CAoMAL,SAASO,iBAAiB,oBAAoB,YAjM9C,WACE,IA+IMiZ,EAhFR,SAASC,IAYU,CACf,CAAEC,OAAQ,0BAA2B5E,QAAS,4BAC9C,CAAE4E,OAAQ,kBAAmB5E,QAAS,oBACtC,CAAE4E,OAAQ,sBAAuB5E,QAAS,wBAC1C,CAAE4E,OAAQ,gBAAiB5E,QAAS,mBAI7BpS,SAAQ,SAAAiX,GACf,IAAMD,EAnBR,SAAiCE,GAC/B,IAAMC,EAAU7Z,SAASC,eAAe2Z,GACxC,IAAKC,EAAS,OAAO,KAErB,IAAMC,EAAQD,EAAQE,WAAU,GAEhC,OADAF,EAAQG,WAAWC,aAAaH,EAAOD,GAChCC,CACT,CAYiBI,CAAwBP,EAAQD,QACzC5E,EAAU9U,SAASC,eAAe0Z,EAAQ7E,SAE3C4E,GAAW5E,GAMZ4E,EAAO3Y,UAAUoZ,SAAS,aAC5BrF,EAAQjU,MAAM2N,QAAU,QACxBsG,EAAQjU,MAAMuZ,UAAY,SAC1BtF,EAAQjU,MAAMwZ,QAAU,MAExBvF,EAAQjU,MAAM2N,QAAU,OACxBsG,EAAQjU,MAAMuZ,UAAY,IAC1BtF,EAAQjU,MAAMwZ,QAAU,KAI1BX,EAAOnZ,iBAAiB,SAAS,WAAW,IAAAD,EAAA,KAC1CR,QAAQC,IAAI,mCAAD8F,OAAoC8T,EAAQD,SAGvDvb,KAAK4C,UAAU2Y,OAAO,YAGlBvb,KAAK4C,UAAUoZ,SAAS,aAC1BrF,EAAQjU,MAAM2N,QAAU,QAExBsG,EAAQwF,aACRxF,EAAQjU,MAAMuZ,UAAY,SAC1BtF,EAAQjU,MAAMwZ,QAAU,MAExBvF,EAAQjU,MAAMuZ,UAAY,IAC1BtF,EAAQjU,MAAMwZ,QAAU,IAExB5K,YAAW,WACJnP,EAAKS,UAAUoZ,SAAS,cAC3BrF,EAAQjU,MAAM2N,QAAU,OAE5B,GAAG,KAEP,IAEA1O,QAAQC,IAAI,6BAAD8F,OAA8B8T,EAAQD,UAzC/C5Z,QAAQgH,MAAM,0CAADjB,OAA2C8T,EAAQD,OAAM,QAAA7T,OAAO8T,EAAQ7E,SA0CzF,IAEAhV,QAAQC,IAAI,qEACd,CArIkBC,SAASwH,iBAAiB,uBAElC9E,SAAQ,SAAAgX,GAEd,IAAMI,EAAQJ,EAAOK,WAAU,GAC/BL,EAAOM,WAAWC,aAAaH,EAAOJ,GAGtC,IAAM5E,EAAUgF,EAAMS,mBACjBzF,GAAYA,EAAQ/T,UAAUoZ,SAAS,mBAM5CL,EAAMvZ,iBAAiB,SAAS,WAC9BT,QAAQC,IAAI,uBAAD8F,OAAwBiU,EAAMvU,GAAE,2BAC3CuU,EAAM/Y,UAAU2Y,OAAO,YACvB5E,EAAQ/T,UAAU2Y,OAAO,YAGzB5E,EAAQwF,YACV,IAZExa,QAAQgH,MAAM,sCAAuCgT,EAAMvU,GAa/D,IAmCFkK,YA/BA,WACE3P,QAAQC,IAAI,kCAEK,CACf,CAAE2Z,OAAQ,0BAA2B5E,QAAS,4BAC9C,CAAE4E,OAAQ,kBAAmB5E,QAAS,oBACtC,CAAE4E,OAAQ,sBAAuB5E,QAAS,wBAC1C,CAAE4E,OAAQ,gBAAiB5E,QAAS,mBAG7BpS,SAAQ,SAAAiX,GACf,IAAMD,EAAS1Z,SAASC,eAAe0Z,EAAQD,QACzC5E,EAAU9U,SAASC,eAAe0Z,EAAQ7E,SAEhDhV,QAAQC,IAAI,WAAD8F,OAAY8T,EAAQD,OAAM,OAAA7T,OAAM6T,EAAS,QAAU,cAC9D5Z,QAAQC,IAAI,YAAD8F,OAAa8T,EAAQ7E,QAAO,OAAAjP,OAAMiP,EAAU,QAAU,cAE7D4E,GAAU5E,IACZhV,QAAQC,IAAI,kCAAD8F,OAAmC6T,EAAO3Y,UAAUoZ,SAAS,cACxEra,QAAQC,IAAI,mCAAD8F,OAAoCiP,EAAQ/T,UAAUoZ,SAAS,cAC1Era,QAAQC,IAAI,8BAAD8F,OAA+BiP,EAAQjU,MAAMuZ,YACxDta,QAAQC,IAAI,2BAAD8F,OAA4BiP,EAAQwF,aAAY,OAC3Dxa,QAAQC,IAAI,sCAAD8F,OAAuC0G,OAAOiO,iBAAiB1F,GAASsF,YACnFta,QAAQC,IAAI,4BAAD8F,OAA6B0G,OAAOiO,iBAAiB1F,GAAStG,UAE7E,IAEA1O,QAAQC,IAAI,+BACd,GAG0B,KA8E1BC,SAASO,iBAAiB,oBAAoB,WAE5CkP,WAAWgK,EAAmB,IAChC,KAIQD,EAAexZ,SAAS+F,cAAc,UAC/BI,YAAc,6wBA8B3BnG,SAASya,KAAKlU,YAAYiT,GAC1B1Z,QAAQC,IAAI,iDAWd0P,WAAWiL,oBAAqB,KAE9B5a,QAAQC,IAAI,qDACd,CAKE4a,EACF,IAeApO,OAAOrL,sBAAwBA,EAG/BlB,SAASO,iBAAiB,oBAxW1B,WFnDO,IASCqa,EACAC,ETsmBAnB,EACAC,EM1cAmB,EACAC,EACAC,EKrHNlb,QAAQC,IAAI,4BAGZwM,OAAO7F,SAAWA,ELzDlB5G,QAAQC,IAAI,4BAed,WACED,QAAQC,IAAI,4BAEZ,IAAMkb,EAAcjb,SAASC,eAAe,iBACtCib,EAAsBlb,SAASC,eAAe,0BAC9Ckb,EAAYnb,SAASC,eAAe,cACpCmb,EAAgBpb,SAASC,eAAe,mBAEzCgb,GAAanb,QAAQO,KAAK,8BAC1B6a,GAAqBpb,QAAQO,KAAK,uCAClC8a,GAAWrb,QAAQO,KAAK,wBACxB+a,GAAetb,QAAQO,KAAK,gCAE7B4a,GAAeE,GACjBF,EAAY1a,iBAAiB,SAAS,WAEpCsO,GAAiB,GAEjBsM,EAAUta,MAAM2N,QAAU,OAC5B,IAGE0M,GAAuBC,GACzBD,EAAoB3a,iBAAiB,SAAS,WAE5CsO,GAAiB,GAEjBsM,EAAUta,MAAM2N,QAAU,OAC5B,IAGE4M,GACFA,EAAc7a,iBAAiB,SAAS,WAEvBP,SAASwH,iBAAiB,UAClC9E,SAAQ,SAAA2Y,GACbA,EAAMxa,MAAM2N,QAAU,MACxB,GACF,IAIFjC,OAAOhM,iBAAiB,SAAS,SAACK,GACjBZ,SAASwH,iBAAiB,UAClC9E,SAAQ,SAAA2Y,GACTza,EAAE+M,SAAW0N,IACfA,EAAMxa,MAAM2N,QAAU,OAE1B,GACF,GACF,CA9DE8M,GA2FAxb,QAAQC,IAAI,oCAGK,CACf,CAAE2Z,OAAQ,0BAA2B5E,QAAS,2BAA4ByG,UAAU,GACpF,CAAE7B,OAAQ,kBAAmB5E,QAAS,mBAAoByG,UAAU,GACpE,CAAE7B,OAAQ,sBAAuB5E,QAAS,uBAAwByG,UAAU,GAC5E,CAAE7B,OAAQ,gBAAiB5E,QAAS,iBAAkByG,UAAU,IAGzD7Y,SAAQ,SAAAiX,GACf,IAAMD,EAAS1Z,SAASC,eAAe0Z,EAAQD,QACzC5E,EAAU9U,SAASC,eAAe0Z,EAAQ7E,SAE3C4E,EAKA5E,GAKLhV,QAAQC,IAAI,uBAAD8F,OAAwB8T,EAAQD,OAAM,gBAAA7T,OAAe8T,EAAQ4B,SAAQ,MAG5E5B,EAAQ4B,UACV7B,EAAO3Y,UAAUC,IAAI,YACrB8T,EAAQ/T,UAAUC,IAAI,YACtB8T,EAAQjU,MAAM2N,QAAU,QACxBsG,EAAQjU,MAAMuZ,UAAY,SAE1BV,EAAO3Y,UAAUE,OAAO,YACxB6T,EAAQ/T,UAAUE,OAAO,YACzB6T,EAAQjU,MAAM2N,QAAU,OACxBsG,EAAQjU,MAAMuZ,UAAY,KAI5BV,EAAOnZ,iBAAiB,SAAS,WAC/BT,QAAQC,IAAI,uBAAD8F,OAAwB8T,EAAQD,SAG3C,IAAM8B,GAAe9B,EAAO3Y,UAAUoZ,SAAS,YAG/CT,EAAO3Y,UAAU2Y,OAAO,YAGpB8B,GAEF1G,EAAQjU,MAAM2N,QAAU,QAExBiB,YAAW,WACTqF,EAAQ/T,UAAUC,IAAI,YACtB8T,EAAQjU,MAAMuZ,UAAY,MAC5B,GAAG,IACHta,QAAQC,IAAI,sBAAD8F,OAAuB8T,EAAQ7E,YAG1CA,EAAQ/T,UAAUE,OAAO,YACzB6T,EAAQjU,MAAMuZ,UAAY,IAE1B3K,YAAW,WACTqF,EAAQjU,MAAM2N,QAAU,MAC1B,GAAG,KACH1O,QAAQC,IAAI,uBAAD8F,OAAwB8T,EAAQ7E,UAE/C,KAjDEhV,QAAQgH,MAAM,+BAADjB,OAAgC8T,EAAQ7E,UALrDhV,QAAQgH,MAAM,8BAADjB,OAA+B8T,EAAQD,QAuDxD,IAKMoB,EAAc9a,SAASC,eAAe,gBACtC8a,EAAc/a,SAASC,eAAe,gBACtC+a,EAAWhb,SAASC,eAAe,aAErC6a,GACFA,EAAYva,iBAAiB,SAAS,WAChCgM,OAAOC,aACTD,OAAOC,YAAYiP,cAAc,WAErC,IAGEV,GACFA,EAAYxa,iBAAiB,SAAS,WAChCgM,OAAOC,aACTD,OAAOC,YAAYiP,cAAc,WAErC,IAGET,GACFA,EAASza,iBAAiB,SAAS,WAC7BgM,OAAOC,aACTD,OAAOC,YAAYiP,cAAc,QAErC,IAvLF3b,QAAQC,IAAI,uCLZZD,QAAQC,IAAI,kCAGP2G,EAASC,iBAAiBgB,QAC7BjB,EAASC,iBAAiBgB,MAAQ,CAChCV,SAAU,IACVgB,WAAY,KACZH,WAAY,KACZC,aAAc,IACdC,YAAa,MAKZtB,EAASC,iBAAiBC,UAC7BF,EAASC,iBAAiBC,QAAU,CAClCI,SAAU,EACVC,SAAU,EACVC,WAAY,EACZC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EACRC,YAAa,EACbC,KAAM,IAcZ,WACEzH,QAAQC,IAAI,6BAGZ,IAAM2b,EAAiB1b,SAASC,eAAe,YACzC0b,EAAmB3b,SAASC,eAAe,cAC3C2b,EAAmB5b,SAASC,eAAe,eAC3C4b,EAAqB7b,SAASC,eAAe,iBAC7C6b,EAAoB9b,SAASC,eAAe,gBAG5C6W,EAAgB9W,SAASC,eAAe,kBACxC8b,EAAkB/b,SAASC,eAAe,oBAC1C+b,EAAkBhc,SAASC,eAAe,qBAC1Cgc,EAAoBjc,SAASC,eAAe,uBAC5Cic,EAAmBlc,SAASC,eAAe,sBAG5Cyb,GAAgB5b,QAAQO,KAAK,6BAC7Bsb,GAAkB7b,QAAQO,KAAK,+BAC/Bub,GAAkB9b,QAAQO,KAAK,gCAC/Bwb,GAAoB/b,QAAQO,KAAK,kCACjCyb,GAAmBhc,QAAQO,KAAK,iCAGrCqH,EAAYgU,EAAgB5E,EAAe,YAC3CpP,EAAYiU,EAAkBI,EAAiB,cAC/CrU,EAAYkU,EAAkBI,EAAiB,cAC/CtU,EAAYmU,EAAoBI,EAAmB,gBACnDvU,EAAYoU,EAAmBI,EAAkB,eAEjDpc,QAAQC,IAAI,gCACd,CAzCEoc,GAkZF,WACErc,QAAQC,IAAI,4CAEZ,IAAMqc,EAAapc,SAASC,eAAe,SACrCoc,EAAgBrc,SAASC,eAAe,YAEzCmc,GAAYtc,QAAQO,KAAK,yBACzBgc,GAAevc,QAAQO,KAAK,6BAE7B+b,IAEFA,EAAW3e,MAAQiJ,EAASC,iBAAiByP,OAAS,iBAGtDgG,EAAW7b,iBAAiB,SAAS,WACnCmG,EAASC,iBAAiByP,MAAQgG,EAAW3e,KAC/C,KAGE4e,IAEFA,EAAc5e,MAAQiJ,EAASC,iBAAiBwP,MAAQ,KAGxDkG,EAAc9b,iBAAiB,UAAU,WACvCmG,EAASC,iBAAiBwP,KAAOmG,SAASD,EAAc5e,MAC1D,IAEJ,CA3aE8e,GAEAzc,QAAQC,IAAI,8CClCP,WACLD,QAAQC,IAAI,iCAGP2G,EAASC,iBAAiB6B,WAC7B9B,EAASC,iBAAiB6B,SAAW,CACnC8O,UAAW,EACXF,SAAU,IAKd,IAsCMsC,EACAC,EAvCA6C,EAAkBxc,SAASC,eAAe,cAC1Cwc,EAAiBzc,SAASC,eAAe,YAGzCyc,EAAiB1c,SAASC,eAAe,oBACzC0c,EAAgB3c,SAASC,eAAe,kBAG9CyH,EAAY8U,EAAiBE,EAAgB,aAC7ChV,EAAY+U,EAAgBE,EAAe,YA6BrCjD,EAAS1Z,SAASC,eA1BL,mBA2Bb0Z,EAAU3Z,SAASC,eA3Ba,oBA6BlCyZ,GAAUC,GACZD,EAAOnZ,iBAAiB,SAAS,WAC/BmZ,EAAO3Y,UAAU2Y,OAAO,YAEpBA,EAAO3Y,UAAUoZ,SAAS,aAC5BR,EAAQ5Y,UAAUC,IAAI,YACtB2Y,EAAQ9Y,MAAM2N,QAAU,QACxBiB,YAAW,WACTkK,EAAQ9Y,MAAMuZ,UAAY,SAC1BT,EAAQ9Y,MAAMwZ,QAAU,GAC1B,GAAG,MAEHV,EAAQ5Y,UAAUE,OAAO,YACzB0Y,EAAQ9Y,MAAMuZ,UAAY,IAC1BT,EAAQ9Y,MAAMwZ,QAAU,IACxB5K,YAAW,WACJiK,EAAO3Y,UAAUoZ,SAAS,cAC7BR,EAAQ9Y,MAAM2N,QAAU,OAE5B,GAAG,KAEP,GAjDJ,CSuCEoO,GRhEK,WACL9c,QAAQC,IAAI,6BAGP2G,EAASC,iBAAiBmD,cAC7BpD,EAASC,iBAAiBmD,YAAc,CACtC0B,WAAY,CAAE7G,EAAG,IAAKC,EAAG,IAAKvC,EAAG,KACjCoJ,cAAe,CAAE9G,EAAG,IAAKC,EAAG,IAAKvC,EAAG,KACpCqJ,YAAa,IAKjB,IAAMG,EAAmB7L,SAASC,eAAe,sBAC3C6L,EAAsB9L,SAASC,eAAe,yBAC9C0L,EAAoB3L,SAASC,eAAe,gBAC5C2L,EAAmB5L,SAASC,eAAe,sBAG7C4L,GACF5C,EAAgB4C,EAAkB,cAGhCC,GACF7C,EAAgB6C,EAAqB,iBAInCH,GAAqBC,IAEvBD,EAAkBlO,MAAQiJ,EAASC,iBAAiBmD,YAAY4B,YAChEE,EAAiBzF,YAAcO,EAASC,iBAAiBmD,YAAY4B,YAAYpF,QAAQ,GAGzFqF,EAAkBpL,iBAAiB,SAAS,WAC1CmG,EAASC,iBAAiBmD,YAAY4B,YAAc7E,WAAW8E,EAAkBlO,OACjFmO,EAAiBzF,YAAcO,EAASC,iBAAiBmD,YAAY4B,YAAYpF,QAAQ,GACzFpF,GACF,KAIF,IA8KMwY,EACAC,EA/KAkD,EAAc7c,SAASgM,cAAc,0CACvC6Q,GACFA,EAAYtc,iBAAiB,QAASgL,GA4KlCmO,EAAS1Z,SAASC,eAxKL,uBAyKb0Z,EAAU3Z,SAASC,eAzKiB,wBA2KtCyZ,GAAUC,GACZD,EAAOnZ,iBAAiB,SAAS,WAC/BmZ,EAAO3Y,UAAU2Y,OAAO,YACxBC,EAAQ5Y,UAAU2Y,OAAO,WAC3B,GA9KJ,CQgBEoD,GXyhBAhd,QAAQC,IAAI,2BAGP2G,EAASC,iBAAiBwQ,SAC7BzQ,EAASC,iBAAiBwQ,OAAS9Y,KAAKC,MAAMD,KAAKE,UAAU9B,KAI/DyI,EAAc,IAAIpH,EAAY4I,EAASC,iBAAiBwQ,QAkBlDuC,EAAS1Z,SAASC,eAfL,iBAgBb0Z,EAAU3Z,SAASC,eAhBW,kBAkBhCyZ,GAAUC,GACZD,EAAOnZ,iBAAiB,SAAS,WAC/BmZ,EAAO3Y,UAAU2Y,OAAO,YACxBC,EAAQ5Y,UAAU2Y,OAAO,YAErBC,EAAQ5Y,UAAUoZ,SAAS,aAC7BR,EAAQ9Y,MAAM2N,QAAU,QACxBmL,EAAQ9Y,MAAMuZ,UAAY,SAC1BT,EAAQ9Y,MAAMwZ,QAAU,MAExBV,EAAQ9Y,MAAMuZ,UAAY,IAC1BT,EAAQ9Y,MAAMwZ,QAAU,IACxB5K,YAAW,WACJkK,EAAQ5Y,UAAUoZ,SAAS,cAC9BR,EAAQ9Y,MAAM2N,QAAU,OAE5B,GAAG,KAEP,IAjC0B,aAAxBxO,SAAS+c,YAAqD,gBAAxB/c,SAAS+c,WACjDtN,YAAW,kBAAMvK,EAAYhG,MAAM,GAAE,GAErCc,SAASO,iBAAiB,oBAAoB,kBAAM2E,EAAYhG,MAAM,IAIxEwH,EAASxB,YAAcA,EY9mBvBpF,QAAQC,IAAI,iCREP,WACLD,QAAQC,IAAI,mCAGZ,IA0CMkO,EACAC,EACAC,EA5CA6J,EAAgBhY,SAASC,eAAe,kBACxCoZ,EAAiBrZ,SAASC,eAAe,mBACzC+c,EAAsBhd,SAASC,eAAe,wBAC9Cgd,EAAsBjd,SAASC,eAAe,wBAC9Cid,EAAiBld,SAASC,eAAe,oBAG/CyG,EAASsG,qBAAuBgL,EAChCtR,EAAS6S,sBAAwBF,EAkC3BpL,EAAejO,SAASC,eAAe,cACvCiO,EAAgBlO,SAASC,eAAe,eACxCkO,EAAenO,SAASC,eAAe,cAEzCgO,GACFA,EAAa1N,iBAAiB,SAAS,WACrCuN,EAAY,QACd,IAGEI,GACFA,EAAc3N,iBAAiB,SAAS,WACtCuN,EAAY,SACd,IAGEK,GACFA,EAAa5N,iBAAiB,SAAS,WACrCuN,EAAY,QACd,IA/CEoP,GACFA,EAAe3c,iBAAiB,QAAS+L,GAIvC0L,IACFA,EAAcvK,OAAS,WACrB3N,QAAQC,IAAI,6BAGZ2G,EAASsR,cAAgBA,EACzBtR,EAAS2S,eAAiBA,EAGtB2D,IAAqBA,EAAoBnc,MAAM2N,QAAU,QACzDyO,IAAqBA,EAAoBpc,MAAM2N,QAAU,SAqFnE,WACE,IAAMyO,EAAsBjd,SAASC,eAAe,wBAC9CmO,EAAyBpO,SAASC,eAAe,4BACjDoO,EAAmBrO,SAASC,eAAe,qBAC3CqO,EAAkBtO,SAASC,eAAe,oBAE5Ckd,GAAY,EACZ7Y,EAAS,EACT8Y,EAAe,GAGnB,SAASC,EAAqBC,GAC5BA,EAAUhgB,KAAK4G,IAAI,EAAG5G,KAAK6G,IAAI,IAAKmZ,IAGpCjR,EAAwBiR,EAGxBlP,EAAuBvN,MAAM0N,SAAW,WAAH1I,OAAc,IAAMyX,EAAO,UAGhEjP,EAAiBxN,MAAMiD,KAAOwZ,EAAU,IAGxChP,EAAgBzN,MAAMiD,KAAOwZ,EAAU,GACzC,CAGAjP,EAAiB9N,iBAAiB,aAAa,SAACK,GAC9Cuc,GAAY,EACZ7Y,EAAS1D,EAAEiD,QAGX,IAAM0Z,EAAa1W,WAAWwH,EAAiBxN,MAAMiD,OAASuI,EAC9D+Q,EAAeG,EAEf3c,EAAE4c,gBACJ,IAEAxd,SAASO,iBAAiB,aAAa,SAACK,GACtC,GAAKuc,EAAL,CAEA,IAAMxZ,EAAOsZ,EAAoBrZ,wBAE3B6Z,GADS7c,EAAEiD,QAAUS,GACIX,EAAKxC,MAAS,IAE7Ckc,EAAqBD,EAAeK,GACpC7c,EAAE4c,gBAPoB,CAQxB,IAEAxd,SAASO,iBAAiB,WAAW,WACnC4c,GAAY,CACd,IAGA9O,EAAiB9N,iBAAiB,cAAc,SAACK,GAC/Cuc,GAAY,EACZ7Y,EAAS1D,EAAE8c,QAAQ,GAAG7Z,QAGtB,IAAM0Z,EAAa1W,WAAWwH,EAAiBxN,MAAMiD,OAASuI,EAC9D+Q,EAAeG,EAEf3c,EAAE4c,gBACJ,IAEAxd,SAASO,iBAAiB,aAAa,SAACK,GACtC,GAAKuc,EAAL,CAEA,IAAMxZ,EAAOsZ,EAAoBrZ,wBAE3B6Z,GADS7c,EAAE8c,QAAQ,GAAG7Z,QAAUS,GACPX,EAAKxC,MAAS,IAE7Ckc,EAAqBD,EAAeK,GACpC7c,EAAE4c,gBAPoB,CAQxB,IAEAxd,SAASO,iBAAiB,YAAY,WACpC4c,GAAY,CACd,IAGAF,EAAoB1c,iBAAiB,SAAS,SAACK,GAC7C,IAAIA,EAAE+M,OAAOgQ,QAAQ,kBAAmB/c,EAAE+M,OAAOgQ,QAAQ,kBAAzD,CAEA,IAAMha,EAAOsZ,EAAoBrZ,wBAIjCyZ,GAHezc,EAAEiD,QAAUF,EAAKG,MACNH,EAAKxC,MAAS,IAJ0C,CAOpF,IAGAkc,EAAqBhR,EACvB,CAhLMuR,GAGA1c,GACF,EAEJ,COuBE2c,GNhBK,WACL/d,QAAQC,IAAI,wBAGZ,IAAM+d,EAAgB9d,SAASwH,iBAAiB,eAEhDsW,EAAcpb,SAAQ,SAAAhC,GACpBA,EAAIH,iBAAiB,SAAS,WAoBlC,IAAqBwd,EAgDQC,EAerBjgB,EA7DAkgB,EApBFH,EAAcpb,SAAQ,SAAAL,GAAC,OAAIA,EAAEtB,UAAUE,OAAO,SAAS,IAGvDP,EAAIK,UAAUC,IAAI,UAeH+c,EAZErd,EAAI6E,GAAGkC,MAAM,KAAK,IAcjCwW,EAASxP,EAAesP,IAAarP,EAAYqP,KAOvDje,QAAQC,IAAI,oBAAD8F,OAAqBkY,IAGhCrX,EAASwX,eAAiBH,EAGrBrX,EAASC,iBAAiBgB,QAC7BjB,EAASC,iBAAiBgB,MAAQ,CAAC,GAIrCjB,EAASC,iBAAiBgB,MAAMV,SAAWgX,EAAOhX,SAClDP,EAASC,iBAAiBgB,MAAMM,WAAagW,EAAOhW,WACpDvB,EAASC,iBAAiBgB,MAAMG,WAAamW,EAAOnW,WACpDpB,EAASC,iBAAiBgB,MAAMI,aAAekW,EAAOlW,aACtDrB,EAASC,iBAAiBgB,MAAMK,YAAciW,EAAOjW,YAGjDiW,EAAO9V,eACTzB,EAASC,iBAAiBgB,MAAMQ,aAAYjG,EAAO+b,EAAO9V,eAGxD8V,EAAO7V,kBACT1B,EAASC,iBAAiBgB,MAAMS,gBAAelG,EAAO+b,EAAO7V,kBAI3D6V,EAAOE,gBAcwBlgB,KAFR+f,EAXLC,EAAOE,UAaV7W,aAA6BZ,EAASC,iBAAiBC,UACxEF,EAASC,iBAAiBC,QAAQU,YAAc0W,EAAe1W,kBAGrCrJ,IAAxB+f,EAAezW,MAAsBb,EAASC,iBAAiBC,UACjEF,EAASC,iBAAiBC,QAAQW,KAAOyW,EAAezW,OAW1DoH,EAAa,YAHP5Q,EAAS2I,EAASC,iBAAiBgB,OAGTV,UAChC0H,EAAa,aAAc5Q,EAAOkK,YAClC0G,EAAa,cAAe5Q,EAAO+J,YACnC6G,EAAa,gBAAiB5Q,EAAOgK,cACrC4G,EAAa,eAAgB5Q,EAAOiK,aA1BpC9G,KAvCEpB,QAAQO,KAAK,WAADwF,OAAYkY,EAAQ,eAbhC,GACF,IA0JF,WACE,IACE,IAAMK,EAAeC,aAAaC,QAAQ,sBACtCF,IACF1P,EAAcrQ,KAAKC,MAAM8f,GACzBte,QAAQC,IAAI,uBAAwB/D,OAAO6X,KAAKnF,IAEpD,CAAE,MAAO5H,GACPhH,QAAQgH,MAAM,+BAAgCA,EAChD,CACF,CAjKEyX,EACF,CMPEC,GJlEA1e,QAAQC,IAAI,6BCGZD,QAAQC,IAAI,sCAGZwM,OAAO0C,gBAAkBA,ECJzBnP,QAAQC,IAAI,+BAQN6a,EAAa5a,SAASC,eAAe,gBACrC4a,EAAqB7a,SAASC,eAAe,yBAE/C2a,GACFA,EAAWra,iBAAiB,QAASiX,GAGnCqD,GACFA,EAAmBta,iBAAiB,QAASiX,GEiEjD,WACE1X,QAAQC,IAAI,6BACZ,IAAM0e,EAAaze,SAASC,eAAe,eACrCye,EAAgB1e,SAASC,eAAe,kBACxC0e,EAAmB3e,SAASC,eAAe,qBAE5Cwe,EAKAC,EAKAC,GAKL7e,QAAQC,IAAI,wDAEZ0e,EAAWle,iBAAiB,UAAU,WACpC,IAAMqe,EAAiBzgB,KAAK0gB,QAa5B,GAZA/e,QAAQC,IAAI,uCAAD8F,OAAwC+Y,IAEnDlY,EAAS8P,WAAaoI,EAAiB,WAAa,QAEpD9e,QAAQC,IAAI,gBAAD8F,OAAiBa,EAAS8P,WAAU,UAC/C1W,QAAQC,IAAI,2BAAD8F,OAA4B+Y,EAAiB,OAAS,UACjE9e,QAAQC,IAAI,8BAAD8F,OAA+B+Y,EAAiB,QAAU,SAErEF,EAAc7d,MAAM2N,QAAUoQ,EAAiB,OAAS,QACxDD,EAAiB9d,MAAM2N,QAAUoQ,EAAiB,QAAU,OAGxDA,EACF,IACE9e,QAAQC,IAAI,mCVpDb,WACLD,QAAQC,IAAI,wCAGZ,IAAM4e,EAAmB3e,SAASC,eAAe,qBAEjD,GAAK0e,EAAL,CAMA,IAAIG,EAAiBH,EAAiB3S,cAAc,oBAG/C8S,KACHA,EAAiB9e,SAAS+F,cAAc,QACzBC,UAAY,kBAC3B2Y,EAAiBpY,YAAYuY,IAI/B,IAAIC,EAAwB/e,SAASC,eAAe,2BAChD+e,EAAyBhf,SAASC,eAAe,4BAGhD8e,KACHA,EAAwB/e,SAAS+F,cAAc,OACzBR,GAAK,0BAC3BwZ,EAAsB/Y,UAAY,WAClC+Y,EAAsB5Y,YAAc,mBACpC2Y,EAAevY,YAAYwY,IAGxBC,KACHA,EAAyBhf,SAAS+F,cAAc,QACzBR,GAAK,2BAC5ByZ,EAAuBhZ,UAAY,2BACnC8Y,EAAevY,YAAYyY,IAI7BA,EAAuB7V,UAAY,GAGnC4V,EAAsBhe,UAAUC,IAAI,YACpCge,EAAuBje,UAAUC,IAAI,YACrCge,EAAuBne,MAAM2N,QAAU,QACvCwQ,EAAuBne,MAAMuZ,UAAY,SAGzC2E,EAAsBE,QAAU,WAC9Bnf,QAAQC,IAAI,mCACZ5B,KAAK4C,UAAU2Y,OAAO,YAElBvb,KAAK4C,UAAUoZ,SAAS,aAC1B6E,EAAuBje,UAAUC,IAAI,YACrCge,EAAuBne,MAAM2N,QAAU,QACvCiB,YAAW,WACTuP,EAAuBne,MAAMuZ,UAAY,QAC3C,GAAG,MAEH4E,EAAuBje,UAAUE,OAAO,YACxC+d,EAAuBne,MAAMuZ,UAAY,IACzC3K,YAAW,WACTuP,EAAuBne,MAAM2N,QAAU,MACzC,GAAG,KAEP,EAGA1O,QAAQC,IAAI,gCAGZqF,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,oBACJC,MAAO,WACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQI,UAAY,EAC5DrB,UAAW,aAIbP,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,oBACJC,MAAO,WACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQK,UAAY,EAC5DtB,UAAW,aAIbP,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,sBACJC,MAAO,aACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQM,YAAc,EAC9DvB,UAAW,eAIbP,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,mBACJC,MAAO,UACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQO,SAAW,EAC3DxB,UAAW,YAIbP,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,kBACJC,MAAO,SACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQQ,QAAU,EAC1DzB,UAAW,WAIbP,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,kBACJC,MAAO,SACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQS,QAAU,EAC1D1B,UAAW,WAIbP,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,uBACJC,MAAO,cACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQU,aAAe,EAC/D3B,UAAW,cACXC,eAAe,IAIjBR,EAAqB4Z,EAAwB,CAC3CzZ,GAAI,gBACJC,MAAO,OACPrB,KAAM,IACND,IAAK,IACLuB,KAAM,EACNC,aAAcgB,EAASC,iBAAiBC,QAAQW,MAAQ,EACxD5B,UAAW,SAGb7F,QAAQC,IAAI,uBAEZ,IAAM8c,EAAc7c,SAAS+F,cAAc,UAC3C8W,EAAY1W,YAAc,QAC1B0W,EAAY7W,UAAY,YACxB6W,EAAYtc,iBAAiB,QAASwG,GACtCiY,EAAuBzY,YAAYsW,GAOnC/c,QAAQC,IAAI,mCAtKZ,MAFED,QAAQgH,MAAM,yCAyKlB,CU3HQoY,GACApf,QAAQC,IAAI,mCACd,CAAE,MAAO+G,GACPhH,QAAQgH,MAAM,sCAAuCA,EACvD,CAIEJ,EAASsR,eAAiBtR,EAAS2S,iBACrCvZ,QAAQC,IAAI,gDACZmB,IAEJ,IAEApB,QAAQC,IAAI,gCArCVD,QAAQgH,MAAM,wCALdhH,QAAQgH,MAAM,qCALdhH,QAAQgH,MAAM,iCAgDlB,CAhEEqY,GAmEF,WACE,IAAMrE,EAAc9a,SAASC,eAAe,gBACtC8a,EAAc/a,SAASC,eAAe,gBACtC+a,EAAWhb,SAASC,eAAe,aAErC6a,GACFA,EAAYva,iBAAiB,SAAS,WAChCgM,OAAOC,aACTD,OAAOC,YAAYiP,cAAc,WAErC,IAGEV,GACFA,EAAYxa,iBAAiB,SAAS,WAChCgM,OAAOC,aACTD,OAAOC,YAAYiP,cAAc,WAErC,IAGET,GACFA,EAASza,iBAAiB,SAAS,WAC7BgM,OAAOC,aACTD,OAAOC,YAAYiP,cAAc,QAErC,GAEJ,CA5FE2D,GAEAtf,QAAQC,IAAI,oCACd","sources":["webpack://lots-app/webpack/bootstrap","webpack://lots-app/webpack/runtime/define property getters","webpack://lots-app/webpack/runtime/hasOwnProperty shorthand","webpack://lots-app/./lots-app/src/components/curves/curves-panel.js","webpack://lots-app/./lots-app/src/components/basic-corrections/basic-corrections.js","webpack://lots-app/./lots-app/src/components/creative/creative-effects.js","webpack://lots-app/./lots-app/src/components/color-wheels/color-wheels.js","webpack://lots-app/./lots-app/src/components/image-preview/preview-controller.js","webpack://lots-app/./lots-app/src/components/presets/presets.js","webpack://lots-app/./lots-app/src/components/common/ui-elements.js","webpack://lots-app/./lots-app/src/services/file-service.js","webpack://lots-app/./lots-app/src/services/lut-generator.js","webpack://lots-app/./lots-app/src/services/export-service.js","webpack://lots-app/./lots-app/src/models/image-processor.js","webpack://lots-app/./lots-app/src/app.js","webpack://lots-app/./lots-app/src/components/image-preview/image-comparison.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// components/curves/curves-panel.js\n// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Default curve parameters - only two points for a straight line\nexport const defaultCurveParams = {\n  rgb: [\n    { x: 0, y: 0 },      // Shadow point\n    { x: 1, y: 1 }       // Highlight point\n  ],\n  red: [\n    { x: 0, y: 0 },\n    { x: 1, y: 1 }\n  ],\n  green: [\n    { x: 0, y: 0 },\n    { x: 1, y: 1 }\n  ],\n  blue: [\n    { x: 0, y: 0 },\n    { x: 1, y: 1 }\n  ],\n  currentChannel: 'rgb'\n};\n\n// Check if a curve is linear (no adjustments)\nexport function isLinearCurve(points) {\n  for (let i = 0; i < points.length; i++) {\n    const expectedY = points[i].x;\n    if (Math.abs(points[i].y - expectedY) > 0.01) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Interpolate a value through a curve\nexport function interpolateCurve(points, value) {\n  // Handle edge cases\n  if (value <= 0) return points[0].y;\n  if (value >= 1) return points[points.length - 1].y;\n  \n  // Find the segment containing the value\n  let i = 0;\n  while (i < points.length - 1 && points[i + 1].x < value) {\n    i++;\n  }\n  \n  // Get the segment points\n  const p1 = points[i];\n  const p2 = points[i + 1];\n  \n  // Calculate the t parameter (0-1) within this segment\n  const segmentLength = p2.x - p1.x;\n  const t = segmentLength === 0 ? 0 : (value - p1.x) / segmentLength;\n  \n  // Simple linear interpolation for direct curve segments\n  return p1.y + t * (p2.y - p1.y);\n}\n\n// Main Curves class\nclass CurvesPanel {\n  constructor(params = {}) {\n    // Merge provided params with defaults\n    this.params = {\n      ...JSON.parse(JSON.stringify(defaultCurveParams)),\n      ...params\n    };\n    \n    // DOM references\n    this.curveCanvas = null;\n    this.curveCtx = null;\n    this.channelButtons = {};\n    this.activePoint = null;\n    this.pointRadius = 5;\n    this.gridColor = 'rgba(100, 100, 100, 0.3)';\n    this.baseLineColor = 'rgba(100, 100, 100, 0.5)';\n    this.curveColors = {\n      rgb: 'rgba(255, 255, 255, 0.9)',\n      red: 'rgba(255, 100, 100, 0.9)',\n      green: 'rgba(100, 255, 100, 0.9)',\n      blue: 'rgba(100, 100, 255, 0.9)'\n    };\n    \n    // Keyboard state\n    this.shiftPressed = false;\n    this.altPressed = false;\n    \n    // Bind methods to maintain correct context\n    this.init = this.init.bind(this);\n    this.drawCurve = this.drawCurve.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.resetCurve = this.resetCurve.bind(this);\n    this.findNearestPoint = this.findNearestPoint.bind(this);\n    this.addPoint = this.addPoint.bind(this);\n    this.removePoint = this.removePoint.bind(this);\n  }\n  \n  // Initialize the curves panel UI\n  init() {\n    console.log('Initializing Curves Panel');\n    \n    // Get references to curve UI elements\n    this.curveCanvas = document.getElementById('curve-canvas');\n    \n    if (!this.curveCanvas) {\n      console.warn('Curve canvas not found');\n      return;\n    }\n    \n    this.curveCtx = this.curveCanvas.getContext('2d');\n    \n    // Get channel selector buttons\n    this.channelButtons = {\n      rgb: document.getElementById('curve-rgb'),\n      red: document.getElementById('curve-red'),\n      green: document.getElementById('curve-green'),\n      blue: document.getElementById('curve-blue')\n    };\n    \n    // Set up event listeners\n    this.setupEvents();\n    \n    // Initial UI setup\n    this.updateChannelButtonUI();\n    \n    // Initialize by drawing the curve\n    this.drawCurve();\n  }\n  \n  // Set up all event listeners\n  setupEvents() {\n    // Ensure methods are bound\n    if (!this.curveCanvas) return;\n    \n    // Canvas event handling\n    this.curveCanvas.addEventListener('mousedown', this.handleMouseDown);\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n    \n    // Keyboard event listeners for Shift and Alt keys\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n    \n    // Channel selector buttons\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        btn.addEventListener('click', () => {\n          // Set active channel\n          this.params.currentChannel = channel;\n          \n          // Update UI\n          this.updateChannelButtonUI();\n          this.drawCurve();\n        });\n      }\n    }\n    \n    // Reset button\n    const resetCurveBtn = document.getElementById('reset-curve-btn');\n    if (resetCurveBtn) {\n      resetCurveBtn.addEventListener('click', this.resetCurve);\n    }\n  }\n  \n  // Handle key down events\n  handleKeyDown(e) {\n    // Track Shift key (for adding points)\n    if (e.key === 'Shift') {\n      this.shiftPressed = true;\n      this.curveCanvas.style.cursor = 'crosshair';\n    }\n    \n    // Track Alt/Option key (for removing points)\n    if (e.key === 'Alt' || e.key === 'Option') {\n      this.altPressed = true;\n      this.curveCanvas.style.cursor = 'not-allowed';\n    }\n  }\n  \n  // Handle key up events\n  handleKeyUp(e) {\n    if (e.key === 'Shift') {\n      this.shiftPressed = false;\n      this.curveCanvas.style.cursor = 'default';\n    }\n    \n    if (e.key === 'Alt' || e.key === 'Option') {\n      this.altPressed = false;\n      this.curveCanvas.style.cursor = 'default';\n    }\n  }\n  \n  // Update channel button UI\n  updateChannelButtonUI() {\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        if (channel === this.params.currentChannel) {\n          btn.classList.add('active');\n        } else {\n          btn.classList.remove('active');\n        }\n      }\n    }\n  }\n  \n  // Reset curve to linear\n  resetCurve() {\n    console.log('Resetting curve');\n    \n    // Reset current channel to default linear curve\n    this.params[this.params.currentChannel] = \n      JSON.parse(JSON.stringify(defaultCurveParams[this.params.currentChannel]));\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply to image if available\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Draw the grid\n  drawGrid(width, height) {\n    this.curveCtx.strokeStyle = this.gridColor;\n    this.curveCtx.lineWidth = 1;\n    \n    // Draw vertical grid lines (5 lines including borders)\n    for (let i = 0; i <= 4; i++) {\n      const x = Math.round(width * (i / 4)) + 0.5; // Add 0.5 for sharp lines\n      this.curveCtx.beginPath();\n      this.curveCtx.moveTo(x, 0);\n      this.curveCtx.lineTo(x, height);\n      this.curveCtx.stroke();\n    }\n    \n    // Draw horizontal grid lines (5 lines including borders)\n    for (let i = 0; i <= 4; i++) {\n      const y = Math.round(height * (i / 4)) + 0.5; // Add 0.5 for sharp lines\n      this.curveCtx.beginPath();\n      this.curveCtx.moveTo(0, y);\n      this.curveCtx.lineTo(width, y);\n      this.curveCtx.stroke();\n    }\n    \n    // Draw the diagonal reference line\n    this.curveCtx.strokeStyle = this.baseLineColor;\n    this.curveCtx.beginPath();\n    this.curveCtx.moveTo(0, height);\n    this.curveCtx.lineTo(width, 0);\n    this.curveCtx.stroke();\n  }\n  \n  // Draw the curve onto the canvas\n  drawCurve() {\n    if (!this.curveCanvas || !this.curveCtx) {\n      console.warn('Canvas not ready for drawing');\n      return;\n    }\n    \n    const width = this.curveCanvas.width;\n    const height = this.curveCanvas.height;\n    \n    // Clear canvas\n    this.curveCtx.clearRect(0, 0, width, height);\n    \n    // Draw curve background\n    this.curveCtx.fillStyle = 'rgba(20, 20, 20, 0.4)';\n    this.curveCtx.fillRect(0, 0, width, height);\n    \n    // Draw grid\n    this.drawGrid(width, height);\n    \n    // Get current channel curve points\n    const points = this.params[this.params.currentChannel];\n    \n    // Set curve color based on channel\n    const curveColor = this.curveColors[this.params.currentChannel];\n    \n    // Sort points by X value to ensure proper curve rendering\n    const sortedPoints = [...points].sort((a, b) => a.x - b.x);\n    \n    // Draw the curve using direct line segments\n    this.drawDirectCurve(sortedPoints, width, height, curveColor);\n    \n    // Now draw the control points\n    this.drawControlPoints(sortedPoints, width, height);\n  }\n  \n  // Draw a direct curve with simple line segments\n  drawDirectCurve(points, width, height, curveColor) {\n    if (points.length < 2) return;\n    \n    // For rendering, we'll use a high resolution curve with many interpolated points\n    const resolution = 100; // Number of segments for smooth curve\n    const step = 1 / resolution;\n    \n    this.curveCtx.beginPath();\n    \n    // Start at the first point\n    this.curveCtx.moveTo(\n      points[0].x * width,\n      (1 - points[0].y) * height\n    );\n    \n    // For each segment between 0 and 1\n    for (let t = step; t <= 1; t += step) {\n      // Find the appropriate segment\n      let i = 0;\n      while (i < points.length - 1 && points[i + 1].x < t) {\n        i++;\n      }\n      \n      // Skip if we're already past the end\n      if (i >= points.length - 1) continue;\n      \n      const p1 = points[i];\n      const p2 = points[i + 1];\n      \n      // Skip if point is outside our current segment\n      if (t < p1.x || t > p2.x) continue;\n      \n      // Linear interpolation within this segment\n      const segmentT = (t - p1.x) / (p2.x - p1.x);\n      const y = p1.y + segmentT * (p2.y - p1.y);\n      \n      // Draw line to this point\n      this.curveCtx.lineTo(\n        t * width,\n        (1 - y) * height\n      );\n    }\n    \n    // Ensure we draw to the last point\n    this.curveCtx.lineTo(\n      points[points.length - 1].x * width,\n      (1 - points[points.length - 1].y) * height\n    );\n    \n    // Style and stroke the path\n    this.curveCtx.strokeStyle = curveColor;\n    this.curveCtx.lineWidth = 2;\n    this.curveCtx.stroke();\n  }\n  \n  // Draw the control points\n  drawControlPoints(points, width, height) {\n    points.forEach((point, index) => {\n      const isEndpoint = (index === 0 || index === points.length - 1);\n      const x = point.x * width;\n      const y = (1 - point.y) * height;\n      \n      // Draw point\n      this.curveCtx.beginPath();\n      this.curveCtx.arc(x, y, this.pointRadius, 0, Math.PI * 2);\n      \n      // Style based on whether it's an endpoint (fixed) or not\n      if (isEndpoint) {\n        this.curveCtx.fillStyle = 'rgba(150, 150, 150, 0.9)';\n      } else if (this.activePoint && this.activePoint.point === point) {\n        this.curveCtx.fillStyle = 'rgba(255, 255, 255, 1.0)';\n      } else {\n        this.curveCtx.fillStyle = 'rgba(220, 220, 220, 0.9)';\n      }\n      \n      this.curveCtx.fill();\n      this.curveCtx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n      this.curveCtx.lineWidth = 1;\n      this.curveCtx.stroke();\n    });\n  }\n  \n  // Find the nearest control point to the given coordinates\n  findNearestPoint(x, y) {\n    const points = this.params[this.params.currentChannel];\n    let minDistance = Infinity;\n    let nearestPoint = null;\n    let pointIndex = -1;\n    \n    points.forEach((point, index) => {\n      const dx = point.x - x;\n      const dy = point.y - y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestPoint = point;\n        pointIndex = index;\n      }\n    });\n    \n    return {\n      point: nearestPoint,\n      index: pointIndex,\n      distance: minDistance\n    };\n  }\n  \n  // Add a new point to the curve\n  addPoint(x, y) {\n    const points = this.params[this.params.currentChannel];\n    \n    // Find where to insert the new point (maintain x-ordering)\n    let insertIndex = points.length;\n    for (let i = 0; i < points.length; i++) {\n      if (x < points[i].x) {\n        insertIndex = i;\n        break;\n      }\n    }\n    \n    // Insert the new point\n    points.splice(insertIndex, 0, { x, y });\n    \n    // Redraw the curve\n    this.drawCurve();\n    \n    // Apply changes to image\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n    \n    return insertIndex;\n  }\n  \n  // Remove a point from the curve\n  removePoint(index) {\n    const points = this.params[this.params.currentChannel];\n    \n    // Don't remove endpoint (first and last points)\n    if (index > 0 && index < points.length - 1) {\n      points.splice(index, 1);\n      \n      // Redraw the curve\n      this.drawCurve();\n      \n      // Apply changes to image\n      if (typeof applyImageAdjustments === 'function') {\n        applyImageAdjustments();\n      }\n    }\n  }\n  \n  // Handle mouse down on curve\n  handleMouseDown(e) {\n    if (!this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Clamp values to 0-1 range\n    const clampedX = Math.max(0, Math.min(1, x));\n    const clampedY = Math.max(0, Math.min(1, y));\n    \n    // Find nearest point\n    const nearest = this.findNearestPoint(clampedX, clampedY);\n    \n    // Handle adding a point with Shift key\n    if (this.shiftPressed) {\n      // If not too close to existing point, add a new one\n      if (nearest.distance > 0.05) {\n        this.addPoint(clampedX, clampedY);\n      }\n      return;\n    }\n    \n    // Handle removing a point with Alt/Option key\n    if (this.altPressed) {\n      // If close to a point and not an endpoint, remove it\n      if (nearest.distance < 0.05 && nearest.index > 0 && nearest.index < this.params[this.params.currentChannel].length - 1) {\n        this.removePoint(nearest.index);\n      }\n      return;\n    }\n    \n    // If close enough to a point, select it\n    if (nearest.distance < 0.05) {\n      // Don't allow moving first or last point horizontally\n      if (nearest.index > 0 && nearest.index < this.params[this.params.currentChannel].length - 1) {\n        this.activePoint = {\n          point: nearest.point,\n          index: nearest.index,\n          startX: clampedX,\n          startY: clampedY\n        };\n      } else {\n        // Endpoints can only move vertically\n        this.activePoint = {\n          point: nearest.point,\n          index: nearest.index,\n          startX: clampedX,\n          startY: clampedY,\n          verticalOnly: true\n        };\n      }\n      \n      // Redraw to highlight the active point\n      this.drawCurve();\n    }\n  }\n  \n  // Handle mouse move\n  handleMouseMove(e) {\n    if (!this.activePoint || !this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    let x = (e.clientX - rect.left) / rect.width;\n    let y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Clamp values\n    x = Math.max(0, Math.min(1, x));\n    y = Math.max(0, Math.min(1, y));\n    \n    const points = this.params[this.params.currentChannel];\n    const index = this.activePoint.index;\n    \n    // If vertical only (endpoints), only update Y\n    if (this.activePoint.verticalOnly) {\n      points[index].y = y;\n    } else {\n      // For middle points, enforce x-ordering\n      const prevX = (index > 0) ? points[index - 1].x + 0.01 : 0;\n      const nextX = (index < points.length - 1) ? points[index + 1].x - 0.01 : 1;\n      \n      // Update point position\n      points[index].x = Math.max(prevX, Math.min(nextX, x));\n      points[index].y = y;\n    }\n    \n    // Redraw the curve\n    this.drawCurve();\n    \n    // Apply changes to image\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Handle mouse up\n  handleMouseUp(e) {\n    this.activePoint = null;\n    this.drawCurve(); // Redraw to update highlighting\n  }\n  \n  // Apply curves to RGB values\n  applyCurves(r, g, b) {\n    // Apply RGB curve\n    const rgbPoints = this.params.rgb;\n    \n    r = interpolateCurve(rgbPoints, r);\n    g = interpolateCurve(rgbPoints, g);\n    b = interpolateCurve(rgbPoints, b);\n    \n    // Apply individual channel curves if not linear\n    if (!isLinearCurve(this.params.red)) {\n      r = interpolateCurve(this.params.red, r);\n    }\n    \n    if (!isLinearCurve(this.params.green)) {\n      g = interpolateCurve(this.params.green, g);\n    }\n    \n    if (!isLinearCurve(this.params.blue)) {\n      b = interpolateCurve(this.params.blue, b);\n    }\n    \n    return { r, g, b };\n  }\n  \n  // Apply curves to an entire image\n  applyCurvesToImage(imageData) {\n    const data = imageData.data;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      // Get RGB values and normalize to 0-1\n      let r = data[i] / 255;\n      let g = data[i + 1] / 255;\n      let b = data[i + 2] / 255;\n      \n      // Apply curves\n      const result = this.applyCurves(r, g, b);\n      \n      // Convert back to 0-255 range\n      data[i] = Math.round(result.r * 255);\n      data[i + 1] = Math.round(result.g * 255);\n      data[i + 2] = Math.round(result.b * 255);\n      // Alpha remains unchanged\n    }\n    \n    return imageData;\n  }\n}\n\n// Single instance for the app\nlet curvesPanel = null;\n\n// Initialize the curves panel\nexport function initCurvesPanel() {\n  console.log('Setting up Curves Panel');\n  \n  // Initialize curves parameters in app state if not present\n  if (!appState.currentLutParams.curves) {\n    appState.currentLutParams.curves = JSON.parse(JSON.stringify(defaultCurveParams));\n  }\n  \n  // Create the curves panel with parameters from app state\n  curvesPanel = new CurvesPanel(appState.currentLutParams.curves);\n  \n  // Set up section toggle\n  setupSectionToggle('curves-toggle', 'curves-section');\n  \n  // Initialize when DOM is ready\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    setTimeout(() => curvesPanel.init(), 0);\n  } else {\n    document.addEventListener('DOMContentLoaded', () => curvesPanel.init());\n  }\n  \n  // Store reference in app state\n  appState.curvesPanel = curvesPanel;\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n      \n      if (section.classList.contains('expanded')) {\n        section.style.display = 'block';\n        section.style.maxHeight = '1000px'; \n        section.style.opacity = '1';\n      } else {\n        section.style.maxHeight = '0';\n        section.style.opacity = '0';\n        setTimeout(() => {\n          if (!section.classList.contains('expanded')) {\n            section.style.display = 'none';\n          }\n        }, 300);\n      }\n    });\n  }\n}\n\n// Apply curves to an image\nexport function applyCurvesToImage(imageData) {\n  if (curvesPanel) {\n    return curvesPanel.applyCurvesToImage(imageData);\n  }\n  return imageData;\n}","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Basic Corrections component\nexport function initBasicCorrections() {\n  console.log('Initializing Basic Corrections');\n  \n  // Initialize basic correction parameters if not present\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {\n      contrast: 1.2,\n      saturation: 1.15,\n      redBalance: 1.05,\n      greenBalance: 0.95,\n      blueBalance: 1.1\n    };\n  }\n  \n  // Initialize advanced parameters if not present\n  if (!appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri = {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    };\n  }\n  \n  // Set up basic mode controls\n  setupBasicControls();\n  \n  // Initialize LUT title and size controls\n  initTitleAndSizeControls();\n  \n  console.log('Basic Corrections initialized successfully');\n}\n\n// Set up basic mode slider controls\nfunction setupBasicControls() {\n  console.log('Setting up basic controls');\n  \n  // Get slider references\n  const contrastSlider = document.getElementById('contrast');\n  const saturationSlider = document.getElementById('saturation');\n  const redBalanceSlider = document.getElementById('red-balance');\n  const greenBalanceSlider = document.getElementById('green-balance');\n  const blueBalanceSlider = document.getElementById('blue-balance');\n  \n  // Display value references\n  const contrastValue = document.getElementById('contrast-value');\n  const saturationValue = document.getElementById('saturation-value');\n  const redBalanceValue = document.getElementById('red-balance-value');\n  const greenBalanceValue = document.getElementById('green-balance-value');\n  const blueBalanceValue = document.getElementById('blue-balance-value');\n  \n  // Report missing elements\n  if (!contrastSlider) console.warn('Contrast slider not found');\n  if (!saturationSlider) console.warn('Saturation slider not found');\n  if (!redBalanceSlider) console.warn('Red balance slider not found');\n  if (!greenBalanceSlider) console.warn('Green balance slider not found');\n  if (!blueBalanceSlider) console.warn('Blue balance slider not found');\n  \n  // Set up event listeners for sliders\n  setupSlider(contrastSlider, contrastValue, 'contrast');\n  setupSlider(saturationSlider, saturationValue, 'saturation');\n  setupSlider(redBalanceSlider, redBalanceValue, 'redBalance');\n  setupSlider(greenBalanceSlider, greenBalanceValue, 'greenBalance');\n  setupSlider(blueBalanceSlider, blueBalanceValue, 'blueBalance');\n  \n  console.log('Basic controls setup complete');\n}\n\n// Set up advanced mode controls\nexport function setupAdvancedControls() {\n  console.log('Setting up advanced mode controls...');\n  \n  // Get references to the advanced controls container\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (!advancedControls) {\n    console.error('Advanced controls container not found!');\n    return;\n  }\n  \n  // Check if the lumetri section already exists\n  let lumetriSection = advancedControls.querySelector('.lumetri-section');\n  \n  // If not, create it from scratch\n  if (!lumetriSection) {\n    lumetriSection = document.createElement('div');\n    lumetriSection.className = 'lumetri-section';\n    advancedControls.appendChild(lumetriSection);\n  }\n  \n  // Check for the toggle and section elements\n  let basicCorrectionToggle = document.getElementById('basic-correction-toggle');\n  let basicCorrectionSection = document.getElementById('basic-correction-section');\n  \n  // If they don't exist, create them\n  if (!basicCorrectionToggle) {\n    basicCorrectionToggle = document.createElement('h3');\n    basicCorrectionToggle.id = 'basic-correction-toggle';\n    basicCorrectionToggle.className = 'expanded';\n    basicCorrectionToggle.textContent = 'Basic Correction';\n    lumetriSection.appendChild(basicCorrectionToggle);\n  }\n  \n  if (!basicCorrectionSection) {\n    basicCorrectionSection = document.createElement('div');\n    basicCorrectionSection.id = 'basic-correction-section';\n    basicCorrectionSection.className = 'section-content expanded';\n    lumetriSection.appendChild(basicCorrectionSection);\n  }\n  \n  // Clear any existing content in the section\n  basicCorrectionSection.innerHTML = '';\n  \n  // Ensure the section is visible and expanded\n  basicCorrectionToggle.classList.add('expanded');\n  basicCorrectionSection.classList.add('expanded');\n  basicCorrectionSection.style.display = 'block';\n  basicCorrectionSection.style.maxHeight = '1000px';\n  \n  // Set up toggle click handler explicitly\n  basicCorrectionToggle.onclick = function() {\n    console.log('Basic correction toggle clicked');\n    this.classList.toggle('expanded');\n    \n    if (this.classList.contains('expanded')) {\n      basicCorrectionSection.classList.add('expanded');\n      basicCorrectionSection.style.display = 'block';\n      setTimeout(() => {\n        basicCorrectionSection.style.maxHeight = '1000px';\n      }, 10);\n    } else {\n      basicCorrectionSection.classList.remove('expanded');\n      basicCorrectionSection.style.maxHeight = '0';\n      setTimeout(() => {\n        basicCorrectionSection.style.display = 'none';\n      }, 300);\n    }\n  };\n  \n  // Create sliders inside the section\n  console.log('Creating advanced sliders...');\n  \n  // Create exposure control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'exposure-advanced',\n    label: 'Exposure',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.exposure || 0,\n    paramName: 'exposure'\n  });\n  \n  // Create contrast control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'contrast-advanced',\n    label: 'Contrast',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.contrast || 0,\n    paramName: 'contrast'\n  });\n  \n  // Create highlights control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'highlights-advanced',\n    label: 'Highlights',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.highlights || 0,\n    paramName: 'highlights'\n  });\n  \n  // Create shadows control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'shadows-advanced',\n    label: 'Shadows',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.shadows || 0,\n    paramName: 'shadows'\n  });\n  \n  // Create whites control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'whites-advanced',\n    label: 'Whites',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.whites || 0,\n    paramName: 'whites'\n  });\n  \n  // Create blacks control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'blacks-advanced',\n    label: 'Blacks',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.blacks || 0,\n    paramName: 'blacks'\n  });\n  \n  // Create temperature control with Kelvin display\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'temperature-advanced',\n    label: 'Temperature',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.temperature || 0,\n    paramName: 'temperature',\n    isTemperature: true\n  });\n  \n  // Create tint control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'tint-advanced',\n    label: 'Tint',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.tint || 0,\n    paramName: 'tint'\n  });\n  \n  console.log('Adding reset button');\n  // Add reset button\n  const resetButton = document.createElement('button');\n  resetButton.textContent = 'Reset';\n  resetButton.className = 'reset-btn';\n  resetButton.addEventListener('click', resetAdvancedControls);\n  basicCorrectionSection.appendChild(resetButton);\n  \n  // Create other sections if needed\n  setupCreativeSection(advancedControls);\n  setupColorWheelsSection(advancedControls);\n  setupCurvesSection(advancedControls);\n  \n  console.log('Advanced controls setup complete');\n}\n\n// Helper function to set up Creative section\nfunction setupCreativeSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to set up Color Wheels section\nfunction setupColorWheelsSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to set up Curves section\nfunction setupCurvesSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to convert temperature slider value to Kelvin\nfunction tempToKelvin(value) {\n  // Map slider value (-150 to +150) to Kelvin range (approx 2000K to 10000K)\n  // 0 on the slider = 6500K (neutral)\n  if (value === 0) return 6500;\n  \n  if (value < 0) {\n    // Negative values = warmer (lower Kelvin)\n    return Math.round(6500 + (value / 150) * 4500);\n  } else {\n    // Positive values = cooler (higher Kelvin)\n    return Math.round(6500 + (value / 150) * 3500);\n  }\n}\n\n// Helper function to create advanced slider controls\nfunction createAdvancedSlider(container, options) {\n  if (!container) {\n    console.error('Cannot create slider: container is null');\n    return;\n  }\n  \n  const { id, label, min, max, step, initialValue, paramName, isTemperature } = options;\n  console.log(`Creating advanced slider: ${id} for ${paramName}`);\n  \n  // Create container for the slider\n  const sliderContainer = document.createElement('div');\n  sliderContainer.className = 'control-group';\n  \n  // Create label element\n  const labelElement = document.createElement('label');\n  labelElement.setAttribute('for', id);\n  labelElement.textContent = label + ' ';\n  \n  // Create value display\n  const valueDisplay = document.createElement('span');\n  valueDisplay.id = `${id}-value`;\n  valueDisplay.className = 'parameter-value';\n  \n  // Set initial value display\n  if (isTemperature) {\n    // For temperature, show Kelvin\n    const kelvinValue = tempToKelvin(initialValue);\n    valueDisplay.textContent = `${kelvinValue}K`;\n    \n    // Add kelvin value class for styling if needed\n    valueDisplay.classList.add('kelvin-value');\n  } else {\n    // For other parameters, show regular value\n    valueDisplay.textContent = initialValue.toFixed(1);\n  }\n  \n  // Append value display to label\n  labelElement.appendChild(valueDisplay);\n  \n  // Create slider input\n  const slider = document.createElement('input');\n  slider.type = 'range';\n  slider.id = id;\n  slider.min = min;\n  slider.max = max;\n  slider.step = step;\n  slider.value = initialValue;\n  \n  // Add elements to container\n  sliderContainer.appendChild(labelElement);\n  sliderContainer.appendChild(slider);\n  container.appendChild(sliderContainer);\n  \n  // Set up event listener\n  slider.addEventListener('input', () => {\n    // Ensure lumetri object exists\n    if (!appState.currentLutParams.lumetri) {\n      appState.currentLutParams.lumetri = {};\n    }\n    \n    // Update parameter value\n    appState.currentLutParams.lumetri[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    if (isTemperature) {\n      // For temperature, show Kelvin\n      const kelvinValue = tempToKelvin(parseFloat(slider.value));\n      valueDisplay.textContent = `${kelvinValue}K`;\n    } else {\n      // For other parameters, show regular value\n      valueDisplay.textContent = parseFloat(slider.value).toFixed(1);\n    }\n    \n    console.log(`Advanced parameter updated: ${paramName} = ${slider.value}`);\n    \n    // Apply changes to image\n    applyImageAdjustments();\n  });\n  \n  return { slider, valueDisplay };\n}\n\n// Reset all advanced controls to their default values\nfunction resetAdvancedControls() {\n  console.log('Resetting advanced controls to defaults');\n  \n  // Reset all lumetri parameters to default values\n  appState.currentLutParams.lumetri = {\n    exposure: 0,\n    contrast: 0,\n    highlights: 0,\n    shadows: 0,\n    whites: 0,\n    blacks: 0,\n    temperature: 0,\n    tint: 0\n  };\n  \n  // Update all slider controls to match reset values\n  const sliders = document.querySelectorAll('#basic-correction-section input[type=\"range\"]');\n  sliders.forEach(slider => {\n    const paramName = slider.id.split('-')[0]; // Extract parameter name from id\n    slider.value = appState.currentLutParams.lumetri[paramName] || 0;\n    \n    // Update value display\n    const valueDisplay = document.getElementById(`${slider.id}-value`);\n    if (valueDisplay) {\n      if (paramName === 'temperature') {\n        valueDisplay.textContent = '6500K'; // Neutral temperature in Kelvin\n      } else {\n        valueDisplay.textContent = '0.0';\n      }\n    }\n  });\n  \n  // Apply changes\n  applyImageAdjustments();\n}\n\n// Set up a slider control with its value display for basic mode\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) {\n    console.warn(`Cannot set up slider: ${paramName} - missing elements`);\n    return;\n  }\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.basic[paramName];\n  valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.basic[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n    \n    console.log(`Basic parameter updated: ${paramName} = ${slider.value}`);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Initialize title and LUT size controls\nfunction initTitleAndSizeControls() {\n  console.log('Initializing title and LUT size controls');\n  \n  const titleInput = document.getElementById('title');\n  const lutSizeSelect = document.getElementById('lut-size');\n  \n  if (!titleInput) console.warn('Title input not found');\n  if (!lutSizeSelect) console.warn('LUT size select not found');\n  \n  if (titleInput) {\n    // Set initial value\n    titleInput.value = appState.currentLutParams.title || \"Signature Look\";\n    \n    // Add event listener\n    titleInput.addEventListener('input', () => {\n      appState.currentLutParams.title = titleInput.value;\n    });\n  }\n  \n  if (lutSizeSelect) {\n    // Set initial value\n    lutSizeSelect.value = appState.currentLutParams.size || \"32\";\n    \n    // Add event listener\n    lutSizeSelect.addEventListener('change', () => {\n      appState.currentLutParams.size = parseInt(lutSizeSelect.value);\n    });\n  }\n}\n\n// Apply the basic corrections to an image\nexport function applyBasicCorrections(imageData) {\n  const params = appState.currentLutParams.basic;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply contrast\n    r = applyContrast(r, params.contrast);\n    g = applyContrast(g, params.contrast);\n    b = applyContrast(b, params.contrast);\n    \n    // Apply color balance\n    r *= params.redBalance;\n    g *= params.greenBalance;\n    b *= params.blueBalance;\n    \n    // Apply saturation\n    if (params.saturation !== 1.0) {\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      r = luminance + params.saturation * (r - luminance);\n      g = luminance + params.saturation * (g - luminance);\n      b = luminance + params.saturation * (b - luminance);\n    }\n    \n    // Apply shadow/highlight adjustments (if defined)\n    if (params.shadowsShift && params.highlightsShift) {\n      let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n      let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n      \n      r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n      g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n      b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Helper function to apply contrast\nfunction applyContrast(value, contrast) {\n  return 0.5 + (value - 0.5) * contrast;\n}\n\n// Export functions and constants\nexport {\n  applyContrast\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Creative Effects component\nexport function initCreativeEffects() {\n  console.log('Initializing Creative Effects');\n  \n  // Initialize creative effect parameters if not present\n  if (!appState.currentLutParams.creative) {\n    appState.currentLutParams.creative = {\n      fadedFilm: 0,\n      vibrance: 0\n    };\n  }\n  \n  // Get slider references\n  const fadedFilmSlider = document.getElementById('faded-film');\n  const vibranceSlider = document.getElementById('vibrance');\n  \n  // Display value references\n  const fadedFilmValue = document.getElementById('faded-film-value');\n  const vibranceValue = document.getElementById('vibrance-value');\n  \n  // Set up event listeners for sliders\n  setupSlider(fadedFilmSlider, fadedFilmValue, 'fadedFilm');\n  setupSlider(vibranceSlider, vibranceValue, 'vibrance');\n  \n  // Set up section toggle\n  setupSectionToggle('creative-toggle', 'creative-section');\n}\n\n// Set up a slider control with its value display\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) return;\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.creative[paramName];\n  valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.creative[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      \n      if (toggle.classList.contains('expanded')) {\n        section.classList.add('expanded');\n        section.style.display = 'block';\n        setTimeout(() => {\n          section.style.maxHeight = '1000px';\n          section.style.opacity = '1';\n        }, 10);\n      } else {\n        section.classList.remove('expanded');\n        section.style.maxHeight = '0';\n        section.style.opacity = '0';\n        setTimeout(() => {\n          if (!toggle.classList.contains('expanded')) {\n            section.style.display = 'none';\n          }\n        }, 300);\n      }\n    });\n  }\n}\n\n// Apply creative effects to image data\nexport function applyCreativeEffects(imageData) {\n  const params = appState.currentLutParams.creative;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply vibrance if enabled\n    if (params.vibrance !== 0) {\n      const result = applyVibrance(r, g, b, params.vibrance / 150);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Apply faded film effect if enabled\n    if (params.fadedFilm > 0) {\n      const result = applyFadedFilm(r, g, b, params.fadedFilm / 100);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply vibrance adjustment\nfunction applyVibrance(r, g, b, amount) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate saturation level to determine vibrance effect\n  const maxChannel = Math.max(r, g, b);\n  const minChannel = Math.min(r, g, b);\n  const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n  \n  // Apply vibrance (affects less saturated colors more)\n  const vibranceEffect = amount * (1 - saturationLevel);\n  \n  // Apply the effect to each channel\n  r = luminance + (r - luminance) * (1 + vibranceEffect);\n  g = luminance + (g - luminance) * (1 + vibranceEffect);\n  b = luminance + (b - luminance) * (1 + vibranceEffect);\n  \n  return { r, g, b };\n}\n\n// Apply faded film effect\nfunction applyFadedFilm(r, g, b, amount) {\n  // Faded film effect reduces contrast and slightly shifts the black point\n  const fadeAmount = amount * 0.5; // Adjust the strength\n  \n  // Reduce contrast\n  r = r * (1 - fadeAmount) + 0.5 * fadeAmount;\n  g = g * (1 - fadeAmount) + 0.5 * fadeAmount;\n  b = b * (1 - fadeAmount) + 0.5 * fadeAmount;\n  \n  // Add a slight shift to the black point\n  const blackShift = amount * 0.1;\n  r += blackShift;\n  g += blackShift;\n  b += blackShift;\n  \n  return { r, g, b };\n}\n\n// Export functions and utilities\nexport {\n  applyVibrance,\n  applyFadedFilm\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Color Wheels component\nexport function initColorWheels() {\n  console.log('Initializing Color Wheels');\n  \n  // Initialize color wheel parameters if not present\n  if (!appState.currentLutParams.colorWheels) {\n    appState.currentLutParams.colorWheels = {\n      shadowTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      highlightTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      tintBalance: 0 // Range: -150 to 150\n    };\n  }\n  \n  // Get DOM references\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  // Setup color wheels\n  if (shadowColorWheel) {\n    setupColorWheel(shadowColorWheel, 'shadowTint');\n  }\n  \n  if (highlightColorWheel) {\n    setupColorWheel(highlightColorWheel, 'highlightTint');\n  }\n  \n  // Setup tint balance slider\n  if (tintBalanceSlider && tintBalanceValue) {\n    // Set initial value\n    tintBalanceSlider.value = appState.currentLutParams.colorWheels.tintBalance;\n    tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n    \n    // Add event listener\n    tintBalanceSlider.addEventListener('input', () => {\n      appState.currentLutParams.colorWheels.tintBalance = parseFloat(tintBalanceSlider.value);\n      tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n      applyImageAdjustments();\n    });\n  }\n  \n  // Setup reset button\n  const resetButton = document.querySelector('.reset-btn[data-section=\"colorWheels\"]');\n  if (resetButton) {\n    resetButton.addEventListener('click', resetColorWheels);\n  }\n  \n  // Set up section toggle\n  setupSectionToggle('color-wheels-toggle', 'color-wheels-section');\n}\n\n// Set up a color wheel control\nfunction setupColorWheel(wheel, paramName) {\n  if (!wheel) return;\n  \n  // Clear any existing content\n  wheel.innerHTML = '';\n  \n  // Create a canvas-based color wheel\n  const canvas = document.createElement('canvas');\n  canvas.width = wheel.clientWidth || 80;\n  canvas.height = wheel.clientHeight || 80;\n  wheel.appendChild(canvas);\n  \n  // Improved anti-aliased color wheel background with smooth gradient\n  wheel.style.background = \"conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  wheel.style.backgroundImage = \"radial-gradient(circle at center, white 0%, rgba(255, 255, 255, 0) 70%), conic-gradient(from 0deg, hsl(0, 100%, 50%), hsl(60, 100%, 50%), hsl(120, 100%, 50%), hsl(180, 100%, 50%), hsl(240, 100%, 50%), hsl(300, 100%, 50%), hsl(360, 100%, 50%))\";\n  wheel.style.borderRadius = \"50%\";\n  wheel.style.boxShadow = \"inset 0 0 0 1px rgba(255, 255, 255, 0.2)\";\n  wheel.style.border = \"none\"; // Remove the default border causing aliasing\n  \n  // Add indicator for current position\n  const indicator = document.createElement('div');\n  indicator.className = 'wheel-indicator';\n  wheel.appendChild(indicator);\n  \n  // Get current tint value\n  const tintValue = appState.currentLutParams.colorWheels[paramName];\n  \n  // Position indicator based on current tint value\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  const maxDistance = Math.min(centerX, centerY) - 2;\n  \n  // Calculate position from tint values\n  // Convert from 0-255 range to -1 to 1 range (128 is center/neutral)\n  const normalizedR = (tintValue.r - 128) / 128;\n  const normalizedG = (tintValue.g - 128) / 128;\n  const normalizedB = (tintValue.b - 128) / 128;\n  \n  // Estimate hue and saturation from RGB (simplified)\n  let saturation = Math.sqrt(normalizedR*normalizedR + normalizedG*normalizedG + normalizedB*normalizedB);\n  saturation = Math.min(1, saturation); // Clamp to 1\n  \n  // This is a simplified conversion - a complete RGB to HSV would be more accurate\n  let hue = 0;\n  if (saturation > 0) {\n    // Rough estimation of hue angle based on RGB values\n    hue = Math.atan2(normalizedG, normalizedR);\n    if (normalizedB > Math.max(normalizedR, normalizedG)) {\n      hue = Math.PI + Math.atan2(normalizedB, -normalizedR);\n    }\n    // Convert to 0-2PI range\n    if (hue < 0) hue += 2 * Math.PI;\n  }\n  \n  // Calculate x,y position on wheel\n  const x = Math.cos(hue) * saturation * maxDistance;\n  const y = Math.sin(hue) * saturation * maxDistance;\n  \n  // Position indicator\n  setWheelIndicatorPosition(wheel, indicator, x, y);\n  \n  // Track if mouse is down\n  let isMouseDown = false;\n  \n  // Handle mouse interactions\n  wheel.addEventListener('mousedown', (e) => {\n    isMouseDown = true;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mousemove', (e) => {\n    if (!isMouseDown) return;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mouseup', () => {\n    isMouseDown = false;\n  });\n  \n  wheel.addEventListener('click', updateWheelFromEvent);\n  \n  function updateWheelFromEvent(e) {\n    const rect = wheel.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    \n    // Get coordinates relative to center\n    const x = e.clientX - rect.left - centerX;\n    const y = e.clientY - rect.top - centerY;\n    \n    // Calculate distance from center (for saturation)\n    const distance = Math.sqrt(x * x + y * y);\n    const maxDistance = Math.min(centerX, centerY) - 2;\n    \n    // Limit to wheel boundary\n    if (distance <= maxDistance) {\n      // Update indicator position\n      setWheelIndicatorPosition(wheel, indicator, x, y);\n      \n      // Calculate angle (for hue)\n      let angle = Math.atan2(y, x);\n      if (angle < 0) angle += 2 * Math.PI;\n      \n      // Normalize distance to 0-1\n      const normalizedDistance = distance / maxDistance;\n      \n      // Calculate color based on position\n      const hue = angle / (2 * Math.PI);\n      const saturation = normalizedDistance;\n      const rgb = hsvToRgb(hue, saturation, 1.0);\n      \n      // Map RGB (0-255) to tint adjustments (64-192, where 128 is neutral)\n      // We use a narrower range to avoid extreme adjustments\n      const mappedR = Math.round(128 + (rgb.r - 128) * saturation);\n      const mappedG = Math.round(128 + (rgb.g - 128) * saturation);\n      const mappedB = Math.round(128 + (rgb.b - 128) * saturation);\n      \n      // Update the parameter\n      appState.currentLutParams.colorWheels[paramName] = { r: mappedR, g: mappedG, b: mappedB };\n      \n      // Apply the adjustment to the image\n      applyImageAdjustments();\n    }\n  }\n}\n\n// Reset color wheels to default values\nfunction resetColorWheels() {\n  // Reset to neutral tints\n  appState.currentLutParams.colorWheels.shadowTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.highlightTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.tintBalance = 0;\n  \n  // Update UI\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  if (tintBalanceSlider) tintBalanceSlider.value = 0;\n  if (tintBalanceValue) tintBalanceValue.textContent = '0.0';\n  \n  // Reset wheel indicators\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  \n  if (shadowColorWheel) {\n    const shadowIndicator = shadowColorWheel.querySelector('.wheel-indicator');\n    if (shadowIndicator) {\n      setWheelIndicatorPosition(shadowColorWheel, shadowIndicator, 0, 0);\n    }\n  }\n  \n  if (highlightColorWheel) {\n    const highlightIndicator = highlightColorWheel.querySelector('.wheel-indicator');\n    if (highlightIndicator) {\n      setWheelIndicatorPosition(highlightColorWheel, highlightIndicator, 0, 0);\n    }\n  }\n  \n  // Apply changes to image\n  applyImageAdjustments();\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Helper for setting wheel indicator position\nfunction setWheelIndicatorPosition(wheel, indicator, x, y) {\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  \n  indicator.style.left = `${centerX + x}px`;\n  indicator.style.top = `${centerY + y}px`;\n}\n\n// Convert HSV (0-1 ranges) to RGB (0-255)\nfunction hsvToRgb(h, s, v) {\n  let r, g, b;\n  \n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  \n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  \n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\n\n// Apply color wheel tinting to an image\nexport function applyColorWheelAdjustments(imageData) {\n  const params = appState.currentLutParams.colorWheels;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply color wheels tinting\n    const result = applyColorWheels(r, g, b, params.shadowTint, params.highlightTint, params.tintBalance / 150);\n    \n    // Clamp values to valid range\n    data[i] = Math.round(Math.min(1.0, Math.max(0.0, result.r)) * 255);\n    data[i + 1] = Math.round(Math.min(1.0, Math.max(0.0, result.g)) * 255);\n    data[i + 2] = Math.round(Math.min(1.0, Math.max(0.0, result.b)) * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply color wheels (shadow and highlight tinting)\nfunction applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate shadow and highlight influence based on luminance\n  let shadowInfluence = Math.pow(1 - luminance, 2);\n  let highlightInfluence = Math.pow(luminance, 2);\n  \n  // Apply tint balance to adjust the crossover point\n  if (tintBalance > 0) {\n    // Shift influence towards highlights\n    shadowInfluence *= (1 - tintBalance);\n    highlightInfluence = highlightInfluence * (1 - tintBalance) + tintBalance;\n  } else if (tintBalance < 0) {\n    // Shift influence towards shadows\n    highlightInfluence *= (1 + tintBalance);\n    shadowInfluence = shadowInfluence * (1 + tintBalance) - tintBalance;\n  }\n  \n  // Convert shadow tint from 0-255 to -1 to 1 range (128 is neutral)\n  const shadowR = (shadowTint.r - 128) / 128;\n  const shadowG = (shadowTint.g - 128) / 128;\n  const shadowB = (shadowTint.b - 128) / 128;\n  \n  // Convert highlight tint from 0-255 to -1 to 1 range (128 is neutral)\n  const highlightR = (highlightTint.r - 128) / 128;\n  const highlightG = (highlightTint.g - 128) / 128;\n  const highlightB = (highlightTint.b - 128) / 128;\n  \n  // Apply shadow tint\n  r += shadowR * shadowInfluence * 0.5;\n  g += shadowG * shadowInfluence * 0.5;\n  b += shadowB * shadowInfluence * 0.5;\n  \n  // Apply highlight tint\n  r += highlightR * highlightInfluence * 0.5;\n  g += highlightG * highlightInfluence * 0.5;\n  b += highlightB * highlightInfluence * 0.5;\n  \n  return { r, g, b };\n}\n\n// Export functions for use in other modules\nexport {\n  hsvToRgb,\n  applyColorWheels\n};","// Import utilities if needed\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Keep track of slider position\nlet currentSliderPosition = 50;\n\n// Initialize the preview controller\nexport function initPreviewController() {\n  console.log('Initializing Preview Controller');\n  \n  // Get DOM elements\n  const originalImage = document.getElementById('original-image');\n  const processedImage = document.getElementById('processed-image');\n  const originalPlaceholder = document.getElementById('original-placeholder');\n  const comparisonContainer = document.getElementById('comparison-container');\n  const imageUploadBtn = document.getElementById('image-upload-btn');\n  \n  // Store references to the DOM elements in the global app state\n  appState.originalImageElement = originalImage;\n  appState.processedImageElement = processedImage;\n  \n  // Set up view toggle buttons\n  setupViewToggleButtons();\n  \n  // Set up image upload button\n  if (imageUploadBtn) {\n    imageUploadBtn.addEventListener('click', handleImageUpload);\n  }\n  \n  // Set up image load handler\n  if (originalImage) {\n    originalImage.onload = () => {\n      console.log(\"Image loaded successfully\");\n      \n      // Store the image in app state\n      appState.originalImage = originalImage;\n      appState.processedImage = processedImage;\n      \n      // Hide placeholder, show comparison container\n      if (originalPlaceholder) originalPlaceholder.style.display = 'none';\n      if (comparisonContainer) comparisonContainer.style.display = 'block';\n      \n      // Initialize comparison slider\n      initComparisonSlider();\n      \n      // Apply adjustments to process the image\n      applyImageAdjustments();\n    };\n  }\n}\n\n// Set up view toggle buttons (split, before, after)\nfunction setupViewToggleButtons() {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  \n  if (viewSplitBtn) {\n    viewSplitBtn.addEventListener('click', () => {\n      setViewMode('split');\n    });\n  }\n  \n  if (viewBeforeBtn) {\n    viewBeforeBtn.addEventListener('click', () => {\n      setViewMode('before');\n    });\n  }\n  \n  if (viewAfterBtn) {\n    viewAfterBtn.addEventListener('click', () => {\n      setViewMode('after');\n    });\n  }\n}\n\n// Handle image upload functionality\nfunction handleImageUpload() {\n  console.log(\"Image upload button clicked\");\n  \n  // In Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    window.electronAPI.openFileDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp'] }]\n    }).then(imagePath => {\n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        appState.originalImageElement.src = `file://${imagePath}`;\n      }\n    }).catch(error => {\n      console.error(\"Error in Electron file dialog:\", error);\n      fallbackFileUpload();\n    });\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    fallbackFileUpload();\n  }\n}\n\n// Fallback file upload function using HTML input for browser context\nfunction fallbackFileUpload() {\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = 'image/*';\n  \n  input.addEventListener('change', function(e) {\n    if (this.files && this.files[0]) {\n      const file = this.files[0];\n      console.log(\"Selected file:\", file.name);\n      \n      const reader = new FileReader();\n      reader.onload = function(event) {\n        appState.originalImageElement.src = event.target.result;\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  });\n  \n  input.click();\n}\n\n// Initialize comparison slider functionality\nfunction initComparisonSlider() {\n  const comparisonContainer = document.getElementById('comparison-container');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  let isSliding = false;\n  let startX = 0;\n  let startPercent = 50;\n\n  // Function to update slider position\n  function updateSliderPosition(percent) {\n    percent = Math.max(0, Math.min(100, percent));\n    \n    // Store the current position\n    currentSliderPosition = percent;\n    \n    // Update the clip-path of the original image container\n    originalImageContainer.style.clipPath = `inset(0 ${100 - percent}% 0 0)`;\n    \n    // Update slider position\n    comparisonSlider.style.left = percent + '%';\n    \n    // Update vertical divider position\n    verticalDivider.style.left = percent + '%';\n  }\n\n  // Handle mouse events\n  comparisonSlider.addEventListener('mousedown', (e) => {\n    isSliding = true;\n    startX = e.clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('mousemove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('mouseup', () => {\n    isSliding = false;\n  });\n\n  // Handle touch events\n  comparisonSlider.addEventListener('touchstart', (e) => {\n    isSliding = true;\n    startX = e.touches[0].clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('touchmove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.touches[0].clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('touchend', () => {\n    isSliding = false;\n  });\n\n  // Click anywhere in container to move slider\n  comparisonContainer.addEventListener('click', (e) => {\n    if (e.target.closest('.toggle-view') || e.target.closest('.slider-handle')) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const percent = (clickX / rect.width) * 100;\n    \n    updateSliderPosition(percent);\n  });\n\n  // Initialize with 50/50 split or restore previous position\n  updateSliderPosition(currentSliderPosition);\n}\n\n// Set view mode (split, before, after)\nfunction setViewMode(mode, resetPosition = true) {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  // Reset all buttons\n  viewSplitBtn.classList.remove('active');\n  viewBeforeBtn.classList.remove('active');\n  viewAfterBtn.classList.remove('active');\n  \n  switch (mode) {\n    case 'split':\n      viewSplitBtn.classList.add('active');\n      \n      // If resetPosition is true, set to 50/50 split; otherwise keep current position\n      if (resetPosition) {\n        currentSliderPosition = 50;\n      }\n      \n      // Position elements based on current slider position\n      originalImageContainer.style.clipPath = `inset(0 ${100 - currentSliderPosition}% 0 0)`;\n      verticalDivider.style.left = `${currentSliderPosition}%`;\n      comparisonSlider.style.left = `${currentSliderPosition}%`;\n      \n      // Make everything visible\n      comparisonSlider.style.display = 'block';\n      originalImageContainer.style.display = 'block';\n      verticalDivider.style.display = 'block'; // Show divider\n      break;\n      \n    case 'before':\n      viewBeforeBtn.classList.add('active');\n      \n      // Show full original image\n      originalImageContainer.style.clipPath = 'inset(0 0 0 0)';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      originalImageContainer.style.display = 'block';\n      break;\n      \n    case 'after':\n      viewAfterBtn.classList.add('active');\n      \n      // Hide original image completely\n      originalImageContainer.style.display = 'none';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      break;\n  }\n}\n\n// Export functions that may be needed by other modules\nexport {\n  setViewMode,\n  currentSliderPosition\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Define built-in presets\nconst builtInPresets = {\n  \"custom\": {\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0]\n  },\n  \"warm\": {\n    contrast: 1.1,\n    saturation: 0.9,\n    redBalance: 1.15,\n    greenBalance: 0.95,\n    blueBalance: 0.85,\n    shadowsShift: [0.08, 0.02, -0.05],\n    highlightsShift: [0.05, 0.0, -0.05]\n  },\n  \"cool\": {\n    contrast: 1.3,\n    saturation: 0.85,\n    redBalance: 0.9,\n    greenBalance: 1.0,\n    blueBalance: 1.2,\n    shadowsShift: [-0.03, 0.0, 0.08],\n    highlightsShift: [0.0, 0.0, 0.03]\n  },\n  \"bw\": {\n    contrast: 1.5,\n    saturation: 0.0,\n    redBalance: 0.33,\n    greenBalance: 0.33,\n    blueBalance: 0.33,\n    shadowsShift: [-0.05, -0.05, -0.05],\n    highlightsShift: [0.05, 0.05, 0.05]\n  },\n  \"film\": {\n    contrast: 0.9,\n    saturation: 0.8,\n    redBalance: 1.1,\n    greenBalance: 1.05,\n    blueBalance: 0.9,\n    shadowsShift: [0.1, 0.05, 0.0],\n    highlightsShift: [-0.02, -0.02, 0.05]\n  }\n};\n\n// Initialize user presets\nlet userPresets = {};\n\n// Initialize the Presets component\nexport function initPresets() {\n  console.log('Initializing Presets');\n  \n  // Initialize preset buttons\n  const presetButtons = document.querySelectorAll('.preset-btn');\n  \n  presetButtons.forEach(btn => {\n    btn.addEventListener('click', () => {\n      // Remove active class from all buttons\n      presetButtons.forEach(b => b.classList.remove('active'));\n      \n      // Add active class to clicked button\n      btn.classList.add('active');\n      \n      // Get preset id from button id\n      const presetId = btn.id.split('-')[1];\n      \n      // Apply the preset\n      applyPreset(presetId);\n    });\n  });\n  \n  // Load any saved user presets\n  loadUserPresets();\n}\n\n// Apply a preset by its ID\nfunction applyPreset(presetId) {\n  // Look for preset in built-in presets first, then user presets\n  const preset = builtInPresets[presetId] || userPresets[presetId];\n  \n  if (!preset) {\n    console.warn(`Preset '${presetId}' not found`);\n    return;\n  }\n  \n  console.log(`Applying preset: ${presetId}`);\n  \n  // Store the active preset ID\n  appState.activePresetId = presetId;\n  \n  // Apply preset to basic parameters\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {};\n  }\n  \n  // Copy preset values to app state\n  appState.currentLutParams.basic.contrast = preset.contrast;\n  appState.currentLutParams.basic.saturation = preset.saturation;\n  appState.currentLutParams.basic.redBalance = preset.redBalance;\n  appState.currentLutParams.basic.greenBalance = preset.greenBalance;\n  appState.currentLutParams.basic.blueBalance = preset.blueBalance;\n  \n  // Set shadows and highlights shift if present\n  if (preset.shadowsShift) {\n    appState.currentLutParams.basic.shadowsShift = [...preset.shadowsShift];\n  }\n  \n  if (preset.highlightsShift) {\n    appState.currentLutParams.basic.highlightsShift = [...preset.highlightsShift];\n  }\n  \n  // If advanced parameters are in the preset, apply them too\n  if (preset.advanced) {\n    applyAdvancedPreset(preset.advanced);\n  }\n  \n  // Update UI sliders to reflect new values\n  updateSlidersFromPreset();\n  \n  // Apply adjustments to image\n  applyImageAdjustments();\n}\n\n// Apply advanced preset parameters if present\nfunction applyAdvancedPreset(advancedParams) {\n  // Apply Lumetri-style parameters if they exist in the preset\n  if (advancedParams.temperature !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.temperature = advancedParams.temperature;\n  }\n  \n  if (advancedParams.tint !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.tint = advancedParams.tint;\n  }\n  \n  // Add more advanced parameters as needed\n}\n\n// Update UI sliders to reflect preset values\nfunction updateSlidersFromPreset() {\n  const params = appState.currentLutParams.basic;\n  \n  // Update basic sliders\n  updateSlider('contrast', params.contrast);\n  updateSlider('saturation', params.saturation);\n  updateSlider('red-balance', params.redBalance);\n  updateSlider('green-balance', params.greenBalance);\n  updateSlider('blue-balance', params.blueBalance);\n}\n\n// Helper to update a slider and its value display\nfunction updateSlider(sliderId, value) {\n  const slider = document.getElementById(sliderId);\n  const valueDisplay = document.getElementById(`${sliderId}-value`);\n  \n  if (slider) {\n    slider.value = value;\n  }\n  \n  if (valueDisplay) {\n    valueDisplay.textContent = value.toFixed(2);\n  }\n}\n\n// Save the current settings as a user preset\nexport function saveCurrentAsPreset(presetName) {\n  if (!presetName) return;\n  \n  // Create a preset from current settings\n  const newPreset = {\n    contrast: appState.currentLutParams.basic.contrast,\n    saturation: appState.currentLutParams.basic.saturation,\n    redBalance: appState.currentLutParams.basic.redBalance,\n    greenBalance: appState.currentLutParams.basic.greenBalance,\n    blueBalance: appState.currentLutParams.basic.blueBalance\n  };\n  \n  // Add shadows and highlights shift if present\n  if (appState.currentLutParams.basic.shadowsShift) {\n    newPreset.shadowsShift = [...appState.currentLutParams.basic.shadowsShift];\n  }\n  \n  if (appState.currentLutParams.basic.highlightsShift) {\n    newPreset.highlightsShift = [...appState.currentLutParams.basic.highlightsShift];\n  }\n  \n  // Add advanced parameters if in advanced mode\n  if (appState.activeMode === 'advanced' && appState.currentLutParams.lumetri) {\n    newPreset.advanced = {\n      temperature: appState.currentLutParams.lumetri.temperature,\n      tint: appState.currentLutParams.lumetri.tint,\n      // Add other advanced parameters\n    };\n  }\n  \n  // Save to user presets\n  userPresets[presetName] = newPreset;\n  \n  // Save to local storage\n  saveUserPresets();\n  \n  // Add the preset to UI\n  addPresetToUI(presetName);\n  \n  console.log(`Saved preset: ${presetName}`);\n}\n\n// Add a user preset to the UI\nfunction addPresetToUI(presetName) {\n  // This function would add a new preset button to the UI\n  // Implementation would depend on how you want to handle user presets in the UI\n  console.log(`Added preset to UI: ${presetName}`);\n}\n\n// Save user presets to local storage\nfunction saveUserPresets() {\n  try {\n    localStorage.setItem('lotsAppUserPresets', JSON.stringify(userPresets));\n  } catch (error) {\n    console.error('Failed to save user presets:', error);\n  }\n}\n\n// Load user presets from local storage\nfunction loadUserPresets() {\n  try {\n    const savedPresets = localStorage.getItem('lotsAppUserPresets');\n    if (savedPresets) {\n      userPresets = JSON.parse(savedPresets);\n      console.log('Loaded user presets:', Object.keys(userPresets));\n    }\n  } catch (error) {\n    console.error('Failed to load user presets:', error);\n  }\n}\n\n// Export functions and constants\nexport {\n  builtInPresets,\n  userPresets,\n  applyPreset\n};","// components/common/ui-elements.js\n// Import app state if needed\nimport { appState } from '../../app.js';\n\n// Initialize common UI elements\nexport function initUiElements() {\n  console.log('Initializing UI Elements');\n  \n  // Initialize modal functionality\n  initModals();\n  \n  // Initialize expandable sections\n  initExpandableSections();\n  \n  // Initialize window control buttons\n  initWindowControls();\n  \n  console.log('UI Elements initialization complete');\n}\n\n// Initialize modal dialogs\nfunction initModals() {\n  console.log('Setting up modal dialogs');\n  // Code Preview Modal\n  const viewCodeBtn = document.getElementById('view-code-btn');\n  const viewCodeBtnAdvanced = document.getElementById('view-code-btn-advanced');\n  const codeModal = document.getElementById('code-modal');\n  const closeModalBtn = document.getElementById('close-modal-btn');\n  \n  if (!viewCodeBtn) console.warn('View code button not found');\n  if (!viewCodeBtnAdvanced) console.warn('Advanced view code button not found');\n  if (!codeModal) console.warn('Code modal not found');\n  if (!closeModalBtn) console.warn('Close modal button not found');\n  \n  if (viewCodeBtn && codeModal) {\n    viewCodeBtn.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (viewCodeBtnAdvanced && codeModal) {\n    viewCodeBtnAdvanced.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (closeModalBtn) {\n    closeModalBtn.addEventListener('click', () => {\n      // Hide any open modal\n      const modals = document.querySelectorAll('.modal');\n      modals.forEach(modal => {\n        modal.style.display = 'none';\n      });\n    });\n  }\n  \n  // Close modals when clicking outside content\n  window.addEventListener('click', (e) => {\n    const modals = document.querySelectorAll('.modal');\n    modals.forEach(modal => {\n      if (e.target === modal) {\n        modal.style.display = 'none';\n      }\n    });\n  });\n}\n\n// Update LUT preview in code modal\nexport function updateLUTPreview(fullPreview = false) {\n  const lutPreview = document.getElementById('lut-preview');\n  if (!lutPreview) {\n    console.warn('LUT preview element not found');\n    return;\n  }\n  \n  // Get LUT content from generator (to be implemented)\n  let lutContent = \"# LUT Preview will be generated here\";\n  \n  // In the future, we'll call the actual LUT generator:\n  if (window.generateCubeLUT) {\n    lutContent = window.generateCubeLUT();\n  }\n  \n  if (fullPreview) {\n    // Show the full LUT content in the modal\n    lutPreview.textContent = lutContent;\n  } else {\n    // Just show a preview sample\n    lutPreview.textContent = lutContent.slice(0, 500) + '...';\n  }\n}\n\n// Initialize expandable sections - FIXED VERSION\nfunction initExpandableSections() {\n  console.log('Initializing expandable sections');\n  \n  // Define sections to initialize as expanded or collapsed\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section', expanded: true },\n    { toggle: 'creative-toggle', content: 'creative-section', expanded: false },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section', expanded: false },\n    { toggle: 'curves-toggle', content: 'curves-section', expanded: false }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (!toggle) {\n      console.error(`Toggle element not found: #${section.toggle}`);\n      return;\n    }\n    \n    if (!content) {\n      console.error(`Content element not found: #${section.content}`);\n      return;\n    }\n    \n    console.log(`Setting up section: ${section.toggle} (expanded: ${section.expanded})`);\n    \n    // Set initial state\n    if (section.expanded) {\n      toggle.classList.add('expanded');\n      content.classList.add('expanded');\n      content.style.display = 'block';\n      content.style.maxHeight = 'none'; // Allow full height initially\n    } else {\n      toggle.classList.remove('expanded');\n      content.classList.remove('expanded');\n      content.style.display = 'none';\n      content.style.maxHeight = '0';\n    }\n    \n    // Add click event listener\n    toggle.addEventListener('click', () => {\n      console.log(`Toggle clicked for: ${section.toggle}`);\n      \n      // Toggle expanded state\n      const isExpanding = !toggle.classList.contains('expanded');\n      \n      // Update toggle class\n      toggle.classList.toggle('expanded');\n      \n      // Update content\n      if (isExpanding) {\n        // Expanding\n        content.style.display = 'block';\n        // Use setTimeout to allow display change to take effect first\n        setTimeout(() => {\n          content.classList.add('expanded');\n          content.style.maxHeight = 'none';\n        }, 10);\n        console.log(`Expanding section: ${section.content}`);\n      } else {\n        // Collapsing\n        content.classList.remove('expanded');\n        content.style.maxHeight = '0';\n        // Use setTimeout to allow transition to complete before hiding\n        setTimeout(() => {\n          content.style.display = 'none';\n        }, 300); // Match the transition duration in CSS\n        console.log(`Collapsing section: ${section.content}`);\n      }\n    });\n  });\n}\n\n// Initialize window control buttons for Electron\nfunction initWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Create a simple toast notification\nexport function showToast(message, type = 'info', duration = 3000) {\n  console.log(`Toast notification: ${message} (${type})`);\n  \n  // Create toast container if it doesn't exist\n  let toastContainer = document.querySelector('.toast-container');\n  if (!toastContainer) {\n    toastContainer = document.createElement('div');\n    toastContainer.className = 'toast-container';\n    document.body.appendChild(toastContainer);\n  }\n  \n  // Create toast element\n  const toast = document.createElement('div');\n  toast.className = `toast toast-${type}`;\n  toast.textContent = message;\n  \n  // Add to container\n  toastContainer.appendChild(toast);\n  \n  // Trigger animation\n  setTimeout(() => {\n    toast.classList.add('show');\n  }, 10);\n  \n  // Remove after duration\n  setTimeout(() => {\n    toast.classList.remove('show');\n    \n    // Remove from DOM after animation completes\n    setTimeout(() => {\n      toastContainer.removeChild(toast);\n    }, 300);\n  }, duration);\n  \n  return toast;\n}\n\n// Create a confirmation dialog\nexport function showConfirmDialog(message, onConfirm, onCancel) {\n  // Create dialog\n  const dialogOverlay = document.createElement('div');\n  dialogOverlay.className = 'dialog-overlay';\n  \n  const dialogBox = document.createElement('div');\n  dialogBox.className = 'dialog-box';\n  \n  const messageEl = document.createElement('p');\n  messageEl.textContent = message;\n  \n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.className = 'dialog-buttons';\n  \n  const confirmBtn = document.createElement('button');\n  confirmBtn.className = 'primary';\n  confirmBtn.textContent = 'Confirm';\n  \n  const cancelBtn = document.createElement('button');\n  cancelBtn.textContent = 'Cancel';\n  \n  // Add elements to DOM\n  buttonsContainer.appendChild(cancelBtn);\n  buttonsContainer.appendChild(confirmBtn);\n  \n  dialogBox.appendChild(messageEl);\n  dialogBox.appendChild(buttonsContainer);\n  \n  dialogOverlay.appendChild(dialogBox);\n  document.body.appendChild(dialogOverlay);\n  \n  // Add event listeners\n  confirmBtn.addEventListener('click', () => {\n    if (onConfirm) onConfirm();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  cancelBtn.addEventListener('click', () => {\n    if (onCancel) onCancel();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  // Also close on overlay click\n  dialogOverlay.addEventListener('click', (e) => {\n    if (e.target === dialogOverlay) {\n      if (onCancel) onCancel();\n      document.body.removeChild(dialogOverlay);\n    }\n  });\n  \n  return dialogOverlay;\n}","// services/file-service.js\n// Import app state\nimport { appState } from '../app.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the file service\nexport function initFileService() {\n  console.log('Initializing File Service');\n}\n\n// Open an image file\nexport async function openImageFile() {\n  console.log('Opening image file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const imagePath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp', 'tiff', 'tif'] }]\n      });\n      \n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        return `file://${imagePath}`;\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return await fallbackFileUpload();\n    }\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    return await fallbackFileUpload();\n  }\n  \n  return null;\n}\n\n// Fallback file upload function using HTML input for browser context\nexport function fallbackFileUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve(event.target.result);\n        };\n        \n        reader.readAsDataURL(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}\n\n// Save a LUT file\nexport async function saveLutFile(content, defaultFilename = 'lut.cube') {\n  console.log('Saving LUT file');\n  \n  try {\n    // Format the filename\n    const filename = defaultFilename.endsWith('.cube') ? defaultFilename : `${defaultFilename}.cube`;\n    \n    // If we're in Electron environment\n    if (window.electronAPI && typeof window.electronAPI.saveLut === 'function') {\n      const filePath = await window.electronAPI.saveLut({\n        content,\n        defaultPath: filename\n      });\n      \n      if (filePath) {\n        showToast(`LUT saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([content], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`LUT downloaded as ${filename}`, 'success');\n      return filename;\n    }\n  } catch (error) {\n    console.error('Error saving LUT:', error);\n    showToast('Failed to save LUT file', 'error');\n    return null;\n  }\n}\n\n// Load a LUT file\nexport async function loadLutFile() {\n  console.log('Loading LUT file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const lutPath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'CUBE Files', extensions: ['cube'] }]\n      });\n      \n      if (lutPath) {\n        // In a real implementation, we would read the file content here\n        console.log(\"Selected LUT:\", lutPath);\n        \n        // Placeholder for actual file reading logic\n        // The content would be returned and parsed elsewhere\n        return {\n          path: lutPath,\n          filename: lutPath.split('/').pop(),\n          content: \"# Placeholder for actual LUT content\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return null;\n    }\n  } else {\n    // Browser environment\n    return await fallbackLutUpload();\n  }\n  \n  return null;\n}\n\n// Fallback LUT upload function using HTML input for browser context\nexport function fallbackLutUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.cube';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected LUT file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve({\n            filename: file.name,\n            content: event.target.result\n          });\n        };\n        \n        reader.readAsText(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}","// services/lut-generator.js\n// Import app state and utilities\nimport { appState } from '../app.js';\nimport { applyContrast } from '../components/basic-corrections/basic-corrections.js';\nimport { applyFadedFilm } from '../components/creative/creative-effects.js';\nimport { applyColorWheels } from '../components/color-wheels/color-wheels.js';\nimport { interpolateCurve, isLinearCurve } from '../components/curves/curves-panel.js';\n\n// Initialize the LUT generator service\nexport function initLutGenerator() {\n  console.log('Initializing LUT Generator Service');\n  \n  // Make the generator available globally\n  window.generateCubeLUT = generateCubeLUT;\n}\n\n// Generate a CUBE format LUT based on current parameters\nexport function generateCubeLUT() {\n  const lutParams = appState.currentLutParams;\n  const size = lutParams.size || 32;\n  let content = '';\n  \n  // Header\n  content += `# ${lutParams.title}\\n`;\n  content += '# Generated by LOTS App\\n\\n';\n  content += `LUT_3D_SIZE ${size}\\n`;\n  content += 'DOMAIN_MIN 0.0 0.0 0.0\\n';\n  content += 'DOMAIN_MAX 1.0 1.0 1.0\\n\\n';\n  \n  // Generate the 3D LUT entries\n  const step = 1.0 / (size - 1);\n  \n  for (let b = 0; b < size; b++) {\n    for (let g = 0; g < size; g++) {\n      for (let r = 0; r < size; r++) {\n        // Calculate normalized RGB values (0.0 to 1.0)\n        let redValue = r * step;\n        let greenValue = g * step;\n        let blueValue = b * step;\n        \n        // Apply adjustments based on the current mode\n        if (appState.activeMode === 'basic') {\n          const result = applyBasicLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        } else {\n          const result = applyAdvancedLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        }\n        \n        // Clamp values to valid range\n        redValue = Math.min(1.0, Math.max(0.0, redValue));\n        greenValue = Math.min(1.0, Math.max(0.0, greenValue));\n        blueValue = Math.min(1.0, Math.max(0.0, blueValue));\n        \n        // Add the entry to the LUT\n        content += `${redValue.toFixed(6)} ${greenValue.toFixed(6)} ${blueValue.toFixed(6)}\\n`;\n      }\n    }\n  }\n  \n  return content;\n}\n\n// Apply basic mode adjustments to a single color point\nexport function applyBasicLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams.basic || {};\n  \n  // Apply contrast\n  r = applyContrast(r, params.contrast || 1.0);\n  g = applyContrast(g, params.contrast || 1.0);\n  b = applyContrast(b, params.contrast || 1.0);\n  \n  // Apply color balance\n  r *= params.redBalance || 1.0;\n  g *= params.greenBalance || 1.0;\n  b *= params.blueBalance || 1.0;\n  \n  // Apply shadow/highlight adjustments\n  if (params.shadowsShift && params.highlightsShift) {\n    let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n    let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n    \n    r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n    g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n    b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n  }\n  \n  // Apply saturation\n  if (params.saturation !== undefined && params.saturation !== 1.0) {\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    r = luminance + params.saturation * (r - luminance);\n    g = luminance + params.saturation * (g - luminance);\n    b = luminance + params.saturation * (b - luminance);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply advanced mode adjustments to a single color point\nexport function applyAdvancedLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams;\n  \n  // 1. Apply temperature and tint\n  if (params.lumetri && (params.lumetri.temperature !== 0 || params.lumetri.tint !== 0)) {\n    const tempResult = applyTemperatureAndTint(\n      r, g, b, \n      params.lumetri.temperature / 150, \n      params.lumetri.tint / 150\n    );\n    r = tempResult.r;\n    g = tempResult.g;\n    b = tempResult.b;\n  }\n  \n  // 2. Apply exposure and contrast\n  if (params.lumetri) {\n    // Apply exposure\n    if (params.lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, params.lumetri.exposure / 150);\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (params.lumetri.contrast !== 0) {\n      const contrastValue = 1 + (params.lumetri.contrast / 150);\n      r = applyContrast(r, contrastValue);\n      g = applyContrast(g, contrastValue);\n      b = applyContrast(b, contrastValue);\n    }\n  }\n  \n  // 3. Apply highlights, shadows, whites, blacks adjustments\n  if (params.lumetri) {\n    const toneResult = applyToneAdjustments(\n      r, g, b,\n      params.lumetri.highlights / 150,\n      params.lumetri.shadows / 150,\n      params.lumetri.whites / 150,\n      params.lumetri.blacks / 150\n    );\n    r = toneResult.r;\n    g = toneResult.g;\n    b = toneResult.b;\n  }\n  \n  // 4. Apply color wheels tinting\n  if (params.colorWheels) {\n    const shadowTint = params.colorWheels.shadowTint;\n    const highlightTint = params.colorWheels.highlightTint;\n    const tintBalance = params.colorWheels.tintBalance / 150;\n    \n    if (shadowTint.r !== 128 || shadowTint.g !== 128 || shadowTint.b !== 128 ||\n        highlightTint.r !== 128 || highlightTint.g !== 128 || highlightTint.b !== 128 ||\n        tintBalance !== 0) {\n      \n      const colorWheelResult = applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance);\n      r = colorWheelResult.r;\n      g = colorWheelResult.g;\n      b = colorWheelResult.b;\n    }\n  }\n  \n  // 5. Apply curves\n  if (params.curves) {\n    // Apply RGB curve first\n    const rgbPoints = params.curves.rgb;\n    if (rgbPoints) {\n      r = interpolateCurve(rgbPoints, r);\n      g = interpolateCurve(rgbPoints, g);\n      b = interpolateCurve(rgbPoints, b);\n    }\n    \n    // Apply individual channel curves if not linear\n    if (params.curves.red && !isLinearCurve(params.curves.red)) {\n      r = interpolateCurve(params.curves.red, r);\n    }\n    \n    if (params.curves.green && !isLinearCurve(params.curves.green)) {\n      g = interpolateCurve(params.curves.green, g);\n    }\n    \n    if (params.curves.blue && !isLinearCurve(params.curves.blue)) {\n      b = interpolateCurve(params.curves.blue, b);\n    }\n  }\n  \n  // 6. Apply creative effects (vibrance, saturation, faded film)\n  if (params.creative) {\n    // Apply vibrance\n    if (params.creative.vibrance !== 0) {\n      const vibranceAmount = params.creative.vibrance / 150;\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      const maxChannel = Math.max(r, g, b);\n      const minChannel = Math.min(r, g, b);\n      const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n      const vibranceEffect = vibranceAmount * (1 - saturationLevel);\n      \n      r = luminance + (r - luminance) * (1 + vibranceEffect);\n      g = luminance + (g - luminance) * (1 + vibranceEffect);\n      b = luminance + (b - luminance) * (1 + vibranceEffect);\n    }\n    \n    // Apply faded film effect\n    if (params.creative.fadedFilm > 0) {\n      const fadedResult = applyFadedFilm(r, g, b, params.creative.fadedFilm / 100);\n      r = fadedResult.r;\n      g = fadedResult.g;\n      b = fadedResult.b;\n    }\n  }\n  \n  return { r, g, b };\n}\n\n// Apply temperature and tint adjustments\nexport function applyTemperatureAndTint(r, g, b, temperature, tint) {\n  // Temperature: blue-yellow shift\n  // Positive = cooler (more blue), Negative = warmer (more yellow)\n  const tempFactor = temperature;\n  \n  // Tint: green-magenta shift\n  // Positive = more magenta, Negative = more green\n  const tintFactor = tint;\n  \n  // Apply temperature (blue-yellow balance)\n  if (tempFactor < 0) {\n    // Warmer: boost red/green, reduce blue\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  } else if (tempFactor > 0) {\n    // Cooler: boost blue, reduce red/green\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  }\n  \n  // Apply tint (green-magenta balance)\n  if (tintFactor > 0) {\n    // More magenta: boost red and blue, reduce green\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  } else if (tintFactor < 0) {\n    // More green: boost green, reduce red and blue\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply tone adjustments (highlights, shadows, whites, blacks)\nexport function applyToneAdjustments(r, g, b, highlights, shadows, whites, blacks) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Apply highlights adjustment (affects brighter areas)\n  let highlightEffect = Math.pow(luminance, 2) * highlights;\n  \n  // Apply shadows adjustment (affects darker areas)\n  let shadowEffect = Math.pow(1 - luminance, 2) * shadows;\n  \n  // Apply whites adjustment (affects the brightest areas)\n  let whitesEffect = Math.pow(luminance, 4) * whites;\n  \n  // Apply blacks adjustment (affects the darkest areas)\n  let blacksEffect = Math.pow(1 - luminance, 4) * blacks;\n  \n  // Combine all adjustments\n  const totalEffect = highlightEffect + shadowEffect + whitesEffect + blacksEffect;\n  \n  // Apply the combined effect to RGB channels\n  r += totalEffect;\n  g += totalEffect;\n  b += totalEffect;\n  \n  return { r, g, b };\n}","// services/export-service.js\n// Import app state and services\nimport { appState } from '../app.js';\nimport { saveLutFile } from './file-service.js';\nimport { generateCubeLUT } from './lut-generator.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the export service\nexport function initExportService() {\n  console.log('Initializing Export Service');\n  \n  // Set up export buttons\n  setupExportButtons();\n}\n\n// Set up export button click handlers\nfunction setupExportButtons() {\n  const saveLutBtn = document.getElementById('save-lut-btn');\n  const saveLutBtnAdvanced = document.getElementById('save-lut-btn-advanced');\n  \n  if (saveLutBtn) {\n    saveLutBtn.addEventListener('click', handleExportLut);\n  }\n  \n  if (saveLutBtnAdvanced) {\n    saveLutBtnAdvanced.addEventListener('click', handleExportLut);\n  }\n}\n\n// Handle the LUT export button click\nexport async function handleExportLut() {\n  console.log('Exporting LUT');\n  \n  try {\n    // Generate the LUT content\n    const lutContent = generateCubeLUT();\n    \n    // Format filename from title\n    const defaultFilename = formatFilename(appState.currentLutParams.title);\n    \n    // Save the file\n    const result = await saveLutFile(lutContent, defaultFilename);\n    \n    if (result) {\n      console.log('LUT exported successfully');\n    } else {\n      console.warn('LUT export was cancelled or failed');\n    }\n  } catch (error) {\n    console.error('Error exporting LUT:', error);\n    showToast('Failed to export LUT: ' + error.message, 'error');\n  }\n}\n\n// Format a filename from the LUT title\nexport function formatFilename(title) {\n  if (!title) return 'lut.cube';\n  \n  // Replace spaces with underscores and remove special characters\n  let filename = title.replace(/\\s+/g, '_')\n                      .replace(/[^a-zA-Z0-9_-]/g, '')\n                      .toLowerCase();\n  \n  // Add .cube extension if not present\n  if (!filename.endsWith('.cube')) {\n    filename += '.cube';\n  }\n  \n  return filename;\n}\n\n// Export the current image with adjustments applied\nexport async function exportProcessedImage() {\n  console.log('Exporting processed image');\n  \n  if (!appState.processedImageElement) {\n    showToast('No processed image to export', 'error');\n    return null;\n  }\n  \n  try {\n    // Get the processed image source (already contains the applied adjustments)\n    const imageDataUrl = appState.processedImageElement.src;\n    \n    // In Electron environment, we would save the file using Electron APIs\n    if (window.electronAPI && typeof window.electronAPI.saveImage === 'function') {\n      const defaultName = 'processed_image.jpg';\n      \n      const filePath = await window.electronAPI.saveImage({\n        dataUrl: imageDataUrl,\n        defaultPath: defaultName\n      });\n      \n      if (filePath) {\n        showToast(`Image saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const a = document.createElement('a');\n      a.href = imageDataUrl;\n      a.download = 'processed_image.jpg';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      \n      showToast('Image downloaded', 'success');\n      return 'processed_image.jpg';\n    }\n  } catch (error) {\n    console.error('Error exporting image:', error);\n    showToast('Failed to export image', 'error');\n    return null;\n  }\n}\n\n// Export all settings as a preset file\nexport function exportPreset() {\n  console.log('Exporting preset');\n  \n  try {\n    // Create a preset object with current settings\n    const preset = {\n      name: appState.currentLutParams.title || 'Unnamed Preset',\n      basic: { ...appState.currentLutParams.basic },\n      advanced: {\n        lumetri: appState.currentLutParams.lumetri ? { ...appState.currentLutParams.lumetri } : null,\n        colorWheels: appState.currentLutParams.colorWheels ? { ...appState.currentLutParams.colorWheels } : null,\n        curves: appState.currentLutParams.curves ? { ...appState.currentLutParams.curves } : null\n      },\n      version: '1.0'\n    };\n    \n    // Convert to JSON\n    const presetJson = JSON.stringify(preset, null, 2);\n    \n    // Format filename\n    const defaultFilename = `${formatFilename(preset.name).replace('.cube', '')}.lotspreset`;\n    \n    // Save the file using Electron or browser download\n    if (window.electronAPI && typeof window.electronAPI.savePreset === 'function') {\n      return window.electronAPI.savePreset({\n        content: presetJson,\n        defaultPath: defaultFilename\n      }).then(filePath => {\n        if (filePath) {\n          showToast(`Preset saved to: ${filePath}`, 'success');\n          return filePath;\n        }\n        return null;\n      });\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([presetJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = defaultFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`Preset downloaded as ${defaultFilename}`, 'success');\n      return Promise.resolve(defaultFilename);\n    }\n  } catch (error) {\n    console.error('Error exporting preset:', error);\n    showToast('Failed to export preset', 'error');\n    return Promise.resolve(null);\n  }\n}","// models/image-processor.js\n// Import necessary functions from other modules\nimport { appState } from '../app.js';\nimport { applyBasicCorrections } from '../components/basic-corrections/basic-corrections.js';\nimport { applyCreativeEffects } from '../components/creative/creative-effects.js';\nimport { applyColorWheelAdjustments } from '../components/color-wheels/color-wheels.js';\nimport { applyCurvesToImage } from '../components/curves/curves-panel.js';\n\n// Process an image with current adjustments in basic mode\nexport function processImageBasic(originalImage) {\n  console.log('Processing image with basic adjustments');\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply basic corrections\n    applyBasicCorrections(imageData);\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing image:', error);\n    return null;\n  }\n}\n\n// Process an image with current adjustments in advanced mode\nexport function processImageAdvanced(originalImage) {\n  console.log('Processing image with advanced adjustments');\n  console.log('Advanced parameters:', JSON.stringify(appState.currentLutParams.lumetri, null, 2));\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply adjustments in sequence\n    console.log('Applying advanced adjustments in sequence');\n    \n    // 1. First apply basic corrections as a base\n    console.log('1. Applying basic corrections');\n    applyBasicCorrections(imageData);\n    \n    // 2. Apply Lumetri adjustments\n    console.log('2. Applying Lumetri adjustments');\n    applyLumetriAdjustments(imageData);\n    \n    // 3. Apply color wheels adjustments\n    console.log('3. Applying color wheels adjustments');\n    applyColorWheelAdjustments(imageData);\n    \n    // 4. Apply creative effects (faded film, vibrance)\n    console.log('4. Applying creative effects');\n    applyCreativeEffects(imageData);\n    \n    // 5. Apply curves adjustments\n    console.log('5. Applying curves adjustments');\n    if (appState.curvesPanel) {\n      applyCurvesToImage(imageData);\n    } else {\n      console.warn('Curves panel not available, skipping curves adjustments');\n    }\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    console.log('Advanced processing complete');\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing advanced image:', error);\n    return null;\n  }\n}\n\n// Apply Lumetri-style adjustments to image data\nfunction applyLumetriAdjustments(imageData) {\n  if (!appState.currentLutParams.lumetri) {\n    console.warn('No Lumetri parameters available');\n    return imageData;\n  }\n  \n  const lumetri = appState.currentLutParams.lumetri;\n  const data = imageData.data;\n  \n  console.log('Applying Lumetri adjustments with params:', \n    `exposure: ${lumetri.exposure}, `,\n    `contrast: ${lumetri.contrast}, `,\n    `highlights: ${lumetri.highlights}, `,\n    `shadows: ${lumetri.shadows}, `,\n    `whites: ${lumetri.whites}, `,\n    `blacks: ${lumetri.blacks}, `,\n    `temperature: ${lumetri.temperature}, `,\n    `tint: ${lumetri.tint}`);\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply exposure (exponential)\n    if (lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, lumetri.exposure / 150); // Adjust scaling for new range\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (lumetri.contrast !== 0) {\n      const contrastFactor = 1 + (lumetri.contrast / 150); // Scale from -150..150 to appropriate range\n      const midpoint = 0.5;\n      r = midpoint + (r - midpoint) * contrastFactor;\n      g = midpoint + (g - midpoint) * contrastFactor;\n      b = midpoint + (b - midpoint) * contrastFactor;\n    }\n    \n    // Calculate luminance for shadows/highlights adjustments\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    \n    // Apply highlights adjustments\n    if (lumetri.highlights !== 0) {\n      const highlightInfluence = Math.pow(luminance, 2); // Affects brighter areas more\n      const adjustment = (lumetri.highlights / 150) * 0.5; // Scale appropriately for new range\n      r += adjustment * highlightInfluence;\n      g += adjustment * highlightInfluence;\n      b += adjustment * highlightInfluence;\n    }\n    \n    // Apply shadows adjustments\n    if (lumetri.shadows !== 0) {\n      const shadowInfluence = Math.pow(1 - luminance, 2); // Affects darker areas more\n      const adjustment = (lumetri.shadows / 150) * 0.5; // Scale appropriately for new range\n      r += adjustment * shadowInfluence;\n      g += adjustment * shadowInfluence;\n      b += adjustment * shadowInfluence;\n    }\n    \n    // Apply whites/blacks adjustments\n    if (lumetri.whites !== 0) {\n      const whitesInfluence = Math.pow(luminance, 4); // Affects only the brightest areas\n      const adjustment = (lumetri.whites / 150) * 0.5; // Scale for new range\n      r += adjustment * whitesInfluence;\n      g += adjustment * whitesInfluence;\n      b += adjustment * whitesInfluence;\n    }\n    \n    if (lumetri.blacks !== 0) {\n      const blacksInfluence = Math.pow(1 - luminance, 4); // Affects only the darkest areas\n      const adjustment = (lumetri.blacks / 150) * 0.5; // Scale for new range\n      r += adjustment * blacksInfluence;\n      g += adjustment * blacksInfluence;\n      b += adjustment * blacksInfluence;\n    }\n    \n    // Apply temperature and tint\n    if (lumetri.temperature !== 0 || lumetri.tint !== 0) {\n      // Temperature: blue-yellow shift\n      const temp = lumetri.temperature / 150; // Scale to -1..1 for new range\n      if (temp < 0) {\n        // Warmer (more yellow)\n        r *= (1 - temp * 0.2);\n        g *= (1 - temp * 0.1);\n        b *= (1 + temp * 0.3);\n      } else {\n        // Cooler (more blue)\n        r *= (1 - temp * 0.2);\n        g *= (1 - temp * 0.1);\n        b *= (1 + temp * 0.3);\n      }\n      \n      // Tint: green-magenta shift\n      const tintVal = lumetri.tint / 150; // Scale to -1..1 for new range\n      if (tintVal > 0) {\n        // More magenta\n        r *= (1 + tintVal * 0.1);\n        g *= (1 - tintVal * 0.1);\n        b *= (1 + tintVal * 0.1);\n      } else {\n        // More green\n        r *= (1 + tintVal * 0.1);\n        g *= (1 - tintVal * 0.1);\n        b *= (1 + tintVal * 0.1);\n      }\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Process the image based on current app mode\nexport function processImage(originalImage) {\n  console.log(`Processing image in ${appState.activeMode} mode`);\n  \n  if (appState.activeMode === 'basic') {\n    return processImageBasic(originalImage);\n  } else {\n    return processImageAdvanced(originalImage);\n  }\n}\n\n// Apply the current adjustments to the displayed image\nexport function applyAdjustmentsToImage() {\n  const originalImage = appState.originalImageElement;\n  const processedImage = appState.processedImageElement;\n  \n  if (!originalImage || !processedImage) {\n    console.warn('Image elements not available');\n    return;\n  }\n  \n  console.log('Applying adjustments to image');\n  \n  // Process the image\n  const processedImageUrl = processImage(originalImage);\n  \n  if (processedImageUrl) {\n    // Update the processed image with the new data\n    processedImage.src = processedImageUrl;\n    console.log('Processed image updated successfully');\n  } else {\n    console.error('Failed to process image');\n  }\n}\n\n// Export the image processing functions\nexport default {\n  processImageBasic,\n  processImageAdvanced,\n  processImage,\n  applyAdjustmentsToImage\n};","// Import styles\nimport './styles/compare.css';\nimport './styles/base.css';\nimport './styles/layout.css';\nimport './styles/components.css';\nimport './styles/tools.css';\nimport './styles/themes.css';\nimport './styles/animations.css';\n\n// Import components\nimport { initCurvesPanel } from './components/curves/curves-panel.js';\nimport { initBasicCorrections, setupAdvancedControls } from './components/basic-corrections/basic-corrections.js';\nimport { initCreativeEffects } from './components/creative/creative-effects.js';\nimport { initColorWheels } from './components/color-wheels/color-wheels.js';\nimport { initImageComparison } from './components/image-preview/image-comparison.js';\nimport { initPreviewController } from './components/image-preview/preview-controller.js';\nimport { initPresets } from './components/presets/presets.js';\nimport { initUiElements } from './components/common/ui-elements.js';\n\n// Import services\nimport { initFileService } from './services/file-service.js';\nimport { initLutGenerator } from './services/lut-generator.js';\nimport { initExportService } from './services/export-service.js';\n\n// Import image processing utilities\nimport { processImage, applyAdjustmentsToImage } from './models/image-processor.js';\n\n// App state\nlet appState = {\n  activeMode: 'basic', // 'basic' or 'advanced'\n  originalImage: null,\n  processedImage: null,\n  currentLutParams: {\n    // Basic parameters\n    size: 32,\n    title: \"Signature Look\",\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0],\n    \n    // Advanced parameters will be added by the respective modules\n    lumetri: {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    }\n  }\n};\n\n// Initialize the application\nfunction initApp() {\n  console.log('LOTS App initializing...');\n  \n  // Make app state available globally for modules\n  window.appState = appState;\n  \n  // Initialize UI components\n  initUiElements();\n  initBasicCorrections();\n  initCreativeEffects();\n  initColorWheels();\n  initCurvesPanel();\n  initImageComparison();\n  initPreviewController();\n  initPresets();\n  \n  // Initialize services\n  initFileService();\n  initLutGenerator();\n  initExportService();\n  \n  // Set up mode toggle\n  setupModeToggle();\n  \n  // Set up window control buttons\n  setupWindowControls();\n  \n  console.log('LOTS App initialized successfully');\n}\n\n// Set up mode toggle (basic/advanced)\nfunction setupModeToggle() {\n  console.log('Setting up mode toggle...');\n  const modeToggle = document.getElementById('mode-toggle');\n  const basicControls = document.getElementById('basic-controls');\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (!modeToggle) {\n    console.error('Mode toggle element not found!');\n    return;\n  }\n  \n  if (!basicControls) {\n    console.error('Basic controls element not found!');\n    return;\n  }\n  \n  if (!advancedControls) {\n    console.error('Advanced controls element not found!');\n    return;\n  }\n  \n  console.log('Mode toggle elements found, adding event listener...');\n  \n  modeToggle.addEventListener('change', function() {\n    const isAdvancedMode = this.checked;\n    console.log(`Mode toggle changed. Advanced mode: ${isAdvancedMode}`);\n    \n    appState.activeMode = isAdvancedMode ? 'advanced' : 'basic';\n    \n    console.log(`Switching to ${appState.activeMode} mode`);\n    console.log(`Basic controls display: ${isAdvancedMode ? 'none' : 'block'}`);\n    console.log(`Advanced controls display: ${isAdvancedMode ? 'block' : 'none'}`);\n    \n    basicControls.style.display = isAdvancedMode ? 'none' : 'block';\n    advancedControls.style.display = isAdvancedMode ? 'block' : 'none';\n    \n    // When switching to advanced mode, ensure all advanced sections are properly initialized\n    if (isAdvancedMode && typeof setupAdvancedControls === 'function') {\n      try {\n        console.log('Setting up advanced controls...');\n        setupAdvancedControls();\n        console.log('Advanced controls setup complete');\n      } catch (error) {\n        console.error('Error setting up advanced controls:', error);\n      }\n    }\n    \n    // Apply current image adjustments with the new mode\n    if (appState.originalImage && appState.processedImage) {\n      console.log('Applying image adjustments after mode switch');\n      applyImageAdjustments();\n    }\n  });\n  \n  console.log('Mode toggle setup completed');\n}\n\n// Set up window control buttons for Electron\nfunction setupWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Apply adjustments to image based on current mode and parameters\nfunction applyImageAdjustments() {\n  if (!appState.originalImage) {\n    console.warn('No original image to process');\n    return;\n  }\n  \n  console.log(`Applying image adjustments in ${appState.activeMode} mode`);\n  \n  // Actually process the image instead of just logging\n  try {\n    // Use the image processor to apply adjustments\n    const processedImageUrl = processImage(appState.originalImageElement);\n    \n    // Update the processed image with the new data\n    if (processedImageUrl && appState.processedImageElement) {\n      appState.processedImageElement.src = processedImageUrl;\n      console.log('Processed image updated');\n    } else {\n      console.warn('Failed to update processed image');\n    }\n  } catch (error) {\n    console.error('Error processing image:', error);\n  }\n}\n\n// In app.js, add a centralized section toggle function\nfunction setupAllSectionToggles() {\n  const toggles = document.querySelectorAll('.lumetri-section h3');\n  \n  toggles.forEach(toggle => {\n    // Remove any existing click listeners\n    const clone = toggle.cloneNode(true);\n    toggle.parentNode.replaceChild(clone, toggle);\n    \n    // Get the associated content section\n    const content = clone.nextElementSibling;\n    if (!content || !content.classList.contains('section-content')) {\n      console.error('Missing content section for toggle:', clone.id);\n      return;\n    }\n    \n    // Add new click listener\n    clone.addEventListener('click', () => {\n      console.log(`Toggle clicked for: ${clone.id} (centralized handler)`);\n      clone.classList.toggle('expanded');\n      content.classList.toggle('expanded');\n      \n      // Force redraw\n      content.offsetHeight;\n    });\n  });\n\n\n// Add this debugging code to app.js (anywhere after DOM load)\nfunction debugSections() {\n  console.log(\"======= DEBUG SECTIONS =======\");\n  \n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section' },\n    { toggle: 'creative-toggle', content: 'creative-section' },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section' },\n    { toggle: 'curves-toggle', content: 'curves-section' }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    console.log(`Toggle [${section.toggle}]: ${toggle ? 'Found' : 'NOT FOUND'}`);\n    console.log(`Content [${section.content}]: ${content ? 'Found' : 'NOT FOUND'}`);\n    \n    if (toggle && content) {\n      console.log(`- Toggle has 'expanded' class: ${toggle.classList.contains('expanded')}`);\n      console.log(`- Content has 'expanded' class: ${content.classList.contains('expanded')}`);\n      console.log(`- Content style.maxHeight: ${content.style.maxHeight}`);\n      console.log(`- Content offsetHeight: ${content.offsetHeight}px`);\n      console.log(`- Content computedStyle.maxHeight: ${window.getComputedStyle(content).maxHeight}`);\n      console.log(`- Content style.display: ${window.getComputedStyle(content).display}`);\n    }\n  });\n  \n  console.log(\"============================\");\n}\n\n// Call this debugging function after initialization\nsetTimeout(debugSections, 1000);\n\n\n\n// Add this to app.js or create a new file called section-fix.js\nfunction fixSectionToggles() {\n  // Remove all existing event listeners by cloning nodes\n  function removeExistingListeners(elementId) {\n    const element = document.getElementById(elementId);\n    if (!element) return null;\n    \n    const clone = element.cloneNode(true);\n    element.parentNode.replaceChild(clone, element);\n    return clone;\n  }\n  \n  // Get sections we need to fix\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section' },\n    { toggle: 'creative-toggle', content: 'creative-section' },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section' },\n    { toggle: 'curves-toggle', content: 'curves-section' }\n  ];\n  \n  // Apply the fix to each section\n  sections.forEach(section => {\n    const toggle = removeExistingListeners(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (!toggle || !content) {\n      console.error(`Cannot fix section - missing elements: ${section.toggle} or ${section.content}`);\n      return;\n    }\n    \n    // Set initial state directly\n    if (toggle.classList.contains('expanded')) {\n      content.style.display = 'block';\n      content.style.maxHeight = '1000px';\n      content.style.opacity = '1';\n    } else {\n      content.style.display = 'none';\n      content.style.maxHeight = '0';\n      content.style.opacity = '0';\n    }\n    \n    // Add a completely new click handler\n    toggle.addEventListener('click', function() {\n      console.log(`FIXED handler - Toggle clicked: ${section.toggle}`);\n      \n      // Toggle expanded class\n      this.classList.toggle('expanded');\n      \n      // Toggle visibility with direct style manipulation\n      if (this.classList.contains('expanded')) {\n        content.style.display = 'block';\n        // Force a reflow before changing properties for animation\n        content.offsetHeight;\n        content.style.maxHeight = '1000px';\n        content.style.opacity = '1';\n      } else {\n        content.style.maxHeight = '0';\n        content.style.opacity = '0';\n        // Hide after transition completes\n        setTimeout(() => {\n          if (!this.classList.contains('expanded')) {\n            content.style.display = 'none';\n          }\n        }, 300); // Match your CSS transition duration\n      }\n    });\n    \n    console.log(`Fixed toggle handler for: ${section.toggle}`);\n  });\n  \n  console.log(\"All section toggles have been fixed with direct style manipulation\");\n}\n\n// Call our fix function after DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Wait a short time to ensure all other initialization is done\n  setTimeout(fixSectionToggles, 500);\n});\n\n\nfunction addOverrideStyles() {\n  const styleElement = document.createElement('style');\n  styleElement.textContent = `\n    /* Override styles to fix section toggling */\n    .section-content {\n      transition: max-height 0.3s ease, opacity 0.3s ease;\n    }\n    \n    .lumetri-section h3.expanded + .section-content {\n      display: block !important;\n      max-height: 1000px !important;\n      opacity: 1 !important;\n      overflow: visible !important;\n    }\n    \n    .lumetri-section h3:not(.expanded) + .section-content {\n      max-height: 0 !important;\n      opacity: 0 !important;\n      overflow: hidden !important;\n    }\n    \n    /* Add a visual indicator for debug purposes */\n    .lumetri-section h3::after {\n      content: \" ▼\";\n      transition: transform 0.3s ease;\n    }\n    \n    .lumetri-section h3.expanded::after {\n      transform: rotate(180deg);\n    }\n  `;\n  \n  document.head.appendChild(styleElement);\n  console.log(\"Override styles added to fix section toggling\");\n}\n\n// Call this immediately\naddOverrideStyles();\n\n\n\n\n\n// Add these emergency buttons as a last resort\nsetTimeout(addEmergencyToggles, 1000);\n\n  console.log('All section toggles set up in centralized function');\n}\n\n// Call this after initializing all components\ndocument.addEventListener('DOMContentLoaded', () => {\n  // ... other initialization\n  setupAllSectionToggles();\n});\n\n// Apply basic mode adjustments\nfunction applyBasicAdjustments() {\n  console.log('Applying basic adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Apply advanced mode adjustments\nfunction applyAdvancedAdjustments() {\n  console.log('Applying advanced Lumetri-style adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Make certain functions available globally\nwindow.applyImageAdjustments = applyImageAdjustments;\n\n// Initialize the app when the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// Export functions for use in other modules\nexport { \n  appState,\n  applyImageAdjustments,\n  applyBasicAdjustments,\n  applyAdvancedAdjustments\n};","// Import app state\nimport { appState } from '../../app.js';\n\n// Initialize image comparison\nexport function initImageComparison() {\n  console.log('Initializing Image Comparison');\n  // Will implement comparison slider functionality \n}\n\n// Export functions\nexport default {\n  initImageComparison\n};"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","defaultCurveParams","rgb","x","y","red","green","blue","currentChannel","isLinearCurve","points","i","length","expectedY","Math","abs","interpolateCurve","value","p1","p2","segmentLength","t","CurvesPanel","params","arguments","undefined","_classCallCheck","this","_objectSpread","JSON","parse","stringify","curveCanvas","curveCtx","channelButtons","activePoint","pointRadius","gridColor","baseLineColor","curveColors","shiftPressed","altPressed","init","bind","drawCurve","handleMouseDown","handleMouseMove","handleMouseUp","handleKeyDown","handleKeyUp","resetCurve","findNearestPoint","addPoint","removePoint","console","log","document","getElementById","getContext","setupEvents","updateChannelButtonUI","warn","_this","addEventListener","_loop","channel","btn","resetCurveBtn","e","style","cursor","classList","add","remove","applyImageAdjustments","width","height","strokeStyle","lineWidth","round","beginPath","moveTo","lineTo","stroke","clearRect","fillStyle","fillRect","drawGrid","curveColor","sortedPoints","_toConsumableArray","sort","a","b","drawDirectCurve","drawControlPoints","segmentT","_this2","forEach","point","index","isEndpoint","arc","PI","fill","minDistance","Infinity","nearestPoint","pointIndex","dx","dy","distance","sqrt","insertIndex","splice","rect","getBoundingClientRect","clientX","left","clientY","top","clampedX","max","min","clampedY","nearest","startX","startY","verticalOnly","prevX","nextX","r","g","rgbPoints","imageData","data","result","applyCurves","curvesPanel","tempToKelvin","createAdvancedSlider","container","options","id","label","step","initialValue","paramName","isTemperature","concat","sliderContainer","createElement","className","labelElement","setAttribute","textContent","valueDisplay","kelvinValue","toFixed","appendChild","slider","type","appState","currentLutParams","lumetri","parseFloat","error","resetAdvancedControls","exposure","contrast","highlights","shadows","whites","blacks","temperature","tint","querySelectorAll","split","setupSlider","basic","applyBasicCorrections","applyContrast","redBalance","greenBalance","blueBalance","saturation","luminance","shadowsShift","highlightsShift","shadowEffect","pow","highlightEffect","creative","applyVibrance","amount","maxChannel","minChannel","vibranceEffect","applyFadedFilm","fadeAmount","blackShift","setupColorWheel","wheel","innerHTML","canvas","clientWidth","clientHeight","background","backgroundImage","borderRadius","boxShadow","border","indicator","tintValue","colorWheels","centerX","centerY","maxDistance","normalizedR","normalizedG","normalizedB","hue","atan2","cos","sin","setWheelIndicatorPosition","isMouseDown","updateWheelFromEvent","angle","h","s","floor","f","p","q","hsvToRgb","mappedR","mappedG","mappedB","resetColorWheels","shadowTint","highlightTint","tintBalance","tintBalanceSlider","tintBalanceValue","shadowColorWheel","highlightColorWheel","shadowIndicator","querySelector","highlightIndicator","applyColorWheels","shadowInfluence","highlightInfluence","currentSliderPosition","handleImageUpload","window","electronAPI","openFileDialog","properties","filters","name","extensions","then","imagePath","originalImageElement","src","fallbackFileUpload","input","accept","files","file","reader","FileReader","onload","event","target","readAsDataURL","click","setViewMode","mode","resetPosition","viewSplitBtn","viewBeforeBtn","viewAfterBtn","originalImageContainer","comparisonSlider","verticalDivider","clipPath","display","builtInPresets","userPresets","updateSlider","sliderId","updateLUTPreview","fullPreview","lutPreview","lutContent","generateCubeLUT","slice","showToast","message","duration","toastContainer","body","toast","setTimeout","removeChild","_regeneratorRuntime","n","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","saveLutFile","_x","_saveLutFile","apply","_callee2","content","defaultFilename","filename","filePath","blob","url","_args2","_context2","endsWith","saveLut","defaultPath","Blob","URL","createObjectURL","href","download","revokeObjectURL","t0","_next","_throw","lutParams","size","title","redValue","greenValue","blueValue","activeMode","applyBasicLutAdjustments","applyAdvancedLutAdjustments","tempResult","applyTemperatureAndTint","exposureFactor","contrastValue","toneResult","totalEffect","applyToneAdjustments","colorWheelResult","curves","vibrance","vibranceAmount","fadedFilm","fadedResult","handleExportLut","_handleExportLut","_callee","_context","formatFilename","replace","toLowerCase","processImage","originalImage","ctx","naturalWidth","naturalHeight","drawImage","getImageData","putImageData","toDataURL","processImageBasic","contrastFactor","midpoint","adjustment","whitesInfluence","blacksInfluence","temp","tintVal","applyLumetriAdjustments","applyColorWheelAdjustments","applyCreativeEffects","applyCurvesToImage","processImageAdvanced","processedImage","processedImageUrl","processedImageElement","styleElement","fixSectionToggles","toggle","section","elementId","element","clone","cloneNode","parentNode","replaceChild","removeExistingListeners","contains","maxHeight","opacity","offsetHeight","nextElementSibling","getComputedStyle","head","addEmergencyToggles","setupAllSectionToggles","saveLutBtn","saveLutBtnAdvanced","minimizeBtn","maximizeBtn","closeBtn","viewCodeBtn","viewCodeBtnAdvanced","codeModal","closeModalBtn","modal","initModals","expanded","isExpanding","windowControl","contrastSlider","saturationSlider","redBalanceSlider","greenBalanceSlider","blueBalanceSlider","saturationValue","redBalanceValue","greenBalanceValue","blueBalanceValue","setupBasicControls","titleInput","lutSizeSelect","parseInt","initTitleAndSizeControls","fadedFilmSlider","vibranceSlider","fadedFilmValue","vibranceValue","initCreativeEffects","resetButton","initColorWheels","readyState","originalPlaceholder","comparisonContainer","imageUploadBtn","isSliding","startPercent","updateSliderPosition","percent","sliderLeft","preventDefault","deltaPercent","touches","closest","initComparisonSlider","initPreviewController","presetButtons","presetId","advancedParams","preset","activePresetId","advanced","savedPresets","localStorage","getItem","loadUserPresets","initPresets","modeToggle","basicControls","advancedControls","isAdvancedMode","checked","lumetriSection","basicCorrectionToggle","basicCorrectionSection","onclick","setupAdvancedControls","setupModeToggle","setupWindowControls"],"sourceRoot":""}