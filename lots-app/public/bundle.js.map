{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://lots-app/webpack/bootstrap","webpack://lots-app/webpack/runtime/define property getters","webpack://lots-app/webpack/runtime/hasOwnProperty shorthand","webpack://lots-app/./lots-app/src/components/curves/curves-panel.js","webpack://lots-app/./lots-app/src/components/basic-corrections/basic-corrections.js","webpack://lots-app/./lots-app/src/components/creative/creative-effects.js","webpack://lots-app/./lots-app/src/components/color-wheels/color-wheels.js","webpack://lots-app/./lots-app/src/components/image-preview/preview-controller.js","webpack://lots-app/./lots-app/src/components/presets/presets.js","webpack://lots-app/./lots-app/src/components/common/ui-elements.js","webpack://lots-app/./lots-app/src/services/file-service.js","webpack://lots-app/./lots-app/src/services/lut-generator.js","webpack://lots-app/./lots-app/src/services/export-service.js","webpack://lots-app/./lots-app/src/models/image-processor.js","webpack://lots-app/./lots-app/src/app.js","webpack://lots-app/./lots-app/src/components/image-preview/image-comparison.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// components/curves/curves-panel.js\n// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Default curve parameters\nexport const defaultCurveParams = {\n  rgb: [\n    { x: 0, y: 0 },      // Shadow point\n    { x: 0.25, y: 0.25 }, // Quarter tone\n    { x: 0.5, y: 0.5 },   // Midtone\n    { x: 0.75, y: 0.75 }, // Three-quarter tone\n    { x: 1, y: 1 }       // Highlight point\n  ],\n  red: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  green: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  blue: [\n    { x: 0, y: 0 },\n    { x: 0.25, y: 0.25 },\n    { x: 0.5, y: 0.5 },\n    { x: 0.75, y: 0.75 },\n    { x: 1, y: 1 }\n  ],\n  currentChannel: 'rgb'\n};\n\n// Check if a curve is linear (no adjustments)\nexport function isLinearCurve(points) {\n  for (let i = 0; i < points.length; i++) {\n    const expectedY = points[i].x;\n    if (Math.abs(points[i].y - expectedY) > 0.01) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Interpolate a value through a curve\nexport function interpolateCurve(points, value) {\n  // Handle edge cases\n  if (value <= 0) return points[0].y;\n  if (value >= 1) return points[points.length - 1].y;\n  \n  // Find the segment containing the value\n  let i = 0;\n  while (i < points.length - 1 && points[i + 1].x < value) {\n    i++;\n  }\n  \n  // Linear interpolation between points\n  const p1 = points[i];\n  const p2 = points[i + 1];\n  const t = (value - p1.x) / (p2.x - p1.x);\n  \n  return p1.y + t * (p2.y - p1.y);\n}\n\n// Main Curves class\nclass CurvesPanel {\n  constructor(params = {}) {\n    // Merge provided params with defaults\n    this.params = {\n      ...JSON.parse(JSON.stringify(defaultCurveParams)),\n      ...params\n    };\n    \n    // DOM references\n    this.curveCanvas = null;\n    this.curveCtx = null;\n    this.channelButtons = {};\n    this.activePoint = null;\n    \n    // Bind methods to maintain correct context\n    this.init = this.init.bind(this);\n    this.drawCurve = this.drawCurve.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.resetCurve = this.resetCurve.bind(this);\n  }\n  \n  // Initialize the curves panel UI\n  init() {\n    console.log('Initializing Curves Panel');\n    \n    // Get references to curve UI elements\n    this.curveCanvas = document.getElementById('curve-canvas');\n    \n    if (!this.curveCanvas) {\n      console.warn('Curve canvas not found');\n      return;\n    }\n    \n    this.curveCtx = this.curveCanvas.getContext('2d');\n    \n    // Get channel selector buttons\n    this.channelButtons = {\n      rgb: document.getElementById('curve-rgb'),\n      red: document.getElementById('curve-red'),\n      green: document.getElementById('curve-green'),\n      blue: document.getElementById('curve-blue')\n    };\n    \n    // Set up event listeners\n    this.setupEvents();\n    \n    // Initial UI setup\n    this.updateChannelButtonUI();\n    \n    // Initialize by drawing the curve\n    this.drawCurve();\n  }\n  \n  // Set up all event listeners\n  setupEvents() {\n    // Ensure methods are bound\n    if (!this.curveCanvas) return;\n    \n    // Canvas event handling\n    this.curveCanvas.addEventListener('mousedown', this.handleMouseDown);\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n    \n    // Channel selector buttons\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        btn.addEventListener('click', () => {\n          // Set active channel\n          this.params.currentChannel = channel;\n          \n          // Update UI\n          this.updateChannelButtonUI();\n          this.drawCurve();\n        });\n      }\n    }\n    \n    // Reset button\n    const resetCurveBtn = document.getElementById('reset-curve-btn');\n    if (resetCurveBtn) {\n      resetCurveBtn.addEventListener('click', this.resetCurve);\n    }\n  }\n  \n  // Update channel button UI\n  updateChannelButtonUI() {\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        if (channel === this.params.currentChannel) {\n          btn.classList.add('active');\n        } else {\n          btn.classList.remove('active');\n        }\n      }\n    }\n  }\n  \n  // Reset curve to linear\n  resetCurve() {\n    console.log('Resetting curve');\n    \n    // Reset current channel to default linear curve\n    this.params[this.params.currentChannel] = \n      JSON.parse(JSON.stringify(defaultCurveParams[this.params.currentChannel]));\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply to image if available\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Draw the curve onto the canvas\n  drawCurve() {\n    if (!this.curveCanvas || !this.curveCtx) {\n      console.warn('Canvas not ready for drawing');\n      return;\n    }\n    \n    const width = this.curveCanvas.width;\n    const height = this.curveCanvas.height;\n    \n    // Clear canvas\n    this.curveCtx.clearRect(0, 0, width, height);\n    \n    // Get current channel curve points\n    const points = this.params[this.params.currentChannel];\n    \n    // Draw curve background\n    this.curveCtx.fillStyle = 'rgba(20, 20, 20, 0.3)';\n    this.curveCtx.fillRect(0, 0, width, height);\n    \n    // Set curve color based on channel\n    let curveColor;\n    switch (this.params.currentChannel) {\n      case 'red':\n        curveColor = 'rgba(255, 100, 100, 0.8)';\n        break;\n      case 'green':\n        curveColor = 'rgba(100, 255, 100, 0.8)';\n        break;\n      case 'blue':\n        curveColor = 'rgba(100, 100, 255, 0.8)';\n        break;\n      default:\n        curveColor = 'rgba(255, 255, 255, 0.8)';\n    }\n    \n    // Start drawing the curve\n    this.curveCtx.beginPath();\n    \n    // Move to first point\n    this.curveCtx.moveTo(points[0].x * width, (1 - points[0].y) * height);\n    \n    // Draw line segments\n    for (let i = 1; i < points.length; i++) {\n      this.curveCtx.lineTo(points[i].x * width, (1 - points[i].y) * height);\n    }\n    \n    // Style and stroke the path\n    this.curveCtx.strokeStyle = curveColor;\n    this.curveCtx.lineWidth = 2;\n    this.curveCtx.stroke();\n    \n    // Draw control points\n    points.forEach((point, index) => {\n      this.curveCtx.beginPath();\n      this.curveCtx.arc(\n        point.x * width,\n        (1 - point.y) * height,\n        5,\n        0,\n        Math.PI * 2\n      );\n      \n      // Style based on whether it's an endpoint (fixed) or not\n      if (index === 0 || index === points.length - 1) {\n        this.curveCtx.fillStyle = 'rgba(150, 150, 150, 0.8)';\n      } else {\n        this.curveCtx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n      }\n      \n      this.curveCtx.fill();\n      this.curveCtx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n      this.curveCtx.lineWidth = 1;\n      this.curveCtx.stroke();\n    });\n  }\n  \n  // Handle mouse down on curve\n  handleMouseDown(e) {\n    if (!this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Get current channel points\n    const points = this.params[this.params.currentChannel];\n    \n    // Find closest control point\n    let minDistance = Infinity;\n    let closestPoint = null;\n    let pointIndex = -1;\n    \n    points.forEach((point, index) => {\n      const dx = point.x - x;\n      const dy = point.y - y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance < minDistance) {\n        minDistance = distance;\n        closestPoint = point;\n        pointIndex = index;\n      }\n    });\n    \n    // If close enough to a point, make it active\n    if (minDistance < 0.05) {\n      // Don't allow moving first or last point\n      if (pointIndex > 0 && pointIndex < points.length - 1) {\n        this.activePoint = {\n          point: closestPoint,\n          index: pointIndex\n        };\n      }\n    }\n  }\n  \n  // Handle mouse move for curve editing\n  handleMouseMove(e) {\n    if (!this.activePoint || !this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    let x = (e.clientX - rect.left) / rect.width;\n    let y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Clamp values\n    x = Math.max(0, Math.min(1, x));\n    y = Math.max(0, Math.min(1, y));\n    \n    const points = this.params[this.params.currentChannel];\n    const index = this.activePoint.index;\n    \n    // Enforce x ordering and prevent moving end points\n    const prevX = points[index - 1].x;\n    const nextX = points[index + 1].x;\n    \n    // Ensure point stays between its neighbors\n    x = Math.max(prevX + 0.01, Math.min(nextX - 0.01, x));\n    \n    // Update point\n    points[index].x = x;\n    points[index].y = y;\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply adjustments if function exists\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Handle mouse up for curve editing\n  handleMouseUp() {\n    // Clear active point\n    this.activePoint = null;\n  }\n  \n  // Apply curves to RGB values\n  applyCurves(r, g, b) {\n    // Apply RGB curve\n    const rgbPoints = this.params.rgb;\n    \n    r = interpolateCurve(rgbPoints, r);\n    g = interpolateCurve(rgbPoints, g);\n    b = interpolateCurve(rgbPoints, b);\n    \n    // Apply individual channel curves if not linear\n    if (!isLinearCurve(this.params.red)) {\n      r = interpolateCurve(this.params.red, r);\n    }\n    \n    if (!isLinearCurve(this.params.green)) {\n      g = interpolateCurve(this.params.green, g);\n    }\n    \n    if (!isLinearCurve(this.params.blue)) {\n      b = interpolateCurve(this.params.blue, b);\n    }\n    \n    return { r, g, b };\n  }\n  \n  // Apply curves to an entire image\n  applyCurvesToImage(imageData) {\n    const data = imageData.data;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      // Get RGB values and normalize to 0-1\n      let r = data[i] / 255;\n      let g = data[i + 1] / 255;\n      let b = data[i + 2] / 255;\n      \n      // Apply curves\n      const result = this.applyCurves(r, g, b);\n      \n      // Convert back to 0-255 range\n      data[i] = Math.round(result.r * 255);\n      data[i + 1] = Math.round(result.g * 255);\n      data[i + 2] = Math.round(result.b * 255);\n      // Alpha remains unchanged\n    }\n    \n    return imageData;\n  }\n}\n\n// Single instance for the app\nlet curvesPanel = null;\n\n// Initialize the curves panel\nexport function initCurvesPanel() {\n  console.log('Setting up Curves Panel');\n  \n  // Initialize curves parameters in app state if not present\n  if (!appState.currentLutParams.curves) {\n    appState.currentLutParams.curves = JSON.parse(JSON.stringify(defaultCurveParams));\n  }\n  \n  // Create the curves panel with parameters from app state\n  curvesPanel = new CurvesPanel(appState.currentLutParams.curves);\n  \n  // Set up section toggle\n  setupSectionToggle('curves-toggle', 'curves-section');\n  \n  // Initialize when DOM is ready\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    setTimeout(() => curvesPanel.init(), 0);\n  } else {\n    document.addEventListener('DOMContentLoaded', () => curvesPanel.init());\n  }\n  \n  // Store reference in app state\n  appState.curvesPanel = curvesPanel;\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Apply curves to an image\nexport function applyCurvesToImage(imageData) {\n  if (curvesPanel) {\n    return curvesPanel.applyCurvesToImage(imageData);\n  }\n  return imageData;\n}","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Basic Corrections component\nexport function initBasicCorrections() {\n  console.log('Initializing Basic Corrections');\n  \n  // Initialize basic correction parameters if not present\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {\n      contrast: 1.2,\n      saturation: 1.15,\n      redBalance: 1.05,\n      greenBalance: 0.95,\n      blueBalance: 1.1\n    };\n  }\n  \n  // Initialize advanced parameters if not present\n  if (!appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri = {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    };\n  }\n  \n  // Set up basic mode controls\n  setupBasicControls();\n  \n  // Initialize LUT title and size controls\n  initTitleAndSizeControls();\n  \n  console.log('Basic Corrections initialized successfully');\n}\n\n// Set up basic mode slider controls\nfunction setupBasicControls() {\n  console.log('Setting up basic controls');\n  \n  // Get slider references\n  const contrastSlider = document.getElementById('contrast');\n  const saturationSlider = document.getElementById('saturation');\n  const redBalanceSlider = document.getElementById('red-balance');\n  const greenBalanceSlider = document.getElementById('green-balance');\n  const blueBalanceSlider = document.getElementById('blue-balance');\n  \n  // Display value references\n  const contrastValue = document.getElementById('contrast-value');\n  const saturationValue = document.getElementById('saturation-value');\n  const redBalanceValue = document.getElementById('red-balance-value');\n  const greenBalanceValue = document.getElementById('green-balance-value');\n  const blueBalanceValue = document.getElementById('blue-balance-value');\n  \n  // Report missing elements\n  if (!contrastSlider) console.warn('Contrast slider not found');\n  if (!saturationSlider) console.warn('Saturation slider not found');\n  if (!redBalanceSlider) console.warn('Red balance slider not found');\n  if (!greenBalanceSlider) console.warn('Green balance slider not found');\n  if (!blueBalanceSlider) console.warn('Blue balance slider not found');\n  \n  // Set up event listeners for sliders\n  setupSlider(contrastSlider, contrastValue, 'contrast');\n  setupSlider(saturationSlider, saturationValue, 'saturation');\n  setupSlider(redBalanceSlider, redBalanceValue, 'redBalance');\n  setupSlider(greenBalanceSlider, greenBalanceValue, 'greenBalance');\n  setupSlider(blueBalanceSlider, blueBalanceValue, 'blueBalance');\n  \n  console.log('Basic controls setup complete');\n}\n\n// Set up advanced mode controls\nexport function setupAdvancedControls() {\n  console.log('Setting up advanced mode controls...');\n  \n  // Get references to the advanced controls container\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (!advancedControls) {\n    console.error('Advanced controls container not found!');\n    return;\n  }\n  \n  // Check if the lumetri section already exists\n  let lumetriSection = advancedControls.querySelector('.lumetri-section');\n  \n  // If not, create it from scratch\n  if (!lumetriSection) {\n    lumetriSection = document.createElement('div');\n    lumetriSection.className = 'lumetri-section';\n    advancedControls.appendChild(lumetriSection);\n  }\n  \n  // Check for the toggle and section elements\n  let basicCorrectionToggle = document.getElementById('basic-correction-toggle');\n  let basicCorrectionSection = document.getElementById('basic-correction-section');\n  \n  // If they don't exist, create them\n  if (!basicCorrectionToggle) {\n    basicCorrectionToggle = document.createElement('h3');\n    basicCorrectionToggle.id = 'basic-correction-toggle';\n    basicCorrectionToggle.className = 'expanded';\n    basicCorrectionToggle.textContent = 'Basic Correction';\n    lumetriSection.appendChild(basicCorrectionToggle);\n  }\n  \n  if (!basicCorrectionSection) {\n    basicCorrectionSection = document.createElement('div');\n    basicCorrectionSection.id = 'basic-correction-section';\n    basicCorrectionSection.className = 'section-content expanded';\n    lumetriSection.appendChild(basicCorrectionSection);\n  }\n  \n  // Clear any existing content in the section\n  basicCorrectionSection.innerHTML = '';\n  \n  // Ensure the section is visible and expanded\n  basicCorrectionToggle.classList.add('expanded');\n  basicCorrectionSection.classList.add('expanded');\n  basicCorrectionSection.style.display = 'block';\n  basicCorrectionSection.style.maxHeight = '1000px';\n  \n  // Set up toggle click handler explicitly\n  basicCorrectionToggle.onclick = function() {\n    console.log('Basic correction toggle clicked');\n    this.classList.toggle('expanded');\n    \n    if (this.classList.contains('expanded')) {\n      basicCorrectionSection.classList.add('expanded');\n      basicCorrectionSection.style.display = 'block';\n      setTimeout(() => {\n        basicCorrectionSection.style.maxHeight = '1000px';\n      }, 10);\n    } else {\n      basicCorrectionSection.classList.remove('expanded');\n      basicCorrectionSection.style.maxHeight = '0';\n      setTimeout(() => {\n        basicCorrectionSection.style.display = 'none';\n      }, 300);\n    }\n  };\n  \n  // Create sliders inside the section\n  console.log('Creating advanced sliders...');\n  \n  // Create exposure control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'exposure-advanced',\n    label: 'Exposure',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.exposure || 0,\n    paramName: 'exposure'\n  });\n  \n  // Create contrast control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'contrast-advanced',\n    label: 'Contrast',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.contrast || 0,\n    paramName: 'contrast'\n  });\n  \n  // Create highlights control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'highlights-advanced',\n    label: 'Highlights',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.highlights || 0,\n    paramName: 'highlights'\n  });\n  \n  // Create shadows control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'shadows-advanced',\n    label: 'Shadows',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.shadows || 0,\n    paramName: 'shadows'\n  });\n  \n  // Create whites control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'whites-advanced',\n    label: 'Whites',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.whites || 0,\n    paramName: 'whites'\n  });\n  \n  // Create blacks control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'blacks-advanced',\n    label: 'Blacks',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.blacks || 0,\n    paramName: 'blacks'\n  });\n  \n  // Create temperature control with Kelvin display\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'temperature-advanced',\n    label: 'Temperature',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.temperature || 0,\n    paramName: 'temperature',\n    isTemperature: true\n  });\n  \n  // Create tint control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'tint-advanced',\n    label: 'Tint',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.tint || 0,\n    paramName: 'tint'\n  });\n  \n  console.log('Adding reset button');\n  // Add reset button\n  const resetButton = document.createElement('button');\n  resetButton.textContent = 'Reset';\n  resetButton.className = 'reset-btn';\n  resetButton.addEventListener('click', resetAdvancedControls);\n  basicCorrectionSection.appendChild(resetButton);\n  \n  // Create other sections if needed\n  setupCreativeSection(advancedControls);\n  setupColorWheelsSection(advancedControls);\n  setupCurvesSection(advancedControls);\n  \n  console.log('Advanced controls setup complete');\n}\n\n// Helper function to set up Creative section\nfunction setupCreativeSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to set up Color Wheels section\nfunction setupColorWheelsSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to set up Curves section\nfunction setupCurvesSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to convert temperature slider value to Kelvin\nfunction tempToKelvin(value) {\n  // Map slider value (-150 to +150) to Kelvin range (approx 2000K to 10000K)\n  // 0 on the slider = 6500K (neutral)\n  if (value === 0) return 6500;\n  \n  if (value < 0) {\n    // Negative values = warmer (lower Kelvin)\n    return Math.round(6500 + (value / 150) * 4500);\n  } else {\n    // Positive values = cooler (higher Kelvin)\n    return Math.round(6500 + (value / 150) * 3500);\n  }\n}\n\n// Helper function to create advanced slider controls\nfunction createAdvancedSlider(container, options) {\n  if (!container) {\n    console.error('Cannot create slider: container is null');\n    return;\n  }\n  \n  const { id, label, min, max, step, initialValue, paramName, isTemperature } = options;\n  console.log(`Creating advanced slider: ${id} for ${paramName}`);\n  \n  // Create container for the slider\n  const sliderContainer = document.createElement('div');\n  sliderContainer.className = 'control-group';\n  \n  // Create label element\n  const labelElement = document.createElement('label');\n  labelElement.setAttribute('for', id);\n  labelElement.textContent = label + ' ';\n  \n  // Create value display\n  const valueDisplay = document.createElement('span');\n  valueDisplay.id = `${id}-value`;\n  valueDisplay.className = 'parameter-value';\n  \n  // Set initial value display\n  if (isTemperature) {\n    // For temperature, show Kelvin\n    const kelvinValue = tempToKelvin(initialValue);\n    valueDisplay.textContent = `${kelvinValue}K`;\n    \n    // Add kelvin value class for styling if needed\n    valueDisplay.classList.add('kelvin-value');\n  } else {\n    // For other parameters, show regular value\n    valueDisplay.textContent = initialValue.toFixed(1);\n  }\n  \n  // Append value display to label\n  labelElement.appendChild(valueDisplay);\n  \n  // Create slider input\n  const slider = document.createElement('input');\n  slider.type = 'range';\n  slider.id = id;\n  slider.min = min;\n  slider.max = max;\n  slider.step = step;\n  slider.value = initialValue;\n  \n  // Add elements to container\n  sliderContainer.appendChild(labelElement);\n  sliderContainer.appendChild(slider);\n  container.appendChild(sliderContainer);\n  \n  // Set up event listener\n  slider.addEventListener('input', () => {\n    // Ensure lumetri object exists\n    if (!appState.currentLutParams.lumetri) {\n      appState.currentLutParams.lumetri = {};\n    }\n    \n    // Update parameter value\n    appState.currentLutParams.lumetri[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    if (isTemperature) {\n      // For temperature, show Kelvin\n      const kelvinValue = tempToKelvin(parseFloat(slider.value));\n      valueDisplay.textContent = `${kelvinValue}K`;\n    } else {\n      // For other parameters, show regular value\n      valueDisplay.textContent = parseFloat(slider.value).toFixed(1);\n    }\n    \n    console.log(`Advanced parameter updated: ${paramName} = ${slider.value}`);\n    \n    // Apply changes to image\n    applyImageAdjustments();\n  });\n  \n  return { slider, valueDisplay };\n}\n\n// Reset all advanced controls to their default values\nfunction resetAdvancedControls() {\n  console.log('Resetting advanced controls to defaults');\n  \n  // Reset all lumetri parameters to default values\n  appState.currentLutParams.lumetri = {\n    exposure: 0,\n    contrast: 0,\n    highlights: 0,\n    shadows: 0,\n    whites: 0,\n    blacks: 0,\n    temperature: 0,\n    tint: 0\n  };\n  \n  // Update all slider controls to match reset values\n  const sliders = document.querySelectorAll('#basic-correction-section input[type=\"range\"]');\n  sliders.forEach(slider => {\n    const paramName = slider.id.split('-')[0]; // Extract parameter name from id\n    slider.value = appState.currentLutParams.lumetri[paramName] || 0;\n    \n    // Update value display\n    const valueDisplay = document.getElementById(`${slider.id}-value`);\n    if (valueDisplay) {\n      if (paramName === 'temperature') {\n        valueDisplay.textContent = '6500K'; // Neutral temperature in Kelvin\n      } else {\n        valueDisplay.textContent = '0.0';\n      }\n    }\n  });\n  \n  // Apply changes\n  applyImageAdjustments();\n}\n\n// Set up a slider control with its value display for basic mode\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) {\n    console.warn(`Cannot set up slider: ${paramName} - missing elements`);\n    return;\n  }\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.basic[paramName];\n  valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.basic[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n    \n    console.log(`Basic parameter updated: ${paramName} = ${slider.value}`);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Initialize title and LUT size controls\nfunction initTitleAndSizeControls() {\n  console.log('Initializing title and LUT size controls');\n  \n  const titleInput = document.getElementById('title');\n  const lutSizeSelect = document.getElementById('lut-size');\n  \n  if (!titleInput) console.warn('Title input not found');\n  if (!lutSizeSelect) console.warn('LUT size select not found');\n  \n  if (titleInput) {\n    // Set initial value\n    titleInput.value = appState.currentLutParams.title || \"Signature Look\";\n    \n    // Add event listener\n    titleInput.addEventListener('input', () => {\n      appState.currentLutParams.title = titleInput.value;\n    });\n  }\n  \n  if (lutSizeSelect) {\n    // Set initial value\n    lutSizeSelect.value = appState.currentLutParams.size || \"32\";\n    \n    // Add event listener\n    lutSizeSelect.addEventListener('change', () => {\n      appState.currentLutParams.size = parseInt(lutSizeSelect.value);\n    });\n  }\n}\n\n// Apply the basic corrections to an image\nexport function applyBasicCorrections(imageData) {\n  const params = appState.currentLutParams.basic;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply contrast\n    r = applyContrast(r, params.contrast);\n    g = applyContrast(g, params.contrast);\n    b = applyContrast(b, params.contrast);\n    \n    // Apply color balance\n    r *= params.redBalance;\n    g *= params.greenBalance;\n    b *= params.blueBalance;\n    \n    // Apply saturation\n    if (params.saturation !== 1.0) {\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      r = luminance + params.saturation * (r - luminance);\n      g = luminance + params.saturation * (g - luminance);\n      b = luminance + params.saturation * (b - luminance);\n    }\n    \n    // Apply shadow/highlight adjustments (if defined)\n    if (params.shadowsShift && params.highlightsShift) {\n      let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n      let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n      \n      r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n      g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n      b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Helper function to apply contrast\nfunction applyContrast(value, contrast) {\n  return 0.5 + (value - 0.5) * contrast;\n}\n\n// Export functions and constants\nexport {\n  applyContrast\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Creative Effects component\nexport function initCreativeEffects() {\n  console.log('Initializing Creative Effects');\n  \n  // Initialize creative effect parameters if not present\n  if (!appState.currentLutParams.creative) {\n    appState.currentLutParams.creative = {\n      fadedFilm: 0,\n      vibrance: 0\n    };\n  }\n  \n  // Get slider references\n  const fadedFilmSlider = document.getElementById('faded-film');\n  const vibranceSlider = document.getElementById('vibrance');\n  \n  // Display value references\n  const fadedFilmValue = document.getElementById('faded-film-value');\n  const vibranceValue = document.getElementById('vibrance-value');\n  \n  // Set up event listeners for sliders\n  setupSlider(fadedFilmSlider, fadedFilmValue, 'fadedFilm');\n  setupSlider(vibranceSlider, vibranceValue, 'vibrance');\n  \n  // Set up section toggle\n  setupSectionToggle('creative-toggle', 'creative-section');\n}\n\n// Set up a slider control with its value display\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) return;\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.creative[paramName];\n  valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.creative[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      \n      if (toggle.classList.contains('expanded')) {\n        section.classList.add('expanded');\n        section.style.display = 'block';\n        setTimeout(() => {\n          section.style.maxHeight = '1000px';\n          section.style.opacity = '1';\n        }, 10);\n      } else {\n        section.classList.remove('expanded');\n        section.style.maxHeight = '0';\n        section.style.opacity = '0';\n        setTimeout(() => {\n          if (!toggle.classList.contains('expanded')) {\n            section.style.display = 'none';\n          }\n        }, 300);\n      }\n    });\n  }\n}\n\n// Apply creative effects to image data\nexport function applyCreativeEffects(imageData) {\n  const params = appState.currentLutParams.creative;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply vibrance if enabled\n    if (params.vibrance !== 0) {\n      const result = applyVibrance(r, g, b, params.vibrance / 150);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Apply faded film effect if enabled\n    if (params.fadedFilm > 0) {\n      const result = applyFadedFilm(r, g, b, params.fadedFilm / 100);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply vibrance adjustment\nfunction applyVibrance(r, g, b, amount) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate saturation level to determine vibrance effect\n  const maxChannel = Math.max(r, g, b);\n  const minChannel = Math.min(r, g, b);\n  const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n  \n  // Apply vibrance (affects less saturated colors more)\n  const vibranceEffect = amount * (1 - saturationLevel);\n  \n  // Apply the effect to each channel\n  r = luminance + (r - luminance) * (1 + vibranceEffect);\n  g = luminance + (g - luminance) * (1 + vibranceEffect);\n  b = luminance + (b - luminance) * (1 + vibranceEffect);\n  \n  return { r, g, b };\n}\n\n// Apply faded film effect\nfunction applyFadedFilm(r, g, b, amount) {\n  // Faded film effect reduces contrast and slightly shifts the black point\n  const fadeAmount = amount * 0.5; // Adjust the strength\n  \n  // Reduce contrast\n  r = r * (1 - fadeAmount) + 0.5 * fadeAmount;\n  g = g * (1 - fadeAmount) + 0.5 * fadeAmount;\n  b = b * (1 - fadeAmount) + 0.5 * fadeAmount;\n  \n  // Add a slight shift to the black point\n  const blackShift = amount * 0.1;\n  r += blackShift;\n  g += blackShift;\n  b += blackShift;\n  \n  return { r, g, b };\n}\n\n// Export functions and utilities\nexport {\n  applyVibrance,\n  applyFadedFilm\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Color Wheels component\nexport function initColorWheels() {\n  console.log('Initializing Color Wheels');\n  \n  // Initialize color wheel parameters if not present\n  if (!appState.currentLutParams.colorWheels) {\n    appState.currentLutParams.colorWheels = {\n      shadowTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      highlightTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      tintBalance: 0 // Range: -150 to 150\n    };\n  }\n  \n  // Get DOM references\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  // Setup color wheels\n  if (shadowColorWheel) {\n    setupColorWheel(shadowColorWheel, 'shadowTint');\n  }\n  \n  if (highlightColorWheel) {\n    setupColorWheel(highlightColorWheel, 'highlightTint');\n  }\n  \n  // Setup tint balance slider\n  if (tintBalanceSlider && tintBalanceValue) {\n    // Set initial value\n    tintBalanceSlider.value = appState.currentLutParams.colorWheels.tintBalance;\n    tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n    \n    // Add event listener\n    tintBalanceSlider.addEventListener('input', () => {\n      appState.currentLutParams.colorWheels.tintBalance = parseFloat(tintBalanceSlider.value);\n      tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n      applyImageAdjustments();\n    });\n  }\n  \n  // Setup reset button\n  const resetButton = document.querySelector('.reset-btn[data-section=\"colorWheels\"]');\n  if (resetButton) {\n    resetButton.addEventListener('click', resetColorWheels);\n  }\n  \n  // Set up section toggle\n  setupSectionToggle('color-wheels-toggle', 'color-wheels-section');\n}\n\n// Set up a color wheel control\nfunction setupColorWheel(wheel, paramName) {\n  if (!wheel) return;\n  \n  // Clear any existing content\n  wheel.innerHTML = '';\n  \n  // Create a canvas-based color wheel\n  const canvas = document.createElement('canvas');\n  canvas.width = wheel.clientWidth || 80;\n  canvas.height = wheel.clientHeight || 80;\n  wheel.appendChild(canvas);\n  \n  // Use CSS-based color wheel instead of canvas\n  wheel.style.background = \"conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  wheel.style.backgroundImage = \"radial-gradient(circle at center, white 0%, rgba(255, 255, 255, 0) 70%), conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  \n  // Add indicator for current position\n  const indicator = document.createElement('div');\n  indicator.className = 'wheel-indicator';\n  wheel.appendChild(indicator);\n  \n  // Get current tint value\n  const tintValue = appState.currentLutParams.colorWheels[paramName];\n  \n  // Position indicator based on current tint value\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  const maxDistance = Math.min(centerX, centerY) - 2;\n  \n  // Calculate position from tint values\n  // Convert from 0-255 range to -1 to 1 range (128 is center/neutral)\n  const normalizedR = (tintValue.r - 128) / 128;\n  const normalizedG = (tintValue.g - 128) / 128;\n  const normalizedB = (tintValue.b - 128) / 128;\n  \n  // Estimate hue and saturation from RGB (simplified)\n  let saturation = Math.sqrt(normalizedR*normalizedR + normalizedG*normalizedG + normalizedB*normalizedB);\n  saturation = Math.min(1, saturation); // Clamp to 1\n  \n  // This is a simplified conversion - a complete RGB to HSV would be more accurate\n  let hue = 0;\n  if (saturation > 0) {\n    // Rough estimation of hue angle based on RGB values\n    hue = Math.atan2(normalizedG, normalizedR);\n    if (normalizedB > Math.max(normalizedR, normalizedG)) {\n      hue = Math.PI + Math.atan2(normalizedB, -normalizedR);\n    }\n    // Convert to 0-2PI range\n    if (hue < 0) hue += 2 * Math.PI;\n  }\n  \n  // Calculate x,y position on wheel\n  const x = Math.cos(hue) * saturation * maxDistance;\n  const y = Math.sin(hue) * saturation * maxDistance;\n  \n  // Position indicator\n  setWheelIndicatorPosition(wheel, indicator, x, y);\n  \n  // Track if mouse is down\n  let isMouseDown = false;\n  \n  // Handle mouse interactions\n  wheel.addEventListener('mousedown', (e) => {\n    isMouseDown = true;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mousemove', (e) => {\n    if (!isMouseDown) return;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mouseup', () => {\n    isMouseDown = false;\n  });\n  \n  wheel.addEventListener('click', updateWheelFromEvent);\n  \n  function updateWheelFromEvent(e) {\n    const rect = wheel.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    \n    // Get coordinates relative to center\n    const x = e.clientX - rect.left - centerX;\n    const y = e.clientY - rect.top - centerY;\n    \n    // Calculate distance from center (for saturation)\n    const distance = Math.sqrt(x * x + y * y);\n    const maxDistance = Math.min(centerX, centerY) - 2;\n    \n    // Limit to wheel boundary\n    if (distance <= maxDistance) {\n      // Update indicator position\n      setWheelIndicatorPosition(wheel, indicator, x, y);\n      \n      // Calculate angle (for hue)\n      let angle = Math.atan2(y, x);\n      if (angle < 0) angle += 2 * Math.PI;\n      \n      // Normalize distance to 0-1\n      const normalizedDistance = distance / maxDistance;\n      \n      // Calculate color based on position\n      const hue = angle / (2 * Math.PI);\n      const saturation = normalizedDistance;\n      const rgb = hsvToRgb(hue, saturation, 1.0);\n      \n      // Map RGB (0-255) to tint adjustments (64-192, where 128 is neutral)\n      // We use a narrower range to avoid extreme adjustments\n      const mappedR = Math.round(128 + (rgb.r - 128) * saturation);\n      const mappedG = Math.round(128 + (rgb.g - 128) * saturation);\n      const mappedB = Math.round(128 + (rgb.b - 128) * saturation);\n      \n      // Update the parameter\n      appState.currentLutParams.colorWheels[paramName] = { r: mappedR, g: mappedG, b: mappedB };\n      \n      // Apply the adjustment to the image\n      applyImageAdjustments();\n    }\n  }\n}\n\n// Reset color wheels to default values\nfunction resetColorWheels() {\n  // Reset to neutral tints\n  appState.currentLutParams.colorWheels.shadowTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.highlightTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.tintBalance = 0;\n  \n  // Update UI\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  if (tintBalanceSlider) tintBalanceSlider.value = 0;\n  if (tintBalanceValue) tintBalanceValue.textContent = '0.0';\n  \n  // Reset wheel indicators\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  \n  if (shadowColorWheel) {\n    const shadowIndicator = shadowColorWheel.querySelector('.wheel-indicator');\n    if (shadowIndicator) {\n      setWheelIndicatorPosition(shadowColorWheel, shadowIndicator, 0, 0);\n    }\n  }\n  \n  if (highlightColorWheel) {\n    const highlightIndicator = highlightColorWheel.querySelector('.wheel-indicator');\n    if (highlightIndicator) {\n      setWheelIndicatorPosition(highlightColorWheel, highlightIndicator, 0, 0);\n    }\n  }\n  \n  // Apply changes to image\n  applyImageAdjustments();\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Helper for setting wheel indicator position\nfunction setWheelIndicatorPosition(wheel, indicator, x, y) {\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  \n  indicator.style.left = `${centerX + x}px`;\n  indicator.style.top = `${centerY + y}px`;\n}\n\n// Convert HSV (0-1 ranges) to RGB (0-255)\nfunction hsvToRgb(h, s, v) {\n  let r, g, b;\n  \n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  \n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  \n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\n\n// Apply color wheel tinting to an image\nexport function applyColorWheelAdjustments(imageData) {\n  const params = appState.currentLutParams.colorWheels;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply color wheels tinting\n    const result = applyColorWheels(r, g, b, params.shadowTint, params.highlightTint, params.tintBalance / 150);\n    \n    // Clamp values to valid range\n    data[i] = Math.round(Math.min(1.0, Math.max(0.0, result.r)) * 255);\n    data[i + 1] = Math.round(Math.min(1.0, Math.max(0.0, result.g)) * 255);\n    data[i + 2] = Math.round(Math.min(1.0, Math.max(0.0, result.b)) * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply color wheels (shadow and highlight tinting)\nfunction applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate shadow and highlight influence based on luminance\n  let shadowInfluence = Math.pow(1 - luminance, 2);\n  let highlightInfluence = Math.pow(luminance, 2);\n  \n  // Apply tint balance to adjust the crossover point\n  if (tintBalance > 0) {\n    // Shift influence towards highlights\n    shadowInfluence *= (1 - tintBalance);\n    highlightInfluence = highlightInfluence * (1 - tintBalance) + tintBalance;\n  } else if (tintBalance < 0) {\n    // Shift influence towards shadows\n    highlightInfluence *= (1 + tintBalance);\n    shadowInfluence = shadowInfluence * (1 + tintBalance) - tintBalance;\n  }\n  \n  // Convert shadow tint from 0-255 to -1 to 1 range (128 is neutral)\n  const shadowR = (shadowTint.r - 128) / 128;\n  const shadowG = (shadowTint.g - 128) / 128;\n  const shadowB = (shadowTint.b - 128) / 128;\n  \n  // Convert highlight tint from 0-255 to -1 to 1 range (128 is neutral)\n  const highlightR = (highlightTint.r - 128) / 128;\n  const highlightG = (highlightTint.g - 128) / 128;\n  const highlightB = (highlightTint.b - 128) / 128;\n  \n  // Apply shadow tint\n  r += shadowR * shadowInfluence * 0.5;\n  g += shadowG * shadowInfluence * 0.5;\n  b += shadowB * shadowInfluence * 0.5;\n  \n  // Apply highlight tint\n  r += highlightR * highlightInfluence * 0.5;\n  g += highlightG * highlightInfluence * 0.5;\n  b += highlightB * highlightInfluence * 0.5;\n  \n  return { r, g, b };\n}\n\n// Export functions for use in other modules\nexport {\n  hsvToRgb,\n  applyColorWheels\n};","// Import utilities if needed\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Keep track of slider position\nlet currentSliderPosition = 50;\n\n// Initialize the preview controller\nexport function initPreviewController() {\n  console.log('Initializing Preview Controller');\n  \n  // Get DOM elements\n  const originalImage = document.getElementById('original-image');\n  const processedImage = document.getElementById('processed-image');\n  const originalPlaceholder = document.getElementById('original-placeholder');\n  const comparisonContainer = document.getElementById('comparison-container');\n  const imageUploadBtn = document.getElementById('image-upload-btn');\n  \n  // Store references to the DOM elements in the global app state\n  appState.originalImageElement = originalImage;\n  appState.processedImageElement = processedImage;\n  \n  // Set up view toggle buttons\n  setupViewToggleButtons();\n  \n  // Set up image upload button\n  if (imageUploadBtn) {\n    imageUploadBtn.addEventListener('click', handleImageUpload);\n  }\n  \n  // Set up image load handler\n  if (originalImage) {\n    originalImage.onload = () => {\n      console.log(\"Image loaded successfully\");\n      \n      // Store the image in app state\n      appState.originalImage = originalImage;\n      appState.processedImage = processedImage;\n      \n      // Hide placeholder, show comparison container\n      if (originalPlaceholder) originalPlaceholder.style.display = 'none';\n      if (comparisonContainer) comparisonContainer.style.display = 'block';\n      \n      // Initialize comparison slider\n      initComparisonSlider();\n      \n      // Apply adjustments to process the image\n      applyImageAdjustments();\n    };\n  }\n}\n\n// Set up view toggle buttons (split, before, after)\nfunction setupViewToggleButtons() {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  \n  if (viewSplitBtn) {\n    viewSplitBtn.addEventListener('click', () => {\n      setViewMode('split');\n    });\n  }\n  \n  if (viewBeforeBtn) {\n    viewBeforeBtn.addEventListener('click', () => {\n      setViewMode('before');\n    });\n  }\n  \n  if (viewAfterBtn) {\n    viewAfterBtn.addEventListener('click', () => {\n      setViewMode('after');\n    });\n  }\n}\n\n// Handle image upload functionality\nfunction handleImageUpload() {\n  console.log(\"Image upload button clicked\");\n  \n  // In Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    window.electronAPI.openFileDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp'] }]\n    }).then(imagePath => {\n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        appState.originalImageElement.src = `file://${imagePath}`;\n      }\n    }).catch(error => {\n      console.error(\"Error in Electron file dialog:\", error);\n      fallbackFileUpload();\n    });\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    fallbackFileUpload();\n  }\n}\n\n// Fallback file upload function using HTML input for browser context\nfunction fallbackFileUpload() {\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = 'image/*';\n  \n  input.addEventListener('change', function(e) {\n    if (this.files && this.files[0]) {\n      const file = this.files[0];\n      console.log(\"Selected file:\", file.name);\n      \n      const reader = new FileReader();\n      reader.onload = function(event) {\n        appState.originalImageElement.src = event.target.result;\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  });\n  \n  input.click();\n}\n\n// Initialize comparison slider functionality\nfunction initComparisonSlider() {\n  const comparisonContainer = document.getElementById('comparison-container');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  let isSliding = false;\n  let startX = 0;\n  let startPercent = 50;\n\n  // Function to update slider position\n  function updateSliderPosition(percent) {\n    percent = Math.max(0, Math.min(100, percent));\n    \n    // Store the current position\n    currentSliderPosition = percent;\n    \n    // Update the clip-path of the original image container\n    originalImageContainer.style.clipPath = `inset(0 ${100 - percent}% 0 0)`;\n    \n    // Update slider position\n    comparisonSlider.style.left = percent + '%';\n    \n    // Update vertical divider position\n    verticalDivider.style.left = percent + '%';\n  }\n\n  // Handle mouse events\n  comparisonSlider.addEventListener('mousedown', (e) => {\n    isSliding = true;\n    startX = e.clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('mousemove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('mouseup', () => {\n    isSliding = false;\n  });\n\n  // Handle touch events\n  comparisonSlider.addEventListener('touchstart', (e) => {\n    isSliding = true;\n    startX = e.touches[0].clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('touchmove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.touches[0].clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('touchend', () => {\n    isSliding = false;\n  });\n\n  // Click anywhere in container to move slider\n  comparisonContainer.addEventListener('click', (e) => {\n    if (e.target.closest('.toggle-view') || e.target.closest('.slider-handle')) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const percent = (clickX / rect.width) * 100;\n    \n    updateSliderPosition(percent);\n  });\n\n  // Initialize with 50/50 split or restore previous position\n  updateSliderPosition(currentSliderPosition);\n}\n\n// Set view mode (split, before, after)\nfunction setViewMode(mode, resetPosition = true) {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  // Reset all buttons\n  viewSplitBtn.classList.remove('active');\n  viewBeforeBtn.classList.remove('active');\n  viewAfterBtn.classList.remove('active');\n  \n  switch (mode) {\n    case 'split':\n      viewSplitBtn.classList.add('active');\n      \n      // If resetPosition is true, set to 50/50 split; otherwise keep current position\n      if (resetPosition) {\n        currentSliderPosition = 50;\n      }\n      \n      // Position elements based on current slider position\n      originalImageContainer.style.clipPath = `inset(0 ${100 - currentSliderPosition}% 0 0)`;\n      verticalDivider.style.left = `${currentSliderPosition}%`;\n      comparisonSlider.style.left = `${currentSliderPosition}%`;\n      \n      // Make everything visible\n      comparisonSlider.style.display = 'block';\n      originalImageContainer.style.display = 'block';\n      verticalDivider.style.display = 'block'; // Show divider\n      break;\n      \n    case 'before':\n      viewBeforeBtn.classList.add('active');\n      \n      // Show full original image\n      originalImageContainer.style.clipPath = 'inset(0 0 0 0)';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      originalImageContainer.style.display = 'block';\n      break;\n      \n    case 'after':\n      viewAfterBtn.classList.add('active');\n      \n      // Hide original image completely\n      originalImageContainer.style.display = 'none';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      break;\n  }\n}\n\n// Export functions that may be needed by other modules\nexport {\n  setViewMode,\n  currentSliderPosition\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Define built-in presets\nconst builtInPresets = {\n  \"custom\": {\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0]\n  },\n  \"warm\": {\n    contrast: 1.1,\n    saturation: 0.9,\n    redBalance: 1.15,\n    greenBalance: 0.95,\n    blueBalance: 0.85,\n    shadowsShift: [0.08, 0.02, -0.05],\n    highlightsShift: [0.05, 0.0, -0.05]\n  },\n  \"cool\": {\n    contrast: 1.3,\n    saturation: 0.85,\n    redBalance: 0.9,\n    greenBalance: 1.0,\n    blueBalance: 1.2,\n    shadowsShift: [-0.03, 0.0, 0.08],\n    highlightsShift: [0.0, 0.0, 0.03]\n  },\n  \"bw\": {\n    contrast: 1.5,\n    saturation: 0.0,\n    redBalance: 0.33,\n    greenBalance: 0.33,\n    blueBalance: 0.33,\n    shadowsShift: [-0.05, -0.05, -0.05],\n    highlightsShift: [0.05, 0.05, 0.05]\n  },\n  \"film\": {\n    contrast: 0.9,\n    saturation: 0.8,\n    redBalance: 1.1,\n    greenBalance: 1.05,\n    blueBalance: 0.9,\n    shadowsShift: [0.1, 0.05, 0.0],\n    highlightsShift: [-0.02, -0.02, 0.05]\n  }\n};\n\n// Initialize user presets\nlet userPresets = {};\n\n// Initialize the Presets component\nexport function initPresets() {\n  console.log('Initializing Presets');\n  \n  // Initialize preset buttons\n  const presetButtons = document.querySelectorAll('.preset-btn');\n  \n  presetButtons.forEach(btn => {\n    btn.addEventListener('click', () => {\n      // Remove active class from all buttons\n      presetButtons.forEach(b => b.classList.remove('active'));\n      \n      // Add active class to clicked button\n      btn.classList.add('active');\n      \n      // Get preset id from button id\n      const presetId = btn.id.split('-')[1];\n      \n      // Apply the preset\n      applyPreset(presetId);\n    });\n  });\n  \n  // Load any saved user presets\n  loadUserPresets();\n}\n\n// Apply a preset by its ID\nfunction applyPreset(presetId) {\n  // Look for preset in built-in presets first, then user presets\n  const preset = builtInPresets[presetId] || userPresets[presetId];\n  \n  if (!preset) {\n    console.warn(`Preset '${presetId}' not found`);\n    return;\n  }\n  \n  console.log(`Applying preset: ${presetId}`);\n  \n  // Store the active preset ID\n  appState.activePresetId = presetId;\n  \n  // Apply preset to basic parameters\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {};\n  }\n  \n  // Copy preset values to app state\n  appState.currentLutParams.basic.contrast = preset.contrast;\n  appState.currentLutParams.basic.saturation = preset.saturation;\n  appState.currentLutParams.basic.redBalance = preset.redBalance;\n  appState.currentLutParams.basic.greenBalance = preset.greenBalance;\n  appState.currentLutParams.basic.blueBalance = preset.blueBalance;\n  \n  // Set shadows and highlights shift if present\n  if (preset.shadowsShift) {\n    appState.currentLutParams.basic.shadowsShift = [...preset.shadowsShift];\n  }\n  \n  if (preset.highlightsShift) {\n    appState.currentLutParams.basic.highlightsShift = [...preset.highlightsShift];\n  }\n  \n  // If advanced parameters are in the preset, apply them too\n  if (preset.advanced) {\n    applyAdvancedPreset(preset.advanced);\n  }\n  \n  // Update UI sliders to reflect new values\n  updateSlidersFromPreset();\n  \n  // Apply adjustments to image\n  applyImageAdjustments();\n}\n\n// Apply advanced preset parameters if present\nfunction applyAdvancedPreset(advancedParams) {\n  // Apply Lumetri-style parameters if they exist in the preset\n  if (advancedParams.temperature !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.temperature = advancedParams.temperature;\n  }\n  \n  if (advancedParams.tint !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.tint = advancedParams.tint;\n  }\n  \n  // Add more advanced parameters as needed\n}\n\n// Update UI sliders to reflect preset values\nfunction updateSlidersFromPreset() {\n  const params = appState.currentLutParams.basic;\n  \n  // Update basic sliders\n  updateSlider('contrast', params.contrast);\n  updateSlider('saturation', params.saturation);\n  updateSlider('red-balance', params.redBalance);\n  updateSlider('green-balance', params.greenBalance);\n  updateSlider('blue-balance', params.blueBalance);\n}\n\n// Helper to update a slider and its value display\nfunction updateSlider(sliderId, value) {\n  const slider = document.getElementById(sliderId);\n  const valueDisplay = document.getElementById(`${sliderId}-value`);\n  \n  if (slider) {\n    slider.value = value;\n  }\n  \n  if (valueDisplay) {\n    valueDisplay.textContent = value.toFixed(2);\n  }\n}\n\n// Save the current settings as a user preset\nexport function saveCurrentAsPreset(presetName) {\n  if (!presetName) return;\n  \n  // Create a preset from current settings\n  const newPreset = {\n    contrast: appState.currentLutParams.basic.contrast,\n    saturation: appState.currentLutParams.basic.saturation,\n    redBalance: appState.currentLutParams.basic.redBalance,\n    greenBalance: appState.currentLutParams.basic.greenBalance,\n    blueBalance: appState.currentLutParams.basic.blueBalance\n  };\n  \n  // Add shadows and highlights shift if present\n  if (appState.currentLutParams.basic.shadowsShift) {\n    newPreset.shadowsShift = [...appState.currentLutParams.basic.shadowsShift];\n  }\n  \n  if (appState.currentLutParams.basic.highlightsShift) {\n    newPreset.highlightsShift = [...appState.currentLutParams.basic.highlightsShift];\n  }\n  \n  // Add advanced parameters if in advanced mode\n  if (appState.activeMode === 'advanced' && appState.currentLutParams.lumetri) {\n    newPreset.advanced = {\n      temperature: appState.currentLutParams.lumetri.temperature,\n      tint: appState.currentLutParams.lumetri.tint,\n      // Add other advanced parameters\n    };\n  }\n  \n  // Save to user presets\n  userPresets[presetName] = newPreset;\n  \n  // Save to local storage\n  saveUserPresets();\n  \n  // Add the preset to UI\n  addPresetToUI(presetName);\n  \n  console.log(`Saved preset: ${presetName}`);\n}\n\n// Add a user preset to the UI\nfunction addPresetToUI(presetName) {\n  // This function would add a new preset button to the UI\n  // Implementation would depend on how you want to handle user presets in the UI\n  console.log(`Added preset to UI: ${presetName}`);\n}\n\n// Save user presets to local storage\nfunction saveUserPresets() {\n  try {\n    localStorage.setItem('lotsAppUserPresets', JSON.stringify(userPresets));\n  } catch (error) {\n    console.error('Failed to save user presets:', error);\n  }\n}\n\n// Load user presets from local storage\nfunction loadUserPresets() {\n  try {\n    const savedPresets = localStorage.getItem('lotsAppUserPresets');\n    if (savedPresets) {\n      userPresets = JSON.parse(savedPresets);\n      console.log('Loaded user presets:', Object.keys(userPresets));\n    }\n  } catch (error) {\n    console.error('Failed to load user presets:', error);\n  }\n}\n\n// Export functions and constants\nexport {\n  builtInPresets,\n  userPresets,\n  applyPreset\n};","// components/common/ui-elements.js\n// Import app state if needed\nimport { appState } from '../../app.js';\n\n// Initialize common UI elements\nexport function initUiElements() {\n  console.log('Initializing UI Elements');\n  \n  // Initialize modal functionality\n  initModals();\n  \n  // Initialize expandable sections\n  initExpandableSections();\n  \n  // Initialize window control buttons\n  initWindowControls();\n  \n  console.log('UI Elements initialization complete');\n}\n\n// Initialize modal dialogs\nfunction initModals() {\n  console.log('Setting up modal dialogs');\n  // Code Preview Modal\n  const viewCodeBtn = document.getElementById('view-code-btn');\n  const viewCodeBtnAdvanced = document.getElementById('view-code-btn-advanced');\n  const codeModal = document.getElementById('code-modal');\n  const closeModalBtn = document.getElementById('close-modal-btn');\n  \n  if (!viewCodeBtn) console.warn('View code button not found');\n  if (!viewCodeBtnAdvanced) console.warn('Advanced view code button not found');\n  if (!codeModal) console.warn('Code modal not found');\n  if (!closeModalBtn) console.warn('Close modal button not found');\n  \n  if (viewCodeBtn && codeModal) {\n    viewCodeBtn.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (viewCodeBtnAdvanced && codeModal) {\n    viewCodeBtnAdvanced.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (closeModalBtn) {\n    closeModalBtn.addEventListener('click', () => {\n      // Hide any open modal\n      const modals = document.querySelectorAll('.modal');\n      modals.forEach(modal => {\n        modal.style.display = 'none';\n      });\n    });\n  }\n  \n  // Close modals when clicking outside content\n  window.addEventListener('click', (e) => {\n    const modals = document.querySelectorAll('.modal');\n    modals.forEach(modal => {\n      if (e.target === modal) {\n        modal.style.display = 'none';\n      }\n    });\n  });\n}\n\n// Update LUT preview in code modal\nexport function updateLUTPreview(fullPreview = false) {\n  const lutPreview = document.getElementById('lut-preview');\n  if (!lutPreview) {\n    console.warn('LUT preview element not found');\n    return;\n  }\n  \n  // Get LUT content from generator (to be implemented)\n  let lutContent = \"# LUT Preview will be generated here\";\n  \n  // In the future, we'll call the actual LUT generator:\n  if (window.generateCubeLUT) {\n    lutContent = window.generateCubeLUT();\n  }\n  \n  if (fullPreview) {\n    // Show the full LUT content in the modal\n    lutPreview.textContent = lutContent;\n  } else {\n    // Just show a preview sample\n    lutPreview.textContent = lutContent.slice(0, 500) + '...';\n  }\n}\n\n// Initialize expandable sections - FIXED VERSION\nfunction initExpandableSections() {\n  console.log('Initializing expandable sections');\n  \n  // Define sections to initialize as expanded or collapsed\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section', expanded: true },\n    { toggle: 'creative-toggle', content: 'creative-section', expanded: false },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section', expanded: false },\n    { toggle: 'curves-toggle', content: 'curves-section', expanded: false }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (!toggle) {\n      console.error(`Toggle element not found: #${section.toggle}`);\n      return;\n    }\n    \n    if (!content) {\n      console.error(`Content element not found: #${section.content}`);\n      return;\n    }\n    \n    console.log(`Setting up section: ${section.toggle} (expanded: ${section.expanded})`);\n    \n    // Set initial state\n    if (section.expanded) {\n      toggle.classList.add('expanded');\n      content.classList.add('expanded');\n      content.style.display = 'block';\n      content.style.maxHeight = 'none'; // Allow full height initially\n    } else {\n      toggle.classList.remove('expanded');\n      content.classList.remove('expanded');\n      content.style.display = 'none';\n      content.style.maxHeight = '0';\n    }\n    \n    // Add click event listener\n    toggle.addEventListener('click', () => {\n      console.log(`Toggle clicked for: ${section.toggle}`);\n      \n      // Toggle expanded state\n      const isExpanding = !toggle.classList.contains('expanded');\n      \n      // Update toggle class\n      toggle.classList.toggle('expanded');\n      \n      // Update content\n      if (isExpanding) {\n        // Expanding\n        content.style.display = 'block';\n        // Use setTimeout to allow display change to take effect first\n        setTimeout(() => {\n          content.classList.add('expanded');\n          content.style.maxHeight = 'none';\n        }, 10);\n        console.log(`Expanding section: ${section.content}`);\n      } else {\n        // Collapsing\n        content.classList.remove('expanded');\n        content.style.maxHeight = '0';\n        // Use setTimeout to allow transition to complete before hiding\n        setTimeout(() => {\n          content.style.display = 'none';\n        }, 300); // Match the transition duration in CSS\n        console.log(`Collapsing section: ${section.content}`);\n      }\n    });\n  });\n}\n\n// Initialize window control buttons for Electron\nfunction initWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Create a simple toast notification\nexport function showToast(message, type = 'info', duration = 3000) {\n  console.log(`Toast notification: ${message} (${type})`);\n  \n  // Create toast container if it doesn't exist\n  let toastContainer = document.querySelector('.toast-container');\n  if (!toastContainer) {\n    toastContainer = document.createElement('div');\n    toastContainer.className = 'toast-container';\n    document.body.appendChild(toastContainer);\n  }\n  \n  // Create toast element\n  const toast = document.createElement('div');\n  toast.className = `toast toast-${type}`;\n  toast.textContent = message;\n  \n  // Add to container\n  toastContainer.appendChild(toast);\n  \n  // Trigger animation\n  setTimeout(() => {\n    toast.classList.add('show');\n  }, 10);\n  \n  // Remove after duration\n  setTimeout(() => {\n    toast.classList.remove('show');\n    \n    // Remove from DOM after animation completes\n    setTimeout(() => {\n      toastContainer.removeChild(toast);\n    }, 300);\n  }, duration);\n  \n  return toast;\n}\n\n// Create a confirmation dialog\nexport function showConfirmDialog(message, onConfirm, onCancel) {\n  // Create dialog\n  const dialogOverlay = document.createElement('div');\n  dialogOverlay.className = 'dialog-overlay';\n  \n  const dialogBox = document.createElement('div');\n  dialogBox.className = 'dialog-box';\n  \n  const messageEl = document.createElement('p');\n  messageEl.textContent = message;\n  \n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.className = 'dialog-buttons';\n  \n  const confirmBtn = document.createElement('button');\n  confirmBtn.className = 'primary';\n  confirmBtn.textContent = 'Confirm';\n  \n  const cancelBtn = document.createElement('button');\n  cancelBtn.textContent = 'Cancel';\n  \n  // Add elements to DOM\n  buttonsContainer.appendChild(cancelBtn);\n  buttonsContainer.appendChild(confirmBtn);\n  \n  dialogBox.appendChild(messageEl);\n  dialogBox.appendChild(buttonsContainer);\n  \n  dialogOverlay.appendChild(dialogBox);\n  document.body.appendChild(dialogOverlay);\n  \n  // Add event listeners\n  confirmBtn.addEventListener('click', () => {\n    if (onConfirm) onConfirm();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  cancelBtn.addEventListener('click', () => {\n    if (onCancel) onCancel();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  // Also close on overlay click\n  dialogOverlay.addEventListener('click', (e) => {\n    if (e.target === dialogOverlay) {\n      if (onCancel) onCancel();\n      document.body.removeChild(dialogOverlay);\n    }\n  });\n  \n  return dialogOverlay;\n}","// services/file-service.js\n// Import app state\nimport { appState } from '../app.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the file service\nexport function initFileService() {\n  console.log('Initializing File Service');\n}\n\n// Open an image file\nexport async function openImageFile() {\n  console.log('Opening image file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const imagePath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp', 'tiff', 'tif'] }]\n      });\n      \n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        return `file://${imagePath}`;\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return await fallbackFileUpload();\n    }\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    return await fallbackFileUpload();\n  }\n  \n  return null;\n}\n\n// Fallback file upload function using HTML input for browser context\nexport function fallbackFileUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve(event.target.result);\n        };\n        \n        reader.readAsDataURL(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}\n\n// Save a LUT file\nexport async function saveLutFile(content, defaultFilename = 'lut.cube') {\n  console.log('Saving LUT file');\n  \n  try {\n    // Format the filename\n    const filename = defaultFilename.endsWith('.cube') ? defaultFilename : `${defaultFilename}.cube`;\n    \n    // If we're in Electron environment\n    if (window.electronAPI && typeof window.electronAPI.saveLut === 'function') {\n      const filePath = await window.electronAPI.saveLut({\n        content,\n        defaultPath: filename\n      });\n      \n      if (filePath) {\n        showToast(`LUT saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([content], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`LUT downloaded as ${filename}`, 'success');\n      return filename;\n    }\n  } catch (error) {\n    console.error('Error saving LUT:', error);\n    showToast('Failed to save LUT file', 'error');\n    return null;\n  }\n}\n\n// Load a LUT file\nexport async function loadLutFile() {\n  console.log('Loading LUT file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const lutPath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'CUBE Files', extensions: ['cube'] }]\n      });\n      \n      if (lutPath) {\n        // In a real implementation, we would read the file content here\n        console.log(\"Selected LUT:\", lutPath);\n        \n        // Placeholder for actual file reading logic\n        // The content would be returned and parsed elsewhere\n        return {\n          path: lutPath,\n          filename: lutPath.split('/').pop(),\n          content: \"# Placeholder for actual LUT content\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return null;\n    }\n  } else {\n    // Browser environment\n    return await fallbackLutUpload();\n  }\n  \n  return null;\n}\n\n// Fallback LUT upload function using HTML input for browser context\nexport function fallbackLutUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.cube';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected LUT file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve({\n            filename: file.name,\n            content: event.target.result\n          });\n        };\n        \n        reader.readAsText(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}","// services/lut-generator.js\n// Import app state and utilities\nimport { appState } from '../app.js';\nimport { applyContrast } from '../components/basic-corrections/basic-corrections.js';\nimport { applyFadedFilm } from '../components/creative/creative-effects.js';\nimport { applyColorWheels } from '../components/color-wheels/color-wheels.js';\nimport { interpolateCurve, isLinearCurve } from '../components/curves/curves-panel.js';\n\n// Initialize the LUT generator service\nexport function initLutGenerator() {\n  console.log('Initializing LUT Generator Service');\n  \n  // Make the generator available globally\n  window.generateCubeLUT = generateCubeLUT;\n}\n\n// Generate a CUBE format LUT based on current parameters\nexport function generateCubeLUT() {\n  const lutParams = appState.currentLutParams;\n  const size = lutParams.size || 32;\n  let content = '';\n  \n  // Header\n  content += `# ${lutParams.title}\\n`;\n  content += '# Generated by LOTS App\\n\\n';\n  content += `LUT_3D_SIZE ${size}\\n`;\n  content += 'DOMAIN_MIN 0.0 0.0 0.0\\n';\n  content += 'DOMAIN_MAX 1.0 1.0 1.0\\n\\n';\n  \n  // Generate the 3D LUT entries\n  const step = 1.0 / (size - 1);\n  \n  for (let b = 0; b < size; b++) {\n    for (let g = 0; g < size; g++) {\n      for (let r = 0; r < size; r++) {\n        // Calculate normalized RGB values (0.0 to 1.0)\n        let redValue = r * step;\n        let greenValue = g * step;\n        let blueValue = b * step;\n        \n        // Apply adjustments based on the current mode\n        if (appState.activeMode === 'basic') {\n          const result = applyBasicLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        } else {\n          const result = applyAdvancedLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        }\n        \n        // Clamp values to valid range\n        redValue = Math.min(1.0, Math.max(0.0, redValue));\n        greenValue = Math.min(1.0, Math.max(0.0, greenValue));\n        blueValue = Math.min(1.0, Math.max(0.0, blueValue));\n        \n        // Add the entry to the LUT\n        content += `${redValue.toFixed(6)} ${greenValue.toFixed(6)} ${blueValue.toFixed(6)}\\n`;\n      }\n    }\n  }\n  \n  return content;\n}\n\n// Apply basic mode adjustments to a single color point\nexport function applyBasicLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams.basic || {};\n  \n  // Apply contrast\n  r = applyContrast(r, params.contrast || 1.0);\n  g = applyContrast(g, params.contrast || 1.0);\n  b = applyContrast(b, params.contrast || 1.0);\n  \n  // Apply color balance\n  r *= params.redBalance || 1.0;\n  g *= params.greenBalance || 1.0;\n  b *= params.blueBalance || 1.0;\n  \n  // Apply shadow/highlight adjustments\n  if (params.shadowsShift && params.highlightsShift) {\n    let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n    let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n    \n    r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n    g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n    b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n  }\n  \n  // Apply saturation\n  if (params.saturation !== undefined && params.saturation !== 1.0) {\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    r = luminance + params.saturation * (r - luminance);\n    g = luminance + params.saturation * (g - luminance);\n    b = luminance + params.saturation * (b - luminance);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply advanced mode adjustments to a single color point\nexport function applyAdvancedLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams;\n  \n  // 1. Apply temperature and tint\n  if (params.lumetri && (params.lumetri.temperature !== 0 || params.lumetri.tint !== 0)) {\n    const tempResult = applyTemperatureAndTint(\n      r, g, b, \n      params.lumetri.temperature / 150, \n      params.lumetri.tint / 150\n    );\n    r = tempResult.r;\n    g = tempResult.g;\n    b = tempResult.b;\n  }\n  \n  // 2. Apply exposure and contrast\n  if (params.lumetri) {\n    // Apply exposure\n    if (params.lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, params.lumetri.exposure / 150);\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (params.lumetri.contrast !== 0) {\n      const contrastValue = 1 + (params.lumetri.contrast / 150);\n      r = applyContrast(r, contrastValue);\n      g = applyContrast(g, contrastValue);\n      b = applyContrast(b, contrastValue);\n    }\n  }\n  \n  // 3. Apply highlights, shadows, whites, blacks adjustments\n  if (params.lumetri) {\n    const toneResult = applyToneAdjustments(\n      r, g, b,\n      params.lumetri.highlights / 150,\n      params.lumetri.shadows / 150,\n      params.lumetri.whites / 150,\n      params.lumetri.blacks / 150\n    );\n    r = toneResult.r;\n    g = toneResult.g;\n    b = toneResult.b;\n  }\n  \n  // 4. Apply color wheels tinting\n  if (params.colorWheels) {\n    const shadowTint = params.colorWheels.shadowTint;\n    const highlightTint = params.colorWheels.highlightTint;\n    const tintBalance = params.colorWheels.tintBalance / 150;\n    \n    if (shadowTint.r !== 128 || shadowTint.g !== 128 || shadowTint.b !== 128 ||\n        highlightTint.r !== 128 || highlightTint.g !== 128 || highlightTint.b !== 128 ||\n        tintBalance !== 0) {\n      \n      const colorWheelResult = applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance);\n      r = colorWheelResult.r;\n      g = colorWheelResult.g;\n      b = colorWheelResult.b;\n    }\n  }\n  \n  // 5. Apply curves\n  if (params.curves) {\n    // Apply RGB curve first\n    const rgbPoints = params.curves.rgb;\n    if (rgbPoints) {\n      r = interpolateCurve(rgbPoints, r);\n      g = interpolateCurve(rgbPoints, g);\n      b = interpolateCurve(rgbPoints, b);\n    }\n    \n    // Apply individual channel curves if not linear\n    if (params.curves.red && !isLinearCurve(params.curves.red)) {\n      r = interpolateCurve(params.curves.red, r);\n    }\n    \n    if (params.curves.green && !isLinearCurve(params.curves.green)) {\n      g = interpolateCurve(params.curves.green, g);\n    }\n    \n    if (params.curves.blue && !isLinearCurve(params.curves.blue)) {\n      b = interpolateCurve(params.curves.blue, b);\n    }\n  }\n  \n  // 6. Apply creative effects (vibrance, saturation, faded film)\n  if (params.creative) {\n    // Apply vibrance\n    if (params.creative.vibrance !== 0) {\n      const vibranceAmount = params.creative.vibrance / 150;\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      const maxChannel = Math.max(r, g, b);\n      const minChannel = Math.min(r, g, b);\n      const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n      const vibranceEffect = vibranceAmount * (1 - saturationLevel);\n      \n      r = luminance + (r - luminance) * (1 + vibranceEffect);\n      g = luminance + (g - luminance) * (1 + vibranceEffect);\n      b = luminance + (b - luminance) * (1 + vibranceEffect);\n    }\n    \n    // Apply faded film effect\n    if (params.creative.fadedFilm > 0) {\n      const fadedResult = applyFadedFilm(r, g, b, params.creative.fadedFilm / 100);\n      r = fadedResult.r;\n      g = fadedResult.g;\n      b = fadedResult.b;\n    }\n  }\n  \n  return { r, g, b };\n}\n\n// Apply temperature and tint adjustments\nexport function applyTemperatureAndTint(r, g, b, temperature, tint) {\n  // Temperature: blue-yellow shift\n  // Positive = cooler (more blue), Negative = warmer (more yellow)\n  const tempFactor = temperature;\n  \n  // Tint: green-magenta shift\n  // Positive = more magenta, Negative = more green\n  const tintFactor = tint;\n  \n  // Apply temperature (blue-yellow balance)\n  if (tempFactor < 0) {\n    // Warmer: boost red/green, reduce blue\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  } else if (tempFactor > 0) {\n    // Cooler: boost blue, reduce red/green\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  }\n  \n  // Apply tint (green-magenta balance)\n  if (tintFactor > 0) {\n    // More magenta: boost red and blue, reduce green\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  } else if (tintFactor < 0) {\n    // More green: boost green, reduce red and blue\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply tone adjustments (highlights, shadows, whites, blacks)\nexport function applyToneAdjustments(r, g, b, highlights, shadows, whites, blacks) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Apply highlights adjustment (affects brighter areas)\n  let highlightEffect = Math.pow(luminance, 2) * highlights;\n  \n  // Apply shadows adjustment (affects darker areas)\n  let shadowEffect = Math.pow(1 - luminance, 2) * shadows;\n  \n  // Apply whites adjustment (affects the brightest areas)\n  let whitesEffect = Math.pow(luminance, 4) * whites;\n  \n  // Apply blacks adjustment (affects the darkest areas)\n  let blacksEffect = Math.pow(1 - luminance, 4) * blacks;\n  \n  // Combine all adjustments\n  const totalEffect = highlightEffect + shadowEffect + whitesEffect + blacksEffect;\n  \n  // Apply the combined effect to RGB channels\n  r += totalEffect;\n  g += totalEffect;\n  b += totalEffect;\n  \n  return { r, g, b };\n}","// services/export-service.js\n// Import app state and services\nimport { appState } from '../app.js';\nimport { saveLutFile } from './file-service.js';\nimport { generateCubeLUT } from './lut-generator.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the export service\nexport function initExportService() {\n  console.log('Initializing Export Service');\n  \n  // Set up export buttons\n  setupExportButtons();\n}\n\n// Set up export button click handlers\nfunction setupExportButtons() {\n  const saveLutBtn = document.getElementById('save-lut-btn');\n  const saveLutBtnAdvanced = document.getElementById('save-lut-btn-advanced');\n  \n  if (saveLutBtn) {\n    saveLutBtn.addEventListener('click', handleExportLut);\n  }\n  \n  if (saveLutBtnAdvanced) {\n    saveLutBtnAdvanced.addEventListener('click', handleExportLut);\n  }\n}\n\n// Handle the LUT export button click\nexport async function handleExportLut() {\n  console.log('Exporting LUT');\n  \n  try {\n    // Generate the LUT content\n    const lutContent = generateCubeLUT();\n    \n    // Format filename from title\n    const defaultFilename = formatFilename(appState.currentLutParams.title);\n    \n    // Save the file\n    const result = await saveLutFile(lutContent, defaultFilename);\n    \n    if (result) {\n      console.log('LUT exported successfully');\n    } else {\n      console.warn('LUT export was cancelled or failed');\n    }\n  } catch (error) {\n    console.error('Error exporting LUT:', error);\n    showToast('Failed to export LUT: ' + error.message, 'error');\n  }\n}\n\n// Format a filename from the LUT title\nexport function formatFilename(title) {\n  if (!title) return 'lut.cube';\n  \n  // Replace spaces with underscores and remove special characters\n  let filename = title.replace(/\\s+/g, '_')\n                      .replace(/[^a-zA-Z0-9_-]/g, '')\n                      .toLowerCase();\n  \n  // Add .cube extension if not present\n  if (!filename.endsWith('.cube')) {\n    filename += '.cube';\n  }\n  \n  return filename;\n}\n\n// Export the current image with adjustments applied\nexport async function exportProcessedImage() {\n  console.log('Exporting processed image');\n  \n  if (!appState.processedImageElement) {\n    showToast('No processed image to export', 'error');\n    return null;\n  }\n  \n  try {\n    // Get the processed image source (already contains the applied adjustments)\n    const imageDataUrl = appState.processedImageElement.src;\n    \n    // In Electron environment, we would save the file using Electron APIs\n    if (window.electronAPI && typeof window.electronAPI.saveImage === 'function') {\n      const defaultName = 'processed_image.jpg';\n      \n      const filePath = await window.electronAPI.saveImage({\n        dataUrl: imageDataUrl,\n        defaultPath: defaultName\n      });\n      \n      if (filePath) {\n        showToast(`Image saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const a = document.createElement('a');\n      a.href = imageDataUrl;\n      a.download = 'processed_image.jpg';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      \n      showToast('Image downloaded', 'success');\n      return 'processed_image.jpg';\n    }\n  } catch (error) {\n    console.error('Error exporting image:', error);\n    showToast('Failed to export image', 'error');\n    return null;\n  }\n}\n\n// Export all settings as a preset file\nexport function exportPreset() {\n  console.log('Exporting preset');\n  \n  try {\n    // Create a preset object with current settings\n    const preset = {\n      name: appState.currentLutParams.title || 'Unnamed Preset',\n      basic: { ...appState.currentLutParams.basic },\n      advanced: {\n        lumetri: appState.currentLutParams.lumetri ? { ...appState.currentLutParams.lumetri } : null,\n        colorWheels: appState.currentLutParams.colorWheels ? { ...appState.currentLutParams.colorWheels } : null,\n        curves: appState.currentLutParams.curves ? { ...appState.currentLutParams.curves } : null\n      },\n      version: '1.0'\n    };\n    \n    // Convert to JSON\n    const presetJson = JSON.stringify(preset, null, 2);\n    \n    // Format filename\n    const defaultFilename = `${formatFilename(preset.name).replace('.cube', '')}.lotspreset`;\n    \n    // Save the file using Electron or browser download\n    if (window.electronAPI && typeof window.electronAPI.savePreset === 'function') {\n      return window.electronAPI.savePreset({\n        content: presetJson,\n        defaultPath: defaultFilename\n      }).then(filePath => {\n        if (filePath) {\n          showToast(`Preset saved to: ${filePath}`, 'success');\n          return filePath;\n        }\n        return null;\n      });\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([presetJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = defaultFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`Preset downloaded as ${defaultFilename}`, 'success');\n      return Promise.resolve(defaultFilename);\n    }\n  } catch (error) {\n    console.error('Error exporting preset:', error);\n    showToast('Failed to export preset', 'error');\n    return Promise.resolve(null);\n  }\n}","// models/image-processor.js\n// Import necessary functions from other modules\nimport { appState } from '../app.js';\nimport { applyBasicCorrections } from '../components/basic-corrections/basic-corrections.js';\nimport { applyCreativeEffects } from '../components/creative/creative-effects.js';\nimport { applyColorWheelAdjustments } from '../components/color-wheels/color-wheels.js';\nimport { applyCurvesToImage } from '../components/curves/curves-panel.js';\n\n// Process an image with current adjustments in basic mode\nexport function processImageBasic(originalImage) {\n  console.log('Processing image with basic adjustments');\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply basic corrections\n    applyBasicCorrections(imageData);\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing image:', error);\n    return null;\n  }\n}\n\n// Process an image with current adjustments in advanced mode\nexport function processImageAdvanced(originalImage) {\n  console.log('Processing image with advanced adjustments');\n  console.log('Advanced parameters:', JSON.stringify(appState.currentLutParams.lumetri, null, 2));\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply adjustments in sequence\n    console.log('Applying advanced adjustments in sequence');\n    \n    // 1. First apply basic corrections as a base\n    console.log('1. Applying basic corrections');\n    applyBasicCorrections(imageData);\n    \n    // 2. Apply Lumetri adjustments\n    console.log('2. Applying Lumetri adjustments');\n    applyLumetriAdjustments(imageData);\n    \n    // 3. Apply color wheels adjustments\n    console.log('3. Applying color wheels adjustments');\n    applyColorWheelAdjustments(imageData);\n    \n    // 4. Apply creative effects (faded film, vibrance)\n    console.log('4. Applying creative effects');\n    applyCreativeEffects(imageData);\n    \n    // 5. Apply curves adjustments\n    console.log('5. Applying curves adjustments');\n    if (appState.curvesPanel) {\n      applyCurvesToImage(imageData);\n    } else {\n      console.warn('Curves panel not available, skipping curves adjustments');\n    }\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    console.log('Advanced processing complete');\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing advanced image:', error);\n    return null;\n  }\n}\n\n// Apply Lumetri-style adjustments to image data\nfunction applyLumetriAdjustments(imageData) {\n  if (!appState.currentLutParams.lumetri) {\n    console.warn('No Lumetri parameters available');\n    return imageData;\n  }\n  \n  const lumetri = appState.currentLutParams.lumetri;\n  const data = imageData.data;\n  \n  console.log('Applying Lumetri adjustments with params:', \n    `exposure: ${lumetri.exposure}, `,\n    `contrast: ${lumetri.contrast}, `,\n    `highlights: ${lumetri.highlights}, `,\n    `shadows: ${lumetri.shadows}, `,\n    `whites: ${lumetri.whites}, `,\n    `blacks: ${lumetri.blacks}, `,\n    `temperature: ${lumetri.temperature}, `,\n    `tint: ${lumetri.tint}`);\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply exposure (exponential)\n    if (lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, lumetri.exposure / 150); // Adjust scaling for new range\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (lumetri.contrast !== 0) {\n      const contrastFactor = 1 + (lumetri.contrast / 150); // Scale from -150..150 to appropriate range\n      const midpoint = 0.5;\n      r = midpoint + (r - midpoint) * contrastFactor;\n      g = midpoint + (g - midpoint) * contrastFactor;\n      b = midpoint + (b - midpoint) * contrastFactor;\n    }\n    \n    // Calculate luminance for shadows/highlights adjustments\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    \n    // Apply highlights adjustments\n    if (lumetri.highlights !== 0) {\n      const highlightInfluence = Math.pow(luminance, 2); // Affects brighter areas more\n      const adjustment = (lumetri.highlights / 150) * 0.5; // Scale appropriately for new range\n      r += adjustment * highlightInfluence;\n      g += adjustment * highlightInfluence;\n      b += adjustment * highlightInfluence;\n    }\n    \n    // Apply shadows adjustments\n    if (lumetri.shadows !== 0) {\n      const shadowInfluence = Math.pow(1 - luminance, 2); // Affects darker areas more\n      const adjustment = (lumetri.shadows / 150) * 0.5; // Scale appropriately for new range\n      r += adjustment * shadowInfluence;\n      g += adjustment * shadowInfluence;\n      b += adjustment * shadowInfluence;\n    }\n    \n    // Apply whites/blacks adjustments\n    if (lumetri.whites !== 0) {\n      const whitesInfluence = Math.pow(luminance, 4); // Affects only the brightest areas\n      const adjustment = (lumetri.whites / 150) * 0.5; // Scale for new range\n      r += adjustment * whitesInfluence;\n      g += adjustment * whitesInfluence;\n      b += adjustment * whitesInfluence;\n    }\n    \n    if (lumetri.blacks !== 0) {\n      const blacksInfluence = Math.pow(1 - luminance, 4); // Affects only the darkest areas\n      const adjustment = (lumetri.blacks / 150) * 0.5; // Scale for new range\n      r += adjustment * blacksInfluence;\n      g += adjustment * blacksInfluence;\n      b += adjustment * blacksInfluence;\n    }\n    \n    // Apply temperature and tint\n    if (lumetri.temperature !== 0 || lumetri.tint !== 0) {\n      // Temperature: blue-yellow shift\n      const temp = lumetri.temperature / 150; // Scale to -1..1 for new range\n      if (temp < 0) {\n        // Warmer (more yellow)\n        r *= (1 - temp * 0.2);\n        g *= (1 - temp * 0.1);\n        b *= (1 + temp * 0.3);\n      } else {\n        // Cooler (more blue)\n        r *= (1 - temp * 0.2);\n        g *= (1 - temp * 0.1);\n        b *= (1 + temp * 0.3);\n      }\n      \n      // Tint: green-magenta shift\n      const tintVal = lumetri.tint / 150; // Scale to -1..1 for new range\n      if (tintVal > 0) {\n        // More magenta\n        r *= (1 + tintVal * 0.1);\n        g *= (1 - tintVal * 0.1);\n        b *= (1 + tintVal * 0.1);\n      } else {\n        // More green\n        r *= (1 + tintVal * 0.1);\n        g *= (1 - tintVal * 0.1);\n        b *= (1 + tintVal * 0.1);\n      }\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Process the image based on current app mode\nexport function processImage(originalImage) {\n  console.log(`Processing image in ${appState.activeMode} mode`);\n  \n  if (appState.activeMode === 'basic') {\n    return processImageBasic(originalImage);\n  } else {\n    return processImageAdvanced(originalImage);\n  }\n}\n\n// Apply the current adjustments to the displayed image\nexport function applyAdjustmentsToImage() {\n  const originalImage = appState.originalImageElement;\n  const processedImage = appState.processedImageElement;\n  \n  if (!originalImage || !processedImage) {\n    console.warn('Image elements not available');\n    return;\n  }\n  \n  console.log('Applying adjustments to image');\n  \n  // Process the image\n  const processedImageUrl = processImage(originalImage);\n  \n  if (processedImageUrl) {\n    // Update the processed image with the new data\n    processedImage.src = processedImageUrl;\n    console.log('Processed image updated successfully');\n  } else {\n    console.error('Failed to process image');\n  }\n}\n\n// Export the image processing functions\nexport default {\n  processImageBasic,\n  processImageAdvanced,\n  processImage,\n  applyAdjustmentsToImage\n};","// Import styles\nimport './styles/compare.css';\nimport './styles/base.css';\nimport './styles/layout.css';\nimport './styles/components.css';\nimport './styles/tools.css';\nimport './styles/themes.css';\nimport './styles/animations.css';\n\n// Import components\nimport { initCurvesPanel } from './components/curves/curves-panel.js';\nimport { initBasicCorrections, setupAdvancedControls } from './components/basic-corrections/basic-corrections.js';\nimport { initCreativeEffects } from './components/creative/creative-effects.js';\nimport { initColorWheels } from './components/color-wheels/color-wheels.js';\nimport { initImageComparison } from './components/image-preview/image-comparison.js';\nimport { initPreviewController } from './components/image-preview/preview-controller.js';\nimport { initPresets } from './components/presets/presets.js';\nimport { initUiElements } from './components/common/ui-elements.js';\n\n// Import services\nimport { initFileService } from './services/file-service.js';\nimport { initLutGenerator } from './services/lut-generator.js';\nimport { initExportService } from './services/export-service.js';\n\n// Import image processing utilities\nimport { processImage, applyAdjustmentsToImage } from './models/image-processor.js';\n\n// App state\nlet appState = {\n  activeMode: 'basic', // 'basic' or 'advanced'\n  originalImage: null,\n  processedImage: null,\n  currentLutParams: {\n    // Basic parameters\n    size: 32,\n    title: \"Signature Look\",\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0],\n    \n    // Advanced parameters will be added by the respective modules\n    lumetri: {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    }\n  }\n};\n\n// Initialize the application\nfunction initApp() {\n  console.log('LOTS App initializing...');\n  \n  // Make app state available globally for modules\n  window.appState = appState;\n  \n  // Initialize UI components\n  initUiElements();\n  initBasicCorrections();\n  initCreativeEffects();\n  initColorWheels();\n  initCurvesPanel();\n  initImageComparison();\n  initPreviewController();\n  initPresets();\n  \n  // Initialize services\n  initFileService();\n  initLutGenerator();\n  initExportService();\n  \n  // Set up mode toggle\n  setupModeToggle();\n  \n  // Set up window control buttons\n  setupWindowControls();\n  \n  console.log('LOTS App initialized successfully');\n}\n\n// Set up mode toggle (basic/advanced)\nfunction setupModeToggle() {\n  console.log('Setting up mode toggle...');\n  const modeToggle = document.getElementById('mode-toggle');\n  const basicControls = document.getElementById('basic-controls');\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (!modeToggle) {\n    console.error('Mode toggle element not found!');\n    return;\n  }\n  \n  if (!basicControls) {\n    console.error('Basic controls element not found!');\n    return;\n  }\n  \n  if (!advancedControls) {\n    console.error('Advanced controls element not found!');\n    return;\n  }\n  \n  console.log('Mode toggle elements found, adding event listener...');\n  \n  modeToggle.addEventListener('change', function() {\n    const isAdvancedMode = this.checked;\n    console.log(`Mode toggle changed. Advanced mode: ${isAdvancedMode}`);\n    \n    appState.activeMode = isAdvancedMode ? 'advanced' : 'basic';\n    \n    console.log(`Switching to ${appState.activeMode} mode`);\n    console.log(`Basic controls display: ${isAdvancedMode ? 'none' : 'block'}`);\n    console.log(`Advanced controls display: ${isAdvancedMode ? 'block' : 'none'}`);\n    \n    basicControls.style.display = isAdvancedMode ? 'none' : 'block';\n    advancedControls.style.display = isAdvancedMode ? 'block' : 'none';\n    \n    // When switching to advanced mode, ensure all advanced sections are properly initialized\n    if (isAdvancedMode && typeof setupAdvancedControls === 'function') {\n      try {\n        console.log('Setting up advanced controls...');\n        setupAdvancedControls();\n        console.log('Advanced controls setup complete');\n      } catch (error) {\n        console.error('Error setting up advanced controls:', error);\n      }\n    }\n    \n    // Apply current image adjustments with the new mode\n    if (appState.originalImage && appState.processedImage) {\n      console.log('Applying image adjustments after mode switch');\n      applyImageAdjustments();\n    }\n  });\n  \n  console.log('Mode toggle setup completed');\n}\n\n// Set up window control buttons for Electron\nfunction setupWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Apply adjustments to image based on current mode and parameters\nfunction applyImageAdjustments() {\n  if (!appState.originalImage) {\n    console.warn('No original image to process');\n    return;\n  }\n  \n  console.log(`Applying image adjustments in ${appState.activeMode} mode`);\n  \n  // Actually process the image instead of just logging\n  try {\n    // Use the image processor to apply adjustments\n    const processedImageUrl = processImage(appState.originalImageElement);\n    \n    // Update the processed image with the new data\n    if (processedImageUrl && appState.processedImageElement) {\n      appState.processedImageElement.src = processedImageUrl;\n      console.log('Processed image updated');\n    } else {\n      console.warn('Failed to update processed image');\n    }\n  } catch (error) {\n    console.error('Error processing image:', error);\n  }\n}\n\n// In app.js, add a centralized section toggle function\nfunction setupAllSectionToggles() {\n  const toggles = document.querySelectorAll('.lumetri-section h3');\n  \n  toggles.forEach(toggle => {\n    // Remove any existing click listeners\n    const clone = toggle.cloneNode(true);\n    toggle.parentNode.replaceChild(clone, toggle);\n    \n    // Get the associated content section\n    const content = clone.nextElementSibling;\n    if (!content || !content.classList.contains('section-content')) {\n      console.error('Missing content section for toggle:', clone.id);\n      return;\n    }\n    \n    // Add new click listener\n    clone.addEventListener('click', () => {\n      console.log(`Toggle clicked for: ${clone.id} (centralized handler)`);\n      clone.classList.toggle('expanded');\n      content.classList.toggle('expanded');\n      \n      // Force redraw\n      content.offsetHeight;\n    });\n  });\n\n\n// Add this debugging code to app.js (anywhere after DOM load)\nfunction debugSections() {\n  console.log(\"======= DEBUG SECTIONS =======\");\n  \n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section' },\n    { toggle: 'creative-toggle', content: 'creative-section' },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section' },\n    { toggle: 'curves-toggle', content: 'curves-section' }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    console.log(`Toggle [${section.toggle}]: ${toggle ? 'Found' : 'NOT FOUND'}`);\n    console.log(`Content [${section.content}]: ${content ? 'Found' : 'NOT FOUND'}`);\n    \n    if (toggle && content) {\n      console.log(`- Toggle has 'expanded' class: ${toggle.classList.contains('expanded')}`);\n      console.log(`- Content has 'expanded' class: ${content.classList.contains('expanded')}`);\n      console.log(`- Content style.maxHeight: ${content.style.maxHeight}`);\n      console.log(`- Content offsetHeight: ${content.offsetHeight}px`);\n      console.log(`- Content computedStyle.maxHeight: ${window.getComputedStyle(content).maxHeight}`);\n      console.log(`- Content style.display: ${window.getComputedStyle(content).display}`);\n    }\n  });\n  \n  console.log(\"============================\");\n}\n\n// Call this debugging function after initialization\nsetTimeout(debugSections, 1000);\n\n\n\n// Add this to app.js or create a new file called section-fix.js\nfunction fixSectionToggles() {\n  // Remove all existing event listeners by cloning nodes\n  function removeExistingListeners(elementId) {\n    const element = document.getElementById(elementId);\n    if (!element) return null;\n    \n    const clone = element.cloneNode(true);\n    element.parentNode.replaceChild(clone, element);\n    return clone;\n  }\n  \n  // Get sections we need to fix\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section' },\n    { toggle: 'creative-toggle', content: 'creative-section' },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section' },\n    { toggle: 'curves-toggle', content: 'curves-section' }\n  ];\n  \n  // Apply the fix to each section\n  sections.forEach(section => {\n    const toggle = removeExistingListeners(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (!toggle || !content) {\n      console.error(`Cannot fix section - missing elements: ${section.toggle} or ${section.content}`);\n      return;\n    }\n    \n    // Set initial state directly\n    if (toggle.classList.contains('expanded')) {\n      content.style.display = 'block';\n      content.style.maxHeight = '1000px';\n      content.style.opacity = '1';\n    } else {\n      content.style.display = 'none';\n      content.style.maxHeight = '0';\n      content.style.opacity = '0';\n    }\n    \n    // Add a completely new click handler\n    toggle.addEventListener('click', function() {\n      console.log(`FIXED handler - Toggle clicked: ${section.toggle}`);\n      \n      // Toggle expanded class\n      this.classList.toggle('expanded');\n      \n      // Toggle visibility with direct style manipulation\n      if (this.classList.contains('expanded')) {\n        content.style.display = 'block';\n        // Force a reflow before changing properties for animation\n        content.offsetHeight;\n        content.style.maxHeight = '1000px';\n        content.style.opacity = '1';\n      } else {\n        content.style.maxHeight = '0';\n        content.style.opacity = '0';\n        // Hide after transition completes\n        setTimeout(() => {\n          if (!this.classList.contains('expanded')) {\n            content.style.display = 'none';\n          }\n        }, 300); // Match your CSS transition duration\n      }\n    });\n    \n    console.log(`Fixed toggle handler for: ${section.toggle}`);\n  });\n  \n  console.log(\"All section toggles have been fixed with direct style manipulation\");\n}\n\n// Call our fix function after DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Wait a short time to ensure all other initialization is done\n  setTimeout(fixSectionToggles, 500);\n});\n\n\nfunction addOverrideStyles() {\n  const styleElement = document.createElement('style');\n  styleElement.textContent = `\n    /* Override styles to fix section toggling */\n    .section-content {\n      transition: max-height 0.3s ease, opacity 0.3s ease;\n    }\n    \n    .lumetri-section h3.expanded + .section-content {\n      display: block !important;\n      max-height: 1000px !important;\n      opacity: 1 !important;\n      overflow: visible !important;\n    }\n    \n    .lumetri-section h3:not(.expanded) + .section-content {\n      max-height: 0 !important;\n      opacity: 0 !important;\n      overflow: hidden !important;\n    }\n    \n    /* Add a visual indicator for debug purposes */\n    .lumetri-section h3::after {\n      content: \" ▼\";\n      transition: transform 0.3s ease;\n    }\n    \n    .lumetri-section h3.expanded::after {\n      transform: rotate(180deg);\n    }\n  `;\n  \n  document.head.appendChild(styleElement);\n  console.log(\"Override styles added to fix section toggling\");\n}\n\n// Call this immediately\naddOverrideStyles();\n\n\n\n\n\n// Add these emergency buttons as a last resort\nsetTimeout(addEmergencyToggles, 1000);\n\n  console.log('All section toggles set up in centralized function');\n}\n\n// Call this after initializing all components\ndocument.addEventListener('DOMContentLoaded', () => {\n  // ... other initialization\n  setupAllSectionToggles();\n});\n\n// Apply basic mode adjustments\nfunction applyBasicAdjustments() {\n  console.log('Applying basic adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Apply advanced mode adjustments\nfunction applyAdvancedAdjustments() {\n  console.log('Applying advanced Lumetri-style adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Make certain functions available globally\nwindow.applyImageAdjustments = applyImageAdjustments;\n\n// Initialize the app when the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// Export functions for use in other modules\nexport { \n  appState,\n  applyImageAdjustments,\n  applyBasicAdjustments,\n  applyAdvancedAdjustments\n};","// Import app state\nimport { appState } from '../../app.js';\n\n// Initialize image comparison\nexport function initImageComparison() {\n  console.log('Initializing Image Comparison');\n  // Will implement comparison slider functionality \n}\n\n// Export functions\nexport default {\n  initImageComparison\n};"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","defaultCurveParams","rgb","x","y","red","green","blue","currentChannel","isLinearCurve","points","i","length","expectedY","Math","abs","interpolateCurve","value","p1","p2","t","CurvesPanel","params","arguments","undefined","_classCallCheck","this","_objectSpread","JSON","parse","stringify","curveCanvas","curveCtx","channelButtons","activePoint","init","bind","drawCurve","handleMouseDown","handleMouseMove","handleMouseUp","resetCurve","console","log","document","getElementById","getContext","setupEvents","updateChannelButtonUI","warn","_this","addEventListener","_loop","channel","btn","resetCurveBtn","classList","add","remove","applyImageAdjustments","_this2","width","height","clearRect","curveColor","fillStyle","fillRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","forEach","point","index","arc","PI","fill","e","rect","getBoundingClientRect","clientX","left","clientY","top","minDistance","Infinity","closestPoint","pointIndex","dx","dy","distance","sqrt","max","min","prevX","nextX","r","g","b","rgbPoints","imageData","data","result","applyCurves","round","curvesPanel","tempToKelvin","createAdvancedSlider","container","options","id","label","step","initialValue","paramName","isTemperature","concat","sliderContainer","createElement","className","labelElement","setAttribute","textContent","valueDisplay","kelvinValue","toFixed","appendChild","slider","type","appState","currentLutParams","lumetri","parseFloat","error","resetAdvancedControls","exposure","contrast","highlights","shadows","whites","blacks","temperature","tint","querySelectorAll","split","setupSlider","basic","applyBasicCorrections","applyContrast","redBalance","greenBalance","blueBalance","saturation","luminance","shadowsShift","highlightsShift","shadowEffect","pow","highlightEffect","creative","applyVibrance","amount","maxChannel","minChannel","vibranceEffect","applyFadedFilm","fadeAmount","blackShift","setupColorWheel","wheel","innerHTML","canvas","clientWidth","clientHeight","style","background","backgroundImage","indicator","tintValue","colorWheels","centerX","centerY","maxDistance","normalizedR","normalizedG","normalizedB","hue","atan2","cos","sin","setWheelIndicatorPosition","isMouseDown","updateWheelFromEvent","angle","h","s","floor","f","p","q","hsvToRgb","mappedR","mappedG","mappedB","resetColorWheels","shadowTint","highlightTint","tintBalance","tintBalanceSlider","tintBalanceValue","shadowColorWheel","highlightColorWheel","shadowIndicator","querySelector","highlightIndicator","applyColorWheels","shadowInfluence","highlightInfluence","currentSliderPosition","handleImageUpload","window","electronAPI","openFileDialog","properties","filters","name","extensions","then","imagePath","originalImageElement","src","fallbackFileUpload","input","accept","files","file","reader","FileReader","onload","event","target","readAsDataURL","click","setViewMode","mode","resetPosition","viewSplitBtn","viewBeforeBtn","viewAfterBtn","originalImageContainer","comparisonSlider","verticalDivider","clipPath","display","builtInPresets","userPresets","updateSlider","sliderId","updateLUTPreview","fullPreview","lutPreview","lutContent","generateCubeLUT","slice","showToast","message","duration","toastContainer","body","toast","setTimeout","removeChild","_regeneratorRuntime","n","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","saveLutFile","_x","_saveLutFile","apply","_callee2","content","defaultFilename","filename","filePath","blob","url","_args2","_context2","endsWith","saveLut","defaultPath","Blob","URL","createObjectURL","href","download","revokeObjectURL","t0","_next","_throw","lutParams","size","title","redValue","greenValue","blueValue","activeMode","applyBasicLutAdjustments","applyAdvancedLutAdjustments","tempResult","applyTemperatureAndTint","exposureFactor","contrastValue","toneResult","totalEffect","applyToneAdjustments","colorWheelResult","curves","vibrance","vibranceAmount","fadedFilm","fadedResult","handleExportLut","_handleExportLut","_callee","_context","formatFilename","replace","toLowerCase","processImage","originalImage","ctx","naturalWidth","naturalHeight","drawImage","getImageData","putImageData","toDataURL","processImageBasic","contrastFactor","midpoint","adjustment","whitesInfluence","blacksInfluence","temp","tintVal","applyLumetriAdjustments","applyColorWheelAdjustments","applyCreativeEffects","applyCurvesToImage","processImageAdvanced","processedImage","processedImageUrl","processedImageElement","styleElement","fixSectionToggles","toggle","section","elementId","element","clone","cloneNode","parentNode","replaceChild","removeExistingListeners","contains","maxHeight","opacity","offsetHeight","nextElementSibling","getComputedStyle","head","addEmergencyToggles","setupAllSectionToggles","saveLutBtn","saveLutBtnAdvanced","minimizeBtn","maximizeBtn","closeBtn","viewCodeBtn","viewCodeBtnAdvanced","codeModal","closeModalBtn","modal","initModals","expanded","isExpanding","windowControl","contrastSlider","saturationSlider","redBalanceSlider","greenBalanceSlider","blueBalanceSlider","saturationValue","redBalanceValue","greenBalanceValue","blueBalanceValue","setupBasicControls","titleInput","lutSizeSelect","parseInt","initTitleAndSizeControls","fadedFilmSlider","vibranceSlider","fadedFilmValue","vibranceValue","initCreativeEffects","resetButton","initColorWheels","readyState","originalPlaceholder","comparisonContainer","imageUploadBtn","isSliding","startX","startPercent","updateSliderPosition","percent","sliderLeft","preventDefault","deltaPercent","touches","closest","initComparisonSlider","initPreviewController","presetButtons","presetId","advancedParams","preset","activePresetId","_toConsumableArray","advanced","savedPresets","localStorage","getItem","loadUserPresets","initPresets","modeToggle","basicControls","advancedControls","isAdvancedMode","checked","lumetriSection","basicCorrectionToggle","basicCorrectionSection","onclick","setupAdvancedControls","setupModeToggle","setupWindowControls"],"sourceRoot":""}