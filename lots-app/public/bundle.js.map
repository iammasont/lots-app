{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://lots-app/webpack/bootstrap","webpack://lots-app/webpack/runtime/define property getters","webpack://lots-app/webpack/runtime/hasOwnProperty shorthand","webpack://lots-app/./lots-app/src/components/curves/curves-panel.js","webpack://lots-app/./lots-app/src/components/basic-corrections/basic-corrections.js","webpack://lots-app/./lots-app/src/components/creative/creative-effects.js","webpack://lots-app/./lots-app/src/components/color-wheels/color-wheels.js","webpack://lots-app/./lots-app/src/components/image-preview/preview-controller.js","webpack://lots-app/./lots-app/src/components/presets/presets.js","webpack://lots-app/./lots-app/src/components/common/ui-elements.js","webpack://lots-app/./lots-app/src/services/file-service.js","webpack://lots-app/./lots-app/src/services/lut-generator.js","webpack://lots-app/./lots-app/src/services/export-service.js","webpack://lots-app/./lots-app/src/models/image-processor.js","webpack://lots-app/./lots-app/src/app.js","webpack://lots-app/./lots-app/src/components/image-preview/image-comparison.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// components/curves/curves-panel.js\n// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Default curve parameters - only two points for a straight line\nexport const defaultCurveParams = {\n  rgb: [\n    { x: 0, y: 0 },      // Shadow point\n    { x: 1, y: 1 }       // Highlight point\n  ],\n  red: [\n    { x: 0, y: 0 },\n    { x: 1, y: 1 }\n  ],\n  green: [\n    { x: 0, y: 0 },\n    { x: 1, y: 1 }\n  ],\n  blue: [\n    { x: 0, y: 0 },\n    { x: 1, y: 1 }\n  ],\n  currentChannel: 'rgb'\n};\n\n// Check if a curve is linear (no adjustments)\nexport function isLinearCurve(points) {\n  for (let i = 0; i < points.length; i++) {\n    const expectedY = points[i].x;\n    if (Math.abs(points[i].y - expectedY) > 0.01) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Interpolate a value through a curve\nexport function interpolateCurve(points, value) {\n  // Handle edge cases\n  if (value <= 0) return points[0].y;\n  if (value >= 1) return points[points.length - 1].y;\n  \n  // Find the segment containing the value\n  let i = 0;\n  while (i < points.length - 1 && points[i + 1].x < value) {\n    i++;\n  }\n  \n  // Get the segment points\n  const p1 = points[i];\n  const p2 = points[i + 1];\n  \n  // Calculate the t parameter (0-1) within this segment\n  const segmentLength = p2.x - p1.x;\n  const t = segmentLength === 0 ? 0 : (value - p1.x) / segmentLength;\n  \n  // Simple linear interpolation for direct curve segments\n  return p1.y + t * (p2.y - p1.y);\n}\n\n// Main Curves class\nclass CurvesPanel {\n  constructor(params = {}) {\n    // Merge provided params with defaults\n    this.params = {\n      ...JSON.parse(JSON.stringify(defaultCurveParams)),\n      ...params\n    };\n    \n    // DOM references\n    this.curveCanvas = null;\n    this.curveCtx = null;\n    this.channelButtons = {};\n    this.activePoint = null;\n    this.pointRadius = 5;\n    this.gridColor = 'rgba(100, 100, 100, 0.3)';\n    this.baseLineColor = 'rgba(100, 100, 100, 0.5)';\n    this.curveColors = {\n      rgb: 'rgba(255, 255, 255, 0.9)',\n      red: 'rgba(255, 100, 100, 0.9)',\n      green: 'rgba(100, 255, 100, 0.9)',\n      blue: 'rgba(100, 100, 255, 0.9)'\n    };\n    \n    // Keyboard state\n    this.shiftPressed = false;\n    this.altPressed = false;\n    \n    // Bind methods to maintain correct context\n    this.init = this.init.bind(this);\n    this.drawCurve = this.drawCurve.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.resetCurve = this.resetCurve.bind(this);\n    this.findNearestPoint = this.findNearestPoint.bind(this);\n    this.addPoint = this.addPoint.bind(this);\n    this.removePoint = this.removePoint.bind(this);\n  }\n  \n  // Initialize the curves panel UI\n  init() {\n    console.log('Initializing Curves Panel');\n    \n    // Get references to curve UI elements\n    this.curveCanvas = document.getElementById('curve-canvas');\n    \n    if (!this.curveCanvas) {\n      console.warn('Curve canvas not found');\n      return;\n    }\n    \n    this.curveCtx = this.curveCanvas.getContext('2d');\n    \n    // Get channel selector buttons\n    this.channelButtons = {\n      rgb: document.getElementById('curve-rgb'),\n      red: document.getElementById('curve-red'),\n      green: document.getElementById('curve-green'),\n      blue: document.getElementById('curve-blue')\n    };\n    \n    // Set up event listeners\n    this.setupEvents();\n    \n    // Initial UI setup\n    this.updateChannelButtonUI();\n    \n    // Initialize by drawing the curve\n    this.drawCurve();\n  }\n  \n  // Set up all event listeners\n  setupEvents() {\n    // Ensure methods are bound\n    if (!this.curveCanvas) return;\n    \n    // Canvas event handling\n    this.curveCanvas.addEventListener('mousedown', this.handleMouseDown);\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n    \n    // Keyboard event listeners for Shift and Alt keys\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n    \n    // Channel selector buttons\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        btn.addEventListener('click', () => {\n          // Set active channel\n          this.params.currentChannel = channel;\n          \n          // Update UI\n          this.updateChannelButtonUI();\n          this.drawCurve();\n        });\n      }\n    }\n    \n    // Reset button\n    const resetCurveBtn = document.getElementById('reset-curve-btn');\n    if (resetCurveBtn) {\n      resetCurveBtn.addEventListener('click', this.resetCurve);\n    }\n  }\n  \n  // Handle key down events\n  handleKeyDown(e) {\n    // Track Shift key (for adding points)\n    if (e.key === 'Shift') {\n      this.shiftPressed = true;\n      this.curveCanvas.style.cursor = 'crosshair';\n    }\n    \n    // Track Alt/Option key (for removing points)\n    if (e.key === 'Alt' || e.key === 'Option') {\n      this.altPressed = true;\n      this.curveCanvas.style.cursor = 'not-allowed';\n    }\n  }\n  \n  // Handle key up events\n  handleKeyUp(e) {\n    if (e.key === 'Shift') {\n      this.shiftPressed = false;\n      this.curveCanvas.style.cursor = 'default';\n    }\n    \n    if (e.key === 'Alt' || e.key === 'Option') {\n      this.altPressed = false;\n      this.curveCanvas.style.cursor = 'default';\n    }\n  }\n  \n  // Update channel button UI\n  updateChannelButtonUI() {\n    for (const channel in this.channelButtons) {\n      const btn = this.channelButtons[channel];\n      if (btn) {\n        if (channel === this.params.currentChannel) {\n          btn.classList.add('active');\n        } else {\n          btn.classList.remove('active');\n        }\n      }\n    }\n  }\n  \n  // Reset curve to linear\n  resetCurve() {\n    console.log('Resetting curve');\n    \n    // Reset current channel to default linear curve\n    this.params[this.params.currentChannel] = \n      JSON.parse(JSON.stringify(defaultCurveParams[this.params.currentChannel]));\n    \n    // Redraw\n    this.drawCurve();\n    \n    // Apply to image if available\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Draw the grid\n  drawGrid(width, height) {\n    this.curveCtx.strokeStyle = this.gridColor;\n    this.curveCtx.lineWidth = 1;\n    \n    // Draw vertical grid lines (5 lines including borders)\n    for (let i = 0; i <= 4; i++) {\n      const x = Math.round(width * (i / 4)) + 0.5; // Add 0.5 for sharp lines\n      this.curveCtx.beginPath();\n      this.curveCtx.moveTo(x, 0);\n      this.curveCtx.lineTo(x, height);\n      this.curveCtx.stroke();\n    }\n    \n    // Draw horizontal grid lines (5 lines including borders)\n    for (let i = 0; i <= 4; i++) {\n      const y = Math.round(height * (i / 4)) + 0.5; // Add 0.5 for sharp lines\n      this.curveCtx.beginPath();\n      this.curveCtx.moveTo(0, y);\n      this.curveCtx.lineTo(width, y);\n      this.curveCtx.stroke();\n    }\n    \n    // Draw the diagonal reference line\n    this.curveCtx.strokeStyle = this.baseLineColor;\n    this.curveCtx.beginPath();\n    this.curveCtx.moveTo(0, height);\n    this.curveCtx.lineTo(width, 0);\n    this.curveCtx.stroke();\n  }\n  \n  // Draw the curve onto the canvas\n  drawCurve() {\n    if (!this.curveCanvas || !this.curveCtx) {\n      console.warn('Canvas not ready for drawing');\n      return;\n    }\n    \n    const width = this.curveCanvas.width;\n    const height = this.curveCanvas.height;\n    \n    // Clear canvas\n    this.curveCtx.clearRect(0, 0, width, height);\n    \n    // Draw curve background\n    this.curveCtx.fillStyle = 'rgba(20, 20, 20, 0.4)';\n    this.curveCtx.fillRect(0, 0, width, height);\n    \n    // Draw grid\n    this.drawGrid(width, height);\n    \n    // Get current channel curve points\n    const points = this.params[this.params.currentChannel];\n    \n    // Set curve color based on channel\n    const curveColor = this.curveColors[this.params.currentChannel];\n    \n    // Sort points by X value to ensure proper curve rendering\n    const sortedPoints = [...points].sort((a, b) => a.x - b.x);\n    \n    // Draw the curve using direct line segments\n    this.drawDirectCurve(sortedPoints, width, height, curveColor);\n    \n    // Now draw the control points\n    this.drawControlPoints(sortedPoints, width, height);\n  }\n  \n  // Draw a direct curve with simple line segments\n  drawDirectCurve(points, width, height, curveColor) {\n    if (points.length < 2) return;\n    \n    // For rendering, we'll use a high resolution curve with many interpolated points\n    const resolution = 100; // Number of segments for smooth curve\n    const step = 1 / resolution;\n    \n    this.curveCtx.beginPath();\n    \n    // Start at the first point\n    this.curveCtx.moveTo(\n      points[0].x * width,\n      (1 - points[0].y) * height\n    );\n    \n    // For each segment between 0 and 1\n    for (let t = step; t <= 1; t += step) {\n      // Find the appropriate segment\n      let i = 0;\n      while (i < points.length - 1 && points[i + 1].x < t) {\n        i++;\n      }\n      \n      // Skip if we're already past the end\n      if (i >= points.length - 1) continue;\n      \n      const p1 = points[i];\n      const p2 = points[i + 1];\n      \n      // Skip if point is outside our current segment\n      if (t < p1.x || t > p2.x) continue;\n      \n      // Linear interpolation within this segment\n      const segmentT = (t - p1.x) / (p2.x - p1.x);\n      const y = p1.y + segmentT * (p2.y - p1.y);\n      \n      // Draw line to this point\n      this.curveCtx.lineTo(\n        t * width,\n        (1 - y) * height\n      );\n    }\n    \n    // Ensure we draw to the last point\n    this.curveCtx.lineTo(\n      points[points.length - 1].x * width,\n      (1 - points[points.length - 1].y) * height\n    );\n    \n    // Style and stroke the path\n    this.curveCtx.strokeStyle = curveColor;\n    this.curveCtx.lineWidth = 2;\n    this.curveCtx.stroke();\n  }\n  \n  // Draw the control points\n  drawControlPoints(points, width, height) {\n    points.forEach((point, index) => {\n      const isEndpoint = (index === 0 || index === points.length - 1);\n      const x = point.x * width;\n      const y = (1 - point.y) * height;\n      \n      // Draw point\n      this.curveCtx.beginPath();\n      this.curveCtx.arc(x, y, this.pointRadius, 0, Math.PI * 2);\n      \n      // Style based on whether it's an endpoint (fixed) or not\n      if (isEndpoint) {\n        this.curveCtx.fillStyle = 'rgba(150, 150, 150, 0.9)';\n      } else if (this.activePoint && this.activePoint.point === point) {\n        this.curveCtx.fillStyle = 'rgba(255, 255, 255, 1.0)';\n      } else {\n        this.curveCtx.fillStyle = 'rgba(220, 220, 220, 0.9)';\n      }\n      \n      this.curveCtx.fill();\n      this.curveCtx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n      this.curveCtx.lineWidth = 1;\n      this.curveCtx.stroke();\n    });\n  }\n  \n  // Find the nearest control point to the given coordinates\n  findNearestPoint(x, y) {\n    const points = this.params[this.params.currentChannel];\n    let minDistance = Infinity;\n    let nearestPoint = null;\n    let pointIndex = -1;\n    \n    points.forEach((point, index) => {\n      const dx = point.x - x;\n      const dy = point.y - y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestPoint = point;\n        pointIndex = index;\n      }\n    });\n    \n    return {\n      point: nearestPoint,\n      index: pointIndex,\n      distance: minDistance\n    };\n  }\n  \n  // Add a new point to the curve\n  addPoint(x, y) {\n    const points = this.params[this.params.currentChannel];\n    \n    // Find where to insert the new point (maintain x-ordering)\n    let insertIndex = points.length;\n    for (let i = 0; i < points.length; i++) {\n      if (x < points[i].x) {\n        insertIndex = i;\n        break;\n      }\n    }\n    \n    // Insert the new point\n    points.splice(insertIndex, 0, { x, y });\n    \n    // Redraw the curve\n    this.drawCurve();\n    \n    // Apply changes to image\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n    \n    return insertIndex;\n  }\n  \n  // Remove a point from the curve\n  removePoint(index) {\n    const points = this.params[this.params.currentChannel];\n    \n    // Don't remove endpoint (first and last points)\n    if (index > 0 && index < points.length - 1) {\n      points.splice(index, 1);\n      \n      // Redraw the curve\n      this.drawCurve();\n      \n      // Apply changes to image\n      if (typeof applyImageAdjustments === 'function') {\n        applyImageAdjustments();\n      }\n    }\n  }\n  \n  // Handle mouse down on curve\n  handleMouseDown(e) {\n    if (!this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Clamp values to 0-1 range\n    const clampedX = Math.max(0, Math.min(1, x));\n    const clampedY = Math.max(0, Math.min(1, y));\n    \n    // Find nearest point\n    const nearest = this.findNearestPoint(clampedX, clampedY);\n    \n    // Handle adding a point with Shift key\n    if (this.shiftPressed) {\n      // If not too close to existing point, add a new one\n      if (nearest.distance > 0.05) {\n        this.addPoint(clampedX, clampedY);\n      }\n      return;\n    }\n    \n    // Handle removing a point with Alt/Option key\n    if (this.altPressed) {\n      // If close to a point and not an endpoint, remove it\n      if (nearest.distance < 0.05 && nearest.index > 0 && nearest.index < this.params[this.params.currentChannel].length - 1) {\n        this.removePoint(nearest.index);\n      }\n      return;\n    }\n    \n    // If close enough to a point, select it\n    if (nearest.distance < 0.05) {\n      // Don't allow moving first or last point horizontally\n      if (nearest.index > 0 && nearest.index < this.params[this.params.currentChannel].length - 1) {\n        this.activePoint = {\n          point: nearest.point,\n          index: nearest.index,\n          startX: clampedX,\n          startY: clampedY\n        };\n      } else {\n        // Endpoints can only move vertically\n        this.activePoint = {\n          point: nearest.point,\n          index: nearest.index,\n          startX: clampedX,\n          startY: clampedY,\n          verticalOnly: true\n        };\n      }\n      \n      // Redraw to highlight the active point\n      this.drawCurve();\n    }\n  }\n  \n  // Handle mouse move\n  handleMouseMove(e) {\n    if (!this.activePoint || !this.curveCanvas) return;\n    \n    const rect = this.curveCanvas.getBoundingClientRect();\n    let x = (e.clientX - rect.left) / rect.width;\n    let y = 1 - (e.clientY - rect.top) / rect.height;\n    \n    // Clamp values\n    x = Math.max(0, Math.min(1, x));\n    y = Math.max(0, Math.min(1, y));\n    \n    const points = this.params[this.params.currentChannel];\n    const index = this.activePoint.index;\n    \n    // If vertical only (endpoints), only update Y\n    if (this.activePoint.verticalOnly) {\n      points[index].y = y;\n    } else {\n      // For middle points, enforce x-ordering\n      const prevX = (index > 0) ? points[index - 1].x + 0.01 : 0;\n      const nextX = (index < points.length - 1) ? points[index + 1].x - 0.01 : 1;\n      \n      // Update point position\n      points[index].x = Math.max(prevX, Math.min(nextX, x));\n      points[index].y = y;\n    }\n    \n    // Redraw the curve\n    this.drawCurve();\n    \n    // Apply changes to image\n    if (typeof applyImageAdjustments === 'function') {\n      applyImageAdjustments();\n    }\n  }\n  \n  // Handle mouse up\n  handleMouseUp(e) {\n    this.activePoint = null;\n    this.drawCurve(); // Redraw to update highlighting\n  }\n  \n  // Apply curves to RGB values\n  applyCurves(r, g, b) {\n    // Apply RGB curve\n    const rgbPoints = this.params.rgb;\n    \n    r = interpolateCurve(rgbPoints, r);\n    g = interpolateCurve(rgbPoints, g);\n    b = interpolateCurve(rgbPoints, b);\n    \n    // Apply individual channel curves if not linear\n    if (!isLinearCurve(this.params.red)) {\n      r = interpolateCurve(this.params.red, r);\n    }\n    \n    if (!isLinearCurve(this.params.green)) {\n      g = interpolateCurve(this.params.green, g);\n    }\n    \n    if (!isLinearCurve(this.params.blue)) {\n      b = interpolateCurve(this.params.blue, b);\n    }\n    \n    return { r, g, b };\n  }\n  \n  // Apply curves to an entire image\n  applyCurvesToImage(imageData) {\n    const data = imageData.data;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      // Get RGB values and normalize to 0-1\n      let r = data[i] / 255;\n      let g = data[i + 1] / 255;\n      let b = data[i + 2] / 255;\n      \n      // Apply curves\n      const result = this.applyCurves(r, g, b);\n      \n      // Convert back to 0-255 range\n      data[i] = Math.round(result.r * 255);\n      data[i + 1] = Math.round(result.g * 255);\n      data[i + 2] = Math.round(result.b * 255);\n      // Alpha remains unchanged\n    }\n    \n    return imageData;\n  }\n}\n\n// Single instance for the app\nlet curvesPanel = null;\n\n// Initialize the curves panel\nexport function initCurvesPanel() {\n  console.log('Setting up Curves Panel');\n  \n  // Initialize curves parameters in app state if not present\n  if (!appState.currentLutParams.curves) {\n    appState.currentLutParams.curves = JSON.parse(JSON.stringify(defaultCurveParams));\n  }\n  \n  // Create the curves panel with parameters from app state\n  curvesPanel = new CurvesPanel(appState.currentLutParams.curves);\n  \n  // Set up section toggle\n  setupSectionToggle('curves-toggle', 'curves-section');\n  \n  // Initialize when DOM is ready\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    setTimeout(() => curvesPanel.init(), 0);\n  } else {\n    document.addEventListener('DOMContentLoaded', () => curvesPanel.init());\n  }\n  \n  // Store reference in app state\n  appState.curvesPanel = curvesPanel;\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n      \n      if (section.classList.contains('expanded')) {\n        section.style.display = 'block';\n        section.style.maxHeight = '1000px'; \n        section.style.opacity = '1';\n      } else {\n        section.style.maxHeight = '0';\n        section.style.opacity = '0';\n        setTimeout(() => {\n          if (!section.classList.contains('expanded')) {\n            section.style.display = 'none';\n          }\n        }, 300);\n      }\n    });\n  }\n}\n\n// Apply curves to an image\nexport function applyCurvesToImage(imageData) {\n  if (curvesPanel) {\n    return curvesPanel.applyCurvesToImage(imageData);\n  }\n  return imageData;\n}","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Basic Corrections component\nexport function initBasicCorrections() {\n  console.log('Initializing Basic Corrections');\n  \n  // Initialize basic correction parameters if not present\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {\n      contrast: 1.2,\n      saturation: 1.15,\n      redBalance: 1.05,\n      greenBalance: 0.95,\n      blueBalance: 1.1\n    };\n  }\n  \n  // Initialize advanced parameters if not present\n  if (!appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri = {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    };\n  }\n  \n  // Set up basic mode controls\n  setupBasicControls();\n  \n  // Initialize LUT title and size controls\n  initTitleAndSizeControls();\n  \n  console.log('Basic Corrections initialized successfully');\n}\n\n// Set up basic mode slider controls\nfunction setupBasicControls() {\n  console.log('Setting up basic controls');\n  \n  // Get slider references\n  const contrastSlider = document.getElementById('contrast');\n  const saturationSlider = document.getElementById('saturation');\n  const redBalanceSlider = document.getElementById('red-balance');\n  const greenBalanceSlider = document.getElementById('green-balance');\n  const blueBalanceSlider = document.getElementById('blue-balance');\n  \n  // Display value references\n  const contrastValue = document.getElementById('contrast-value');\n  const saturationValue = document.getElementById('saturation-value');\n  const redBalanceValue = document.getElementById('red-balance-value');\n  const greenBalanceValue = document.getElementById('green-balance-value');\n  const blueBalanceValue = document.getElementById('blue-balance-value');\n  \n  // Report missing elements\n  if (!contrastSlider) console.warn('Contrast slider not found');\n  if (!saturationSlider) console.warn('Saturation slider not found');\n  if (!redBalanceSlider) console.warn('Red balance slider not found');\n  if (!greenBalanceSlider) console.warn('Green balance slider not found');\n  if (!blueBalanceSlider) console.warn('Blue balance slider not found');\n  \n  // Set up event listeners for sliders\n  setupSlider(contrastSlider, contrastValue, 'contrast');\n  setupSlider(saturationSlider, saturationValue, 'saturation');\n  setupSlider(redBalanceSlider, redBalanceValue, 'redBalance');\n  setupSlider(greenBalanceSlider, greenBalanceValue, 'greenBalance');\n  setupSlider(blueBalanceSlider, blueBalanceValue, 'blueBalance');\n  \n  // Set up reset button\n  setupResetButton();\n  \n  console.log('Basic controls setup complete');\n}\n\n// Set up reset button functionality\nfunction setupResetButton() {\n  const resetBtn = document.getElementById('reset-basic-btn');\n  \n  if (resetBtn) {\n    resetBtn.addEventListener('click', resetBasicControls);\n  } else {\n    console.warn('Reset button not found in HTML');\n  }\n}\n\n// Reset basic controls to one/neutral values\nfunction resetBasicControls() {\n  console.log('Resetting basic controls to neutral values (1.0)');\n  \n  // Reset all basic parameters to 1.0 (neutral)\n  appState.currentLutParams.basic = {\n    contrast: 1.0,\n    saturation: 1.0,\n    redBalance: 1.0,\n    greenBalance: 1.0,\n    blueBalance: 1.0,\n    shadowsShift: [0, 0, 0],\n    highlightsShift: [0, 0, 0]\n  };\n  \n  // Update all slider controls to match reset values\n  const sliders = {\n    'contrast': document.getElementById('contrast'),\n    'saturation': document.getElementById('saturation'),\n    'red-balance': document.getElementById('red-balance'),\n    'green-balance': document.getElementById('green-balance'),\n    'blue-balance': document.getElementById('blue-balance')\n  };\n  \n  const values = {\n    'contrast': document.getElementById('contrast-value'),\n    'saturation': document.getElementById('saturation-value'),\n    'red-balance': document.getElementById('red-balance-value'),\n    'green-balance': document.getElementById('green-balance-value'),\n    'blue-balance': document.getElementById('blue-balance-value')\n  };\n  \n  // Update each slider and its displayed value\n  for (const key in sliders) {\n    if (sliders[key]) {\n      sliders[key].value = 1.0;\n    }\n    if (values[key]) {\n      values[key].textContent = '1.00';\n    }\n  }\n  \n  // Apply changes\n  applyImageAdjustments();\n}\n\n// Set up a slider control with its value display for basic mode\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) {\n    console.warn(`Cannot set up slider: ${paramName} - missing elements`);\n    return;\n  }\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.basic[paramName];\n  valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.basic[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.basic[paramName].toFixed(2);\n    \n    console.log(`Basic parameter updated: ${paramName} = ${slider.value}`);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Initialize title and LUT size controls\nfunction initTitleAndSizeControls() {\n  console.log('Initializing title and LUT size controls');\n  \n  const titleInput = document.getElementById('title');\n  const lutSizeSelect = document.getElementById('lut-size');\n  \n  if (!titleInput) console.warn('Title input not found');\n  if (!lutSizeSelect) console.warn('LUT size select not found');\n  \n  if (titleInput) {\n    // Set initial value\n    titleInput.value = appState.currentLutParams.title || \"Signature Look\";\n    \n    // Add event listener\n    titleInput.addEventListener('input', () => {\n      appState.currentLutParams.title = titleInput.value;\n    });\n  }\n  \n  if (lutSizeSelect) {\n    // Set initial value\n    lutSizeSelect.value = appState.currentLutParams.size || \"32\";\n    \n    // Add event listener\n    lutSizeSelect.addEventListener('change', () => {\n      appState.currentLutParams.size = parseInt(lutSizeSelect.value);\n    });\n  }\n}\n\n// Set up advanced mode controls\nexport function setupAdvancedControls() {\n  console.log('Setting up advanced mode controls...');\n  \n  // Get references to the advanced controls container\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (!advancedControls) {\n    console.error('Advanced controls container not found!');\n    return;\n  }\n  \n  // Check if the lumetri section already exists\n  let lumetriSection = advancedControls.querySelector('.lumetri-section');\n  \n  // If not, create it from scratch\n  if (!lumetriSection) {\n    lumetriSection = document.createElement('div');\n    lumetriSection.className = 'lumetri-section';\n    advancedControls.appendChild(lumetriSection);\n  }\n  \n  // Check for the toggle and section elements\n  let basicCorrectionToggle = document.getElementById('basic-correction-toggle');\n  let basicCorrectionSection = document.getElementById('basic-correction-section');\n  \n  // If they don't exist, create them\n  if (!basicCorrectionToggle) {\n    basicCorrectionToggle = document.createElement('h3');\n    basicCorrectionToggle.id = 'basic-correction-toggle';\n    basicCorrectionToggle.className = 'expanded';\n    basicCorrectionToggle.textContent = 'Basic Correction';\n    lumetriSection.appendChild(basicCorrectionToggle);\n  }\n  \n  if (!basicCorrectionSection) {\n    basicCorrectionSection = document.createElement('div');\n    basicCorrectionSection.id = 'basic-correction-section';\n    basicCorrectionSection.className = 'section-content expanded';\n    lumetriSection.appendChild(basicCorrectionSection);\n  }\n  \n  // Clear any existing content in the section\n  basicCorrectionSection.innerHTML = '';\n  \n  // Ensure the section is visible and expanded\n  basicCorrectionToggle.classList.add('expanded');\n  basicCorrectionSection.classList.add('expanded');\n  basicCorrectionSection.style.display = 'block';\n  basicCorrectionSection.style.maxHeight = '1000px';\n  \n  // Set up toggle click handler explicitly\n  basicCorrectionToggle.onclick = function() {\n    console.log('Basic correction toggle clicked');\n    this.classList.toggle('expanded');\n    \n    if (this.classList.contains('expanded')) {\n      basicCorrectionSection.classList.add('expanded');\n      basicCorrectionSection.style.display = 'block';\n      setTimeout(() => {\n        basicCorrectionSection.style.maxHeight = '1000px';\n      }, 10);\n    } else {\n      basicCorrectionSection.classList.remove('expanded');\n      basicCorrectionSection.style.maxHeight = '0';\n      setTimeout(() => {\n        basicCorrectionSection.style.display = 'none';\n      }, 300);\n    }\n  };\n  \n  // Create sliders inside the section\n  console.log('Creating advanced sliders...');\n  \n  // Create exposure control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'exposure-advanced',\n    label: 'Exposure',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.exposure || 0,\n    paramName: 'exposure'\n  });\n  \n  // Create contrast control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'contrast-advanced',\n    label: 'Contrast',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.contrast || 0,\n    paramName: 'contrast'\n  });\n  \n  // Create highlights control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'highlights-advanced',\n    label: 'Highlights',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.highlights || 0,\n    paramName: 'highlights'\n  });\n  \n  // Create shadows control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'shadows-advanced',\n    label: 'Shadows',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.shadows || 0,\n    paramName: 'shadows'\n  });\n  \n  // Create whites control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'whites-advanced',\n    label: 'Whites',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.whites || 0,\n    paramName: 'whites'\n  });\n  \n  // Create blacks control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'blacks-advanced',\n    label: 'Blacks',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.blacks || 0,\n    paramName: 'blacks'\n  });\n  \n  // Create temperature control with Kelvin display\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'temperature-advanced',\n    label: 'Temperature',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.temperature || 0,\n    paramName: 'temperature',\n    isTemperature: true\n  });\n  \n  // Create tint control\n  createAdvancedSlider(basicCorrectionSection, {\n    id: 'tint-advanced',\n    label: 'Tint',\n    min: -150,\n    max: 150,\n    step: 1,\n    initialValue: appState.currentLutParams.lumetri.tint || 0,\n    paramName: 'tint'\n  });\n  \n  console.log('Adding reset button');\n  // Add reset button\n  const resetButton = document.createElement('button');\n  resetButton.textContent = 'Reset';\n  resetButton.className = 'reset-btn';\n  resetButton.addEventListener('click', resetAdvancedControls);\n  basicCorrectionSection.appendChild(resetButton);\n  \n  // Create other sections if needed\n  setupCreativeSection(advancedControls);\n  setupColorWheelsSection(advancedControls);\n  setupCurvesSection(advancedControls);\n  \n  console.log('Advanced controls setup complete');\n}\n\n// Helper function to set up Creative section\nfunction setupCreativeSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to set up Color Wheels section\nfunction setupColorWheelsSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to set up Curves section\nfunction setupCurvesSection(container) {\n  // This is just a placeholder - in a real implementation, you would\n  // ensure this section exists and is properly set up\n}\n\n// Helper function to convert temperature slider value to Kelvin\nfunction tempToKelvin(value) {\n  // Map slider value (-150 to +150) to Kelvin range (approx 2000K to 10000K)\n  // 0 on the slider = 6500K (neutral)\n  if (value === 0) return 6500;\n  \n  if (value < 0) {\n    // Negative values = warmer (lower Kelvin)\n    return Math.round(6500 + (value / 150) * 4500);\n  } else {\n    // Positive values = cooler (higher Kelvin)\n    return Math.round(6500 + (value / 150) * 3500);\n  }\n}\n\n// Helper function to create advanced slider controls\nfunction createAdvancedSlider(container, options) {\n  if (!container) {\n    console.error('Cannot create slider: container is null');\n    return;\n  }\n  \n  const { id, label, min, max, step, initialValue, paramName, isTemperature } = options;\n  console.log(`Creating advanced slider: ${id} for ${paramName}`);\n  \n  // Create container for the slider\n  const sliderContainer = document.createElement('div');\n  sliderContainer.className = 'control-group';\n  \n  // Create label element\n  const labelElement = document.createElement('label');\n  labelElement.setAttribute('for', id);\n  labelElement.textContent = label + ' ';\n  \n  // Create value display\n  const valueDisplay = document.createElement('span');\n  valueDisplay.id = `${id}-value`;\n  valueDisplay.className = 'parameter-value';\n  \n  // Set initial value display\n  if (isTemperature) {\n    // For temperature, show Kelvin\n    const kelvinValue = tempToKelvin(initialValue);\n    valueDisplay.textContent = `${kelvinValue}K`;\n    \n    // Add kelvin value class for styling if needed\n    valueDisplay.classList.add('kelvin-value');\n  } else {\n    // For other parameters, show regular value\n    valueDisplay.textContent = initialValue.toFixed(1);\n  }\n  \n  // Append value display to label\n  labelElement.appendChild(valueDisplay);\n  \n  // Create slider input\n  const slider = document.createElement('input');\n  slider.type = 'range';\n  slider.id = id;\n  slider.min = min;\n  slider.max = max;\n  slider.step = step;\n  slider.value = initialValue;\n  \n  // Add elements to container\n  sliderContainer.appendChild(labelElement);\n  sliderContainer.appendChild(slider);\n  container.appendChild(sliderContainer);\n  \n  // Set up event listener\n  slider.addEventListener('input', () => {\n    // Ensure lumetri object exists\n    if (!appState.currentLutParams.lumetri) {\n      appState.currentLutParams.lumetri = {};\n    }\n    \n    // Update parameter value\n    appState.currentLutParams.lumetri[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    if (isTemperature) {\n      // For temperature, show Kelvin\n      const kelvinValue = tempToKelvin(parseFloat(slider.value));\n      valueDisplay.textContent = `${kelvinValue}K`;\n    } else {\n      // For other parameters, show regular value\n      valueDisplay.textContent = parseFloat(slider.value).toFixed(1);\n    }\n    \n    console.log(`Advanced parameter updated: ${paramName} = ${slider.value}`);\n    \n    // Apply changes to image\n    applyImageAdjustments();\n  });\n  \n  return { slider, valueDisplay };\n}\n\n// Reset all advanced controls to their default values\nfunction resetAdvancedControls() {\n  console.log('Resetting advanced controls to defaults');\n  \n  // Reset all lumetri parameters to default values\n  appState.currentLutParams.lumetri = {\n    exposure: 0,\n    contrast: 0,\n    highlights: 0,\n    shadows: 0,\n    whites: 0,\n    blacks: 0,\n    temperature: 0,\n    tint: 0\n  };\n  \n  // Update all slider controls to match reset values\n  const sliders = document.querySelectorAll('#basic-correction-section input[type=\"range\"]');\n  sliders.forEach(slider => {\n    const paramName = slider.id.split('-')[0]; // Extract parameter name from id\n    slider.value = appState.currentLutParams.lumetri[paramName] || 0;\n    \n    // Update value display\n    const valueDisplay = document.getElementById(`${slider.id}-value`);\n    if (valueDisplay) {\n      if (paramName === 'temperature') {\n        valueDisplay.textContent = '6500K'; // Neutral temperature in Kelvin\n      } else {\n        valueDisplay.textContent = '0.0';\n      }\n    }\n  });\n  \n  // Apply changes\n  applyImageAdjustments();\n}\n\n// Apply the basic corrections to an image\nexport function applyBasicCorrections(imageData) {\n  const params = appState.currentLutParams.basic;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply contrast\n    r = applyContrast(r, params.contrast);\n    g = applyContrast(g, params.contrast);\n    b = applyContrast(b, params.contrast);\n    \n    // Apply color balance\n    r *= params.redBalance;\n    g *= params.greenBalance;\n    b *= params.blueBalance;\n    \n    // Apply saturation\n    if (params.saturation !== 1.0) {\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      r = luminance + params.saturation * (r - luminance);\n      g = luminance + params.saturation * (g - luminance);\n      b = luminance + params.saturation * (b - luminance);\n    }\n    \n    // Apply shadow/highlight adjustments (if defined)\n    if (params.shadowsShift && params.highlightsShift) {\n      let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n      let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n      \n      r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n      g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n      b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Helper function to apply contrast\nfunction applyContrast(value, contrast) {\n  return 0.5 + (value - 0.5) * contrast;\n}\n\n// Export functions and constants\nexport {\n  applyContrast\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Creative Effects component\nexport function initCreativeEffects() {\n  console.log('Initializing Creative Effects');\n  \n  // Initialize creative effect parameters if not present\n  if (!appState.currentLutParams.creative) {\n    appState.currentLutParams.creative = {\n      fadedFilm: 0,\n      vibrance: 0\n    };\n  }\n  \n  // Get slider references\n  const fadedFilmSlider = document.getElementById('faded-film');\n  const vibranceSlider = document.getElementById('vibrance');\n  \n  // Display value references\n  const fadedFilmValue = document.getElementById('faded-film-value');\n  const vibranceValue = document.getElementById('vibrance-value');\n  \n  // Set up event listeners for sliders\n  setupSlider(fadedFilmSlider, fadedFilmValue, 'fadedFilm');\n  setupSlider(vibranceSlider, vibranceValue, 'vibrance');\n  \n  // Set up section toggle\n  setupSectionToggle('creative-toggle', 'creative-section');\n}\n\n// Set up a slider control with its value display\nfunction setupSlider(slider, valueDisplay, paramName) {\n  if (!slider || !valueDisplay) return;\n  \n  // Set initial value from app state\n  slider.value = appState.currentLutParams.creative[paramName];\n  valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n  \n  // Add event listener\n  slider.addEventListener('input', () => {\n    // Update parameter in app state\n    appState.currentLutParams.creative[paramName] = parseFloat(slider.value);\n    \n    // Update display value\n    valueDisplay.textContent = appState.currentLutParams.creative[paramName].toFixed(1);\n    \n    // Apply adjustments to image\n    applyImageAdjustments();\n  });\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      \n      if (toggle.classList.contains('expanded')) {\n        section.classList.add('expanded');\n        section.style.display = 'block';\n        setTimeout(() => {\n          section.style.maxHeight = '1000px';\n          section.style.opacity = '1';\n        }, 10);\n      } else {\n        section.classList.remove('expanded');\n        section.style.maxHeight = '0';\n        section.style.opacity = '0';\n        setTimeout(() => {\n          if (!toggle.classList.contains('expanded')) {\n            section.style.display = 'none';\n          }\n        }, 300);\n      }\n    });\n  }\n}\n\n// Apply creative effects to image data\nexport function applyCreativeEffects(imageData) {\n  const params = appState.currentLutParams.creative;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply vibrance if enabled\n    if (params.vibrance !== 0) {\n      const result = applyVibrance(r, g, b, params.vibrance / 150);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Apply faded film effect if enabled\n    if (params.fadedFilm > 0) {\n      const result = applyFadedFilm(r, g, b, params.fadedFilm / 100);\n      r = result.r;\n      g = result.g;\n      b = result.b;\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply vibrance adjustment\nfunction applyVibrance(r, g, b, amount) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate saturation level to determine vibrance effect\n  const maxChannel = Math.max(r, g, b);\n  const minChannel = Math.min(r, g, b);\n  const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n  \n  // Apply vibrance (affects less saturated colors more)\n  const vibranceEffect = amount * (1 - saturationLevel);\n  \n  // Apply the effect to each channel\n  r = luminance + (r - luminance) * (1 + vibranceEffect);\n  g = luminance + (g - luminance) * (1 + vibranceEffect);\n  b = luminance + (b - luminance) * (1 + vibranceEffect);\n  \n  return { r, g, b };\n}\n\n// Apply faded film effect\nfunction applyFadedFilm(r, g, b, amount) {\n  // Faded film effect reduces contrast and slightly shifts the black point\n  const fadeAmount = amount * 0.5; // Adjust the strength\n  \n  // Reduce contrast\n  r = r * (1 - fadeAmount) + 0.5 * fadeAmount;\n  g = g * (1 - fadeAmount) + 0.5 * fadeAmount;\n  b = b * (1 - fadeAmount) + 0.5 * fadeAmount;\n  \n  // Add a slight shift to the black point\n  const blackShift = amount * 0.1;\n  r += blackShift;\n  g += blackShift;\n  b += blackShift;\n  \n  return { r, g, b };\n}\n\n// Export functions and utilities\nexport {\n  applyVibrance,\n  applyFadedFilm\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Initialize the Color Wheels component\nexport function initColorWheels() {\n  console.log('Initializing Color Wheels');\n  \n  // Initialize color wheel parameters if not present\n  if (!appState.currentLutParams.colorWheels) {\n    appState.currentLutParams.colorWheels = {\n      shadowTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      highlightTint: { r: 128, g: 128, b: 128 }, // Middle gray = no tint\n      tintBalance: 0 // Range: -150 to 150\n    };\n  }\n  \n  // Get DOM references\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  // Setup color wheels\n  if (shadowColorWheel) {\n    setupColorWheel(shadowColorWheel, 'shadowTint');\n  }\n  \n  if (highlightColorWheel) {\n    setupColorWheel(highlightColorWheel, 'highlightTint');\n  }\n  \n  // Setup tint balance slider\n  if (tintBalanceSlider && tintBalanceValue) {\n    // Set initial value\n    tintBalanceSlider.value = appState.currentLutParams.colorWheels.tintBalance;\n    tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n    \n    // Add event listener\n    tintBalanceSlider.addEventListener('input', () => {\n      appState.currentLutParams.colorWheels.tintBalance = parseFloat(tintBalanceSlider.value);\n      tintBalanceValue.textContent = appState.currentLutParams.colorWheels.tintBalance.toFixed(1);\n      applyImageAdjustments();\n    });\n  }\n  \n  // Setup reset button\n  const resetButton = document.querySelector('.reset-btn[data-section=\"colorWheels\"]');\n  if (resetButton) {\n    resetButton.addEventListener('click', resetColorWheels);\n  }\n  \n  // Set up section toggle\n  setupSectionToggle('color-wheels-toggle', 'color-wheels-section');\n}\n\n// Set up a color wheel control\nfunction setupColorWheel(wheel, paramName) {\n  if (!wheel) return;\n  \n  // Clear any existing content\n  wheel.innerHTML = '';\n  \n  // Create a canvas-based color wheel\n  const canvas = document.createElement('canvas');\n  canvas.width = wheel.clientWidth || 80;\n  canvas.height = wheel.clientHeight || 80;\n  wheel.appendChild(canvas);\n  \n  // Improved anti-aliased color wheel background with smooth gradient\n  wheel.style.background = \"conic-gradient(red, yellow, lime, cyan, blue, magenta, red)\";\n  wheel.style.backgroundImage = \"radial-gradient(circle at center, white 0%, rgba(255, 255, 255, 0) 70%), conic-gradient(from 0deg, hsl(0, 100%, 50%), hsl(60, 100%, 50%), hsl(120, 100%, 50%), hsl(180, 100%, 50%), hsl(240, 100%, 50%), hsl(300, 100%, 50%), hsl(360, 100%, 50%))\";\n  wheel.style.borderRadius = \"50%\";\n  wheel.style.boxShadow = \"inset 0 0 0 1px rgba(255, 255, 255, 0.2)\";\n  wheel.style.border = \"none\"; // Remove the default border causing aliasing\n  \n  // Add indicator for current position\n  const indicator = document.createElement('div');\n  indicator.className = 'wheel-indicator';\n  wheel.appendChild(indicator);\n  \n  // Get current tint value\n  const tintValue = appState.currentLutParams.colorWheels[paramName];\n  \n  // Position indicator based on current tint value\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  const maxDistance = Math.min(centerX, centerY) - 2;\n  \n  // Calculate position from tint values\n  // Convert from 0-255 range to -1 to 1 range (128 is center/neutral)\n  const normalizedR = (tintValue.r - 128) / 128;\n  const normalizedG = (tintValue.g - 128) / 128;\n  const normalizedB = (tintValue.b - 128) / 128;\n  \n  // Estimate hue and saturation from RGB (simplified)\n  let saturation = Math.sqrt(normalizedR*normalizedR + normalizedG*normalizedG + normalizedB*normalizedB);\n  saturation = Math.min(1, saturation); // Clamp to 1\n  \n  // This is a simplified conversion - a complete RGB to HSV would be more accurate\n  let hue = 0;\n  if (saturation > 0) {\n    // Rough estimation of hue angle based on RGB values\n    hue = Math.atan2(normalizedG, normalizedR);\n    if (normalizedB > Math.max(normalizedR, normalizedG)) {\n      hue = Math.PI + Math.atan2(normalizedB, -normalizedR);\n    }\n    // Convert to 0-2PI range\n    if (hue < 0) hue += 2 * Math.PI;\n  }\n  \n  // Calculate x,y position on wheel\n  const x = Math.cos(hue) * saturation * maxDistance;\n  const y = Math.sin(hue) * saturation * maxDistance;\n  \n  // Position indicator\n  setWheelIndicatorPosition(wheel, indicator, x, y);\n  \n  // Track if mouse is down\n  let isMouseDown = false;\n  \n  // Handle mouse interactions\n  wheel.addEventListener('mousedown', (e) => {\n    isMouseDown = true;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mousemove', (e) => {\n    if (!isMouseDown) return;\n    updateWheelFromEvent(e);\n  });\n  \n  document.addEventListener('mouseup', () => {\n    isMouseDown = false;\n  });\n  \n  wheel.addEventListener('click', updateWheelFromEvent);\n  \n  function updateWheelFromEvent(e) {\n    const rect = wheel.getBoundingClientRect();\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    \n    // Get coordinates relative to center\n    const x = e.clientX - rect.left - centerX;\n    const y = e.clientY - rect.top - centerY;\n    \n    // Calculate distance from center (for saturation)\n    const distance = Math.sqrt(x * x + y * y);\n    const maxDistance = Math.min(centerX, centerY) - 2;\n    \n    // Limit to wheel boundary\n    if (distance <= maxDistance) {\n      // Update indicator position\n      setWheelIndicatorPosition(wheel, indicator, x, y);\n      \n      // Calculate angle (for hue)\n      let angle = Math.atan2(y, x);\n      if (angle < 0) angle += 2 * Math.PI;\n      \n      // Normalize distance to 0-1\n      const normalizedDistance = distance / maxDistance;\n      \n      // Calculate color based on position\n      const hue = angle / (2 * Math.PI);\n      const saturation = normalizedDistance;\n      const rgb = hsvToRgb(hue, saturation, 1.0);\n      \n      // Map RGB (0-255) to tint adjustments (64-192, where 128 is neutral)\n      // We use a narrower range to avoid extreme adjustments\n      const mappedR = Math.round(128 + (rgb.r - 128) * saturation);\n      const mappedG = Math.round(128 + (rgb.g - 128) * saturation);\n      const mappedB = Math.round(128 + (rgb.b - 128) * saturation);\n      \n      // Update the parameter\n      appState.currentLutParams.colorWheels[paramName] = { r: mappedR, g: mappedG, b: mappedB };\n      \n      // Apply the adjustment to the image\n      applyImageAdjustments();\n    }\n  }\n}\n\n// Reset color wheels to default values\nfunction resetColorWheels() {\n  // Reset to neutral tints\n  appState.currentLutParams.colorWheels.shadowTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.highlightTint = { r: 128, g: 128, b: 128 };\n  appState.currentLutParams.colorWheels.tintBalance = 0;\n  \n  // Update UI\n  const tintBalanceSlider = document.getElementById('tint-balance');\n  const tintBalanceValue = document.getElementById('tint-balance-value');\n  \n  if (tintBalanceSlider) tintBalanceSlider.value = 0;\n  if (tintBalanceValue) tintBalanceValue.textContent = '0.0';\n  \n  // Reset wheel indicators\n  const shadowColorWheel = document.getElementById('shadow-color-wheel');\n  const highlightColorWheel = document.getElementById('highlight-color-wheel');\n  \n  if (shadowColorWheel) {\n    const shadowIndicator = shadowColorWheel.querySelector('.wheel-indicator');\n    if (shadowIndicator) {\n      setWheelIndicatorPosition(shadowColorWheel, shadowIndicator, 0, 0);\n    }\n  }\n  \n  if (highlightColorWheel) {\n    const highlightIndicator = highlightColorWheel.querySelector('.wheel-indicator');\n    if (highlightIndicator) {\n      setWheelIndicatorPosition(highlightColorWheel, highlightIndicator, 0, 0);\n    }\n  }\n  \n  // Apply changes to image\n  applyImageAdjustments();\n}\n\n// Set up section toggle for expandable sections\nfunction setupSectionToggle(toggleId, sectionId) {\n  const toggle = document.getElementById(toggleId);\n  const section = document.getElementById(sectionId);\n  \n  if (toggle && section) {\n    toggle.addEventListener('click', () => {\n      toggle.classList.toggle('expanded');\n      section.classList.toggle('expanded');\n    });\n  }\n}\n\n// Helper for setting wheel indicator position\nfunction setWheelIndicatorPosition(wheel, indicator, x, y) {\n  const centerX = wheel.clientWidth / 2;\n  const centerY = wheel.clientHeight / 2;\n  \n  indicator.style.left = `${centerX + x}px`;\n  indicator.style.top = `${centerY + y}px`;\n}\n\n// Convert HSV (0-1 ranges) to RGB (0-255)\nfunction hsvToRgb(h, s, v) {\n  let r, g, b;\n  \n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  \n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  \n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\n\n// Apply color wheel tinting to an image\nexport function applyColorWheelAdjustments(imageData) {\n  const params = appState.currentLutParams.colorWheels;\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply color wheels tinting\n    const result = applyColorWheels(r, g, b, params.shadowTint, params.highlightTint, params.tintBalance / 150);\n    \n    // Clamp values to valid range\n    data[i] = Math.round(Math.min(1.0, Math.max(0.0, result.r)) * 255);\n    data[i + 1] = Math.round(Math.min(1.0, Math.max(0.0, result.g)) * 255);\n    data[i + 2] = Math.round(Math.min(1.0, Math.max(0.0, result.b)) * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Apply color wheels (shadow and highlight tinting)\nfunction applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Calculate shadow and highlight influence based on luminance\n  let shadowInfluence = Math.pow(1 - luminance, 2);\n  let highlightInfluence = Math.pow(luminance, 2);\n  \n  // Apply tint balance to adjust the crossover point\n  if (tintBalance > 0) {\n    // Shift influence towards highlights\n    shadowInfluence *= (1 - tintBalance);\n    highlightInfluence = highlightInfluence * (1 - tintBalance) + tintBalance;\n  } else if (tintBalance < 0) {\n    // Shift influence towards shadows\n    highlightInfluence *= (1 + tintBalance);\n    shadowInfluence = shadowInfluence * (1 + tintBalance) - tintBalance;\n  }\n  \n  // Convert shadow tint from 0-255 to -1 to 1 range (128 is neutral)\n  const shadowR = (shadowTint.r - 128) / 128;\n  const shadowG = (shadowTint.g - 128) / 128;\n  const shadowB = (shadowTint.b - 128) / 128;\n  \n  // Convert highlight tint from 0-255 to -1 to 1 range (128 is neutral)\n  const highlightR = (highlightTint.r - 128) / 128;\n  const highlightG = (highlightTint.g - 128) / 128;\n  const highlightB = (highlightTint.b - 128) / 128;\n  \n  // Apply shadow tint\n  r += shadowR * shadowInfluence * 0.5;\n  g += shadowG * shadowInfluence * 0.5;\n  b += shadowB * shadowInfluence * 0.5;\n  \n  // Apply highlight tint\n  r += highlightR * highlightInfluence * 0.5;\n  g += highlightG * highlightInfluence * 0.5;\n  b += highlightB * highlightInfluence * 0.5;\n  \n  return { r, g, b };\n}\n\n// Export functions for use in other modules\nexport {\n  hsvToRgb,\n  applyColorWheels\n};","// Import utilities if needed\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Keep track of slider position\nlet currentSliderPosition = 50;\n\n// Initialize the preview controller\nexport function initPreviewController() {\n  console.log('Initializing Preview Controller');\n  \n  // Get DOM elements\n  const originalImage = document.getElementById('original-image');\n  const processedImage = document.getElementById('processed-image');\n  const originalPlaceholder = document.getElementById('original-placeholder');\n  const comparisonContainer = document.getElementById('comparison-container');\n  const imageUploadBtn = document.getElementById('image-upload-btn');\n  \n  // Store references to the DOM elements in the global app state\n  appState.originalImageElement = originalImage;\n  appState.processedImageElement = processedImage;\n  \n  // Set up view toggle buttons\n  setupViewToggleButtons();\n  \n  // Set up image upload button\n  if (imageUploadBtn) {\n    imageUploadBtn.addEventListener('click', handleImageUpload);\n  }\n  \n  // Set up image load handler\n  if (originalImage) {\n    originalImage.onload = () => {\n      console.log(\"Image loaded successfully\");\n      \n      // Store the image in app state\n      appState.originalImage = originalImage;\n      appState.processedImage = processedImage;\n      \n      // Hide placeholder, show comparison container\n      if (originalPlaceholder) originalPlaceholder.style.display = 'none';\n      if (comparisonContainer) comparisonContainer.style.display = 'block';\n      \n      // Initialize comparison slider\n      initComparisonSlider();\n      \n      // Apply adjustments to process the image\n      applyImageAdjustments();\n    };\n  }\n}\n\n// Set up view toggle buttons (split, before, after)\nfunction setupViewToggleButtons() {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  \n  if (viewSplitBtn) {\n    viewSplitBtn.addEventListener('click', () => {\n      setViewMode('split');\n    });\n  }\n  \n  if (viewBeforeBtn) {\n    viewBeforeBtn.addEventListener('click', () => {\n      setViewMode('before');\n    });\n  }\n  \n  if (viewAfterBtn) {\n    viewAfterBtn.addEventListener('click', () => {\n      setViewMode('after');\n    });\n  }\n}\n\n// Handle image upload functionality\nfunction handleImageUpload() {\n  console.log(\"Image upload button clicked\");\n  \n  // In Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    window.electronAPI.openFileDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp'] }]\n    }).then(imagePath => {\n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        appState.originalImageElement.src = `file://${imagePath}`;\n      }\n    }).catch(error => {\n      console.error(\"Error in Electron file dialog:\", error);\n      fallbackFileUpload();\n    });\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    fallbackFileUpload();\n  }\n}\n\n// Fallback file upload function using HTML input for browser context\nfunction fallbackFileUpload() {\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = 'image/*';\n  \n  input.addEventListener('change', function(e) {\n    if (this.files && this.files[0]) {\n      const file = this.files[0];\n      console.log(\"Selected file:\", file.name);\n      \n      const reader = new FileReader();\n      reader.onload = function(event) {\n        appState.originalImageElement.src = event.target.result;\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  });\n  \n  input.click();\n}\n\n// Initialize comparison slider functionality\nfunction initComparisonSlider() {\n  const comparisonContainer = document.getElementById('comparison-container');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  let isSliding = false;\n  let startX = 0;\n  let startPercent = 50;\n\n  // Function to update slider position\n  function updateSliderPosition(percent) {\n    percent = Math.max(0, Math.min(100, percent));\n    \n    // Store the current position\n    currentSliderPosition = percent;\n    \n    // Update the clip-path of the original image container\n    originalImageContainer.style.clipPath = `inset(0 ${100 - percent}% 0 0)`;\n    \n    // Update slider position\n    comparisonSlider.style.left = percent + '%';\n    \n    // Update vertical divider position\n    verticalDivider.style.left = percent + '%';\n  }\n\n  // Handle mouse events\n  comparisonSlider.addEventListener('mousedown', (e) => {\n    isSliding = true;\n    startX = e.clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('mousemove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('mouseup', () => {\n    isSliding = false;\n  });\n\n  // Handle touch events\n  comparisonSlider.addEventListener('touchstart', (e) => {\n    isSliding = true;\n    startX = e.touches[0].clientX;\n    \n    // Get current slider position\n    const sliderLeft = parseFloat(comparisonSlider.style.left) || currentSliderPosition;\n    startPercent = sliderLeft;\n    \n    e.preventDefault();\n  });\n\n  document.addEventListener('touchmove', (e) => {\n    if (!isSliding) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const deltaX = e.touches[0].clientX - startX;\n    const deltaPercent = (deltaX / rect.width) * 100;\n    \n    updateSliderPosition(startPercent + deltaPercent);\n    e.preventDefault();\n  });\n\n  document.addEventListener('touchend', () => {\n    isSliding = false;\n  });\n\n  // Click anywhere in container to move slider\n  comparisonContainer.addEventListener('click', (e) => {\n    if (e.target.closest('.toggle-view') || e.target.closest('.slider-handle')) return;\n    \n    const rect = comparisonContainer.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const percent = (clickX / rect.width) * 100;\n    \n    updateSliderPosition(percent);\n  });\n\n  // Initialize with 50/50 split or restore previous position\n  updateSliderPosition(currentSliderPosition);\n}\n\n// Set view mode (split, before, after)\nfunction setViewMode(mode, resetPosition = true) {\n  const viewSplitBtn = document.getElementById('view-split');\n  const viewBeforeBtn = document.getElementById('view-before');\n  const viewAfterBtn = document.getElementById('view-after');\n  const originalImageContainer = document.getElementById('original-image-container');\n  const comparisonSlider = document.getElementById('comparison-slider');\n  const verticalDivider = document.getElementById('vertical-divider');\n  \n  // Reset all buttons\n  viewSplitBtn.classList.remove('active');\n  viewBeforeBtn.classList.remove('active');\n  viewAfterBtn.classList.remove('active');\n  \n  switch (mode) {\n    case 'split':\n      viewSplitBtn.classList.add('active');\n      \n      // If resetPosition is true, set to 50/50 split; otherwise keep current position\n      if (resetPosition) {\n        currentSliderPosition = 50;\n      }\n      \n      // Position elements based on current slider position\n      originalImageContainer.style.clipPath = `inset(0 ${100 - currentSliderPosition}% 0 0)`;\n      verticalDivider.style.left = `${currentSliderPosition}%`;\n      comparisonSlider.style.left = `${currentSliderPosition}%`;\n      \n      // Make everything visible\n      comparisonSlider.style.display = 'block';\n      originalImageContainer.style.display = 'block';\n      verticalDivider.style.display = 'block'; // Show divider\n      break;\n      \n    case 'before':\n      viewBeforeBtn.classList.add('active');\n      \n      // Show full original image\n      originalImageContainer.style.clipPath = 'inset(0 0 0 0)';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      originalImageContainer.style.display = 'block';\n      break;\n      \n    case 'after':\n      viewAfterBtn.classList.add('active');\n      \n      // Hide original image completely\n      originalImageContainer.style.display = 'none';\n      \n      // Hide slider and divider\n      comparisonSlider.style.display = 'none';\n      verticalDivider.style.display = 'none'; // Hide divider\n      break;\n  }\n}\n\n// Export functions that may be needed by other modules\nexport {\n  setViewMode,\n  currentSliderPosition\n};","// Import app state and functions\nimport { appState, applyImageAdjustments } from '../../app.js';\n\n// Define built-in presets\nconst builtInPresets = {\n  \"custom\": {\n    contrast: 1.2,\n    saturation: 1.15,\n    redBalance: 1.05,\n    greenBalance: 0.95,\n    blueBalance: 1.1,\n    shadowsShift: [0.05, 0.0, -0.05],\n    highlightsShift: [0.03, 0.03, 0.0]\n  },\n  \"warm\": {\n    contrast: 1.1,\n    saturation: 0.9,\n    redBalance: 1.15,\n    greenBalance: 0.95,\n    blueBalance: 0.85,\n    shadowsShift: [0.08, 0.02, -0.05],\n    highlightsShift: [0.05, 0.0, -0.05]\n  },\n  \"cool\": {\n    contrast: 1.3,\n    saturation: 0.85,\n    redBalance: 0.9,\n    greenBalance: 1.0,\n    blueBalance: 1.2,\n    shadowsShift: [-0.03, 0.0, 0.08],\n    highlightsShift: [0.0, 0.0, 0.03]\n  },\n  \"bw\": {\n    contrast: 1.5,\n    saturation: 0.0,\n    redBalance: 0.33,\n    greenBalance: 0.33,\n    blueBalance: 0.33,\n    shadowsShift: [-0.05, -0.05, -0.05],\n    highlightsShift: [0.05, 0.05, 0.05]\n  },\n  \"film\": {\n    contrast: 0.9,\n    saturation: 0.8,\n    redBalance: 1.1,\n    greenBalance: 1.05,\n    blueBalance: 0.9,\n    shadowsShift: [0.1, 0.05, 0.0],\n    highlightsShift: [-0.02, -0.02, 0.05]\n  }\n};\n\n// Initialize user presets\nlet userPresets = {};\n\n// Initialize the Presets component\nexport function initPresets() {\n  console.log('Initializing Presets');\n  \n  // Initialize preset buttons\n  const presetButtons = document.querySelectorAll('.preset-btn');\n  \n  presetButtons.forEach(btn => {\n    btn.addEventListener('click', () => {\n      // Remove active class from all buttons\n      presetButtons.forEach(b => b.classList.remove('active'));\n      \n      // Add active class to clicked button\n      btn.classList.add('active');\n      \n      // Get preset id from button id\n      const presetId = btn.id.split('-')[1];\n      \n      // Apply the preset\n      applyPreset(presetId);\n    });\n  });\n  \n  // Load any saved user presets\n  loadUserPresets();\n}\n\n// Apply a preset by its ID\nfunction applyPreset(presetId) {\n  // Look for preset in built-in presets first, then user presets\n  const preset = builtInPresets[presetId] || userPresets[presetId];\n  \n  if (!preset) {\n    console.warn(`Preset '${presetId}' not found`);\n    return;\n  }\n  \n  console.log(`Applying preset: ${presetId}`);\n  \n  // Store the active preset ID\n  appState.activePresetId = presetId;\n  \n  // Apply preset to basic parameters\n  if (!appState.currentLutParams.basic) {\n    appState.currentLutParams.basic = {};\n  }\n  \n  // Copy preset values to app state\n  appState.currentLutParams.basic.contrast = preset.contrast;\n  appState.currentLutParams.basic.saturation = preset.saturation;\n  appState.currentLutParams.basic.redBalance = preset.redBalance;\n  appState.currentLutParams.basic.greenBalance = preset.greenBalance;\n  appState.currentLutParams.basic.blueBalance = preset.blueBalance;\n  \n  // Set shadows and highlights shift if present\n  if (preset.shadowsShift) {\n    appState.currentLutParams.basic.shadowsShift = [...preset.shadowsShift];\n  }\n  \n  if (preset.highlightsShift) {\n    appState.currentLutParams.basic.highlightsShift = [...preset.highlightsShift];\n  }\n  \n  // If advanced parameters are in the preset, apply them too\n  if (preset.advanced) {\n    applyAdvancedPreset(preset.advanced);\n  }\n  \n  // Update UI sliders to reflect new values\n  updateSlidersFromPreset();\n  \n  // Apply adjustments to image\n  applyImageAdjustments();\n}\n\n// Apply advanced preset parameters if present\nfunction applyAdvancedPreset(advancedParams) {\n  // Apply Lumetri-style parameters if they exist in the preset\n  if (advancedParams.temperature !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.temperature = advancedParams.temperature;\n  }\n  \n  if (advancedParams.tint !== undefined && appState.currentLutParams.lumetri) {\n    appState.currentLutParams.lumetri.tint = advancedParams.tint;\n  }\n  \n  // Add more advanced parameters as needed\n}\n\n// Update UI sliders to reflect preset values\nfunction updateSlidersFromPreset() {\n  const params = appState.currentLutParams.basic;\n  \n  // Update basic sliders\n  updateSlider('contrast', params.contrast);\n  updateSlider('saturation', params.saturation);\n  updateSlider('red-balance', params.redBalance);\n  updateSlider('green-balance', params.greenBalance);\n  updateSlider('blue-balance', params.blueBalance);\n}\n\n// Helper to update a slider and its value display\nfunction updateSlider(sliderId, value) {\n  const slider = document.getElementById(sliderId);\n  const valueDisplay = document.getElementById(`${sliderId}-value`);\n  \n  if (slider) {\n    slider.value = value;\n  }\n  \n  if (valueDisplay) {\n    valueDisplay.textContent = value.toFixed(2);\n  }\n}\n\n// Save the current settings as a user preset\nexport function saveCurrentAsPreset(presetName) {\n  if (!presetName) return;\n  \n  // Create a preset from current settings\n  const newPreset = {\n    contrast: appState.currentLutParams.basic.contrast,\n    saturation: appState.currentLutParams.basic.saturation,\n    redBalance: appState.currentLutParams.basic.redBalance,\n    greenBalance: appState.currentLutParams.basic.greenBalance,\n    blueBalance: appState.currentLutParams.basic.blueBalance\n  };\n  \n  // Add shadows and highlights shift if present\n  if (appState.currentLutParams.basic.shadowsShift) {\n    newPreset.shadowsShift = [...appState.currentLutParams.basic.shadowsShift];\n  }\n  \n  if (appState.currentLutParams.basic.highlightsShift) {\n    newPreset.highlightsShift = [...appState.currentLutParams.basic.highlightsShift];\n  }\n  \n  // Add advanced parameters if in advanced mode\n  if (appState.activeMode === 'advanced' && appState.currentLutParams.lumetri) {\n    newPreset.advanced = {\n      temperature: appState.currentLutParams.lumetri.temperature,\n      tint: appState.currentLutParams.lumetri.tint,\n      // Add other advanced parameters\n    };\n  }\n  \n  // Save to user presets\n  userPresets[presetName] = newPreset;\n  \n  // Save to local storage\n  saveUserPresets();\n  \n  // Add the preset to UI\n  addPresetToUI(presetName);\n  \n  console.log(`Saved preset: ${presetName}`);\n}\n\n// Add a user preset to the UI\nfunction addPresetToUI(presetName) {\n  // This function would add a new preset button to the UI\n  // Implementation would depend on how you want to handle user presets in the UI\n  console.log(`Added preset to UI: ${presetName}`);\n}\n\n// Save user presets to local storage\nfunction saveUserPresets() {\n  try {\n    localStorage.setItem('lotsAppUserPresets', JSON.stringify(userPresets));\n  } catch (error) {\n    console.error('Failed to save user presets:', error);\n  }\n}\n\n// Load user presets from local storage\nfunction loadUserPresets() {\n  try {\n    const savedPresets = localStorage.getItem('lotsAppUserPresets');\n    if (savedPresets) {\n      userPresets = JSON.parse(savedPresets);\n      console.log('Loaded user presets:', Object.keys(userPresets));\n    }\n  } catch (error) {\n    console.error('Failed to load user presets:', error);\n  }\n}\n\n// Export functions and constants\nexport {\n  builtInPresets,\n  userPresets,\n  applyPreset\n};","// components/common/ui-elements.js\n// Import app state if needed\nimport { appState } from '../../app.js';\n\n// Initialize common UI elements\nexport function initUiElements() {\n  console.log('Initializing UI Elements');\n  \n  // Initialize modal functionality\n  initModals();\n  \n  // Initialize expandable sections\n  initExpandableSections();\n  \n  // Initialize window control buttons\n  initWindowControls();\n  \n  console.log('UI Elements initialization complete');\n}\n\n// Initialize modal dialogs\nfunction initModals() {\n  console.log('Setting up modal dialogs');\n  // Code Preview Modal\n  const viewCodeBtn = document.getElementById('view-code-btn');\n  const viewCodeBtnAdvanced = document.getElementById('view-code-btn-advanced');\n  const codeModal = document.getElementById('code-modal');\n  const closeModalBtn = document.getElementById('close-modal-btn');\n  \n  if (!viewCodeBtn) console.warn('View code button not found');\n  if (!viewCodeBtnAdvanced) console.warn('Advanced view code button not found');\n  if (!codeModal) console.warn('Code modal not found');\n  if (!closeModalBtn) console.warn('Close modal button not found');\n  \n  if (viewCodeBtn && codeModal) {\n    viewCodeBtn.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (viewCodeBtnAdvanced && codeModal) {\n    viewCodeBtnAdvanced.addEventListener('click', () => {\n      // Update the code preview with current LUT\n      updateLUTPreview(true);\n      // Show the modal\n      codeModal.style.display = 'block';\n    });\n  }\n  \n  if (closeModalBtn) {\n    closeModalBtn.addEventListener('click', () => {\n      // Hide any open modal\n      const modals = document.querySelectorAll('.modal');\n      modals.forEach(modal => {\n        modal.style.display = 'none';\n      });\n    });\n  }\n  \n  // Close modals when clicking outside content\n  window.addEventListener('click', (e) => {\n    const modals = document.querySelectorAll('.modal');\n    modals.forEach(modal => {\n      if (e.target === modal) {\n        modal.style.display = 'none';\n      }\n    });\n  });\n}\n\n// Update LUT preview in code modal\nexport function updateLUTPreview(fullPreview = false) {\n  const lutPreview = document.getElementById('lut-preview');\n  if (!lutPreview) {\n    console.warn('LUT preview element not found');\n    return;\n  }\n  \n  // Get LUT content from generator (to be implemented)\n  let lutContent = \"# LUT Preview will be generated here\";\n  \n  // In the future, we'll call the actual LUT generator:\n  if (window.generateCubeLUT) {\n    lutContent = window.generateCubeLUT();\n  }\n  \n  if (fullPreview) {\n    // Show the full LUT content in the modal\n    lutPreview.textContent = lutContent;\n  } else {\n    // Just show a preview sample\n    lutPreview.textContent = lutContent.slice(0, 500) + '...';\n  }\n}\n\n// Initialize expandable sections - FIXED VERSION\nfunction initExpandableSections() {\n  console.log('Initializing expandable sections');\n  \n  // Define sections to initialize as expanded or collapsed\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section', expanded: true },\n    { toggle: 'creative-toggle', content: 'creative-section', expanded: false },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section', expanded: false },\n    { toggle: 'curves-toggle', content: 'curves-section', expanded: false }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (!toggle) {\n      console.error(`Toggle element not found: #${section.toggle}`);\n      return;\n    }\n    \n    if (!content) {\n      console.error(`Content element not found: #${section.content}`);\n      return;\n    }\n    \n    console.log(`Setting up section: ${section.toggle} (expanded: ${section.expanded})`);\n    \n    // Set initial state\n    if (section.expanded) {\n      toggle.classList.add('expanded');\n      content.classList.add('expanded');\n      content.style.display = 'block';\n      content.style.maxHeight = 'none'; // Allow full height initially\n    } else {\n      toggle.classList.remove('expanded');\n      content.classList.remove('expanded');\n      content.style.display = 'none';\n      content.style.maxHeight = '0';\n    }\n    \n    // Add click event listener\n    toggle.addEventListener('click', () => {\n      console.log(`Toggle clicked for: ${section.toggle}`);\n      \n      // Toggle expanded state\n      const isExpanding = !toggle.classList.contains('expanded');\n      \n      // Update toggle class\n      toggle.classList.toggle('expanded');\n      \n      // Update content\n      if (isExpanding) {\n        // Expanding\n        content.style.display = 'block';\n        // Use setTimeout to allow display change to take effect first\n        setTimeout(() => {\n          content.classList.add('expanded');\n          content.style.maxHeight = 'none';\n        }, 10);\n        console.log(`Expanding section: ${section.content}`);\n      } else {\n        // Collapsing\n        content.classList.remove('expanded');\n        content.style.maxHeight = '0';\n        // Use setTimeout to allow transition to complete before hiding\n        setTimeout(() => {\n          content.style.display = 'none';\n        }, 300); // Match the transition duration in CSS\n        console.log(`Collapsing section: ${section.content}`);\n      }\n    });\n  });\n}\n\n// Initialize window control buttons for Electron\nfunction initWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Create a simple toast notification\nexport function showToast(message, type = 'info', duration = 3000) {\n  console.log(`Toast notification: ${message} (${type})`);\n  \n  // Create toast container if it doesn't exist\n  let toastContainer = document.querySelector('.toast-container');\n  if (!toastContainer) {\n    toastContainer = document.createElement('div');\n    toastContainer.className = 'toast-container';\n    document.body.appendChild(toastContainer);\n  }\n  \n  // Create toast element\n  const toast = document.createElement('div');\n  toast.className = `toast toast-${type}`;\n  toast.textContent = message;\n  \n  // Add to container\n  toastContainer.appendChild(toast);\n  \n  // Trigger animation\n  setTimeout(() => {\n    toast.classList.add('show');\n  }, 10);\n  \n  // Remove after duration\n  setTimeout(() => {\n    toast.classList.remove('show');\n    \n    // Remove from DOM after animation completes\n    setTimeout(() => {\n      toastContainer.removeChild(toast);\n    }, 300);\n  }, duration);\n  \n  return toast;\n}\n\n// Create a confirmation dialog\nexport function showConfirmDialog(message, onConfirm, onCancel) {\n  // Create dialog\n  const dialogOverlay = document.createElement('div');\n  dialogOverlay.className = 'dialog-overlay';\n  \n  const dialogBox = document.createElement('div');\n  dialogBox.className = 'dialog-box';\n  \n  const messageEl = document.createElement('p');\n  messageEl.textContent = message;\n  \n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.className = 'dialog-buttons';\n  \n  const confirmBtn = document.createElement('button');\n  confirmBtn.className = 'primary';\n  confirmBtn.textContent = 'Confirm';\n  \n  const cancelBtn = document.createElement('button');\n  cancelBtn.textContent = 'Cancel';\n  \n  // Add elements to DOM\n  buttonsContainer.appendChild(cancelBtn);\n  buttonsContainer.appendChild(confirmBtn);\n  \n  dialogBox.appendChild(messageEl);\n  dialogBox.appendChild(buttonsContainer);\n  \n  dialogOverlay.appendChild(dialogBox);\n  document.body.appendChild(dialogOverlay);\n  \n  // Add event listeners\n  confirmBtn.addEventListener('click', () => {\n    if (onConfirm) onConfirm();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  cancelBtn.addEventListener('click', () => {\n    if (onCancel) onCancel();\n    document.body.removeChild(dialogOverlay);\n  });\n  \n  // Also close on overlay click\n  dialogOverlay.addEventListener('click', (e) => {\n    if (e.target === dialogOverlay) {\n      if (onCancel) onCancel();\n      document.body.removeChild(dialogOverlay);\n    }\n  });\n  \n  return dialogOverlay;\n}","// services/file-service.js\n// Import app state\nimport { appState } from '../app.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the file service\nexport function initFileService() {\n  console.log('Initializing File Service');\n}\n\n// Open an image file\nexport async function openImageFile() {\n  console.log('Opening image file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const imagePath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'bmp', 'tiff', 'tif'] }]\n      });\n      \n      if (imagePath) {\n        console.log(\"Selected image:\", imagePath);\n        return `file://${imagePath}`;\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return await fallbackFileUpload();\n    }\n  } else {\n    // Browser environment\n    console.log(\"Using browser file input\");\n    return await fallbackFileUpload();\n  }\n  \n  return null;\n}\n\n// Fallback file upload function using HTML input for browser context\nexport function fallbackFileUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve(event.target.result);\n        };\n        \n        reader.readAsDataURL(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}\n\n// Save a LUT file\nexport async function saveLutFile(content, defaultFilename = 'lut.cube') {\n  console.log('Saving LUT file');\n  \n  try {\n    // Format the filename\n    const filename = defaultFilename.endsWith('.cube') ? defaultFilename : `${defaultFilename}.cube`;\n    \n    // If we're in Electron environment\n    if (window.electronAPI && typeof window.electronAPI.saveLut === 'function') {\n      const filePath = await window.electronAPI.saveLut({\n        content,\n        defaultPath: filename\n      });\n      \n      if (filePath) {\n        showToast(`LUT saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([content], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`LUT downloaded as ${filename}`, 'success');\n      return filename;\n    }\n  } catch (error) {\n    console.error('Error saving LUT:', error);\n    showToast('Failed to save LUT file', 'error');\n    return null;\n  }\n}\n\n// Load a LUT file\nexport async function loadLutFile() {\n  console.log('Loading LUT file');\n  \n  // If we're in Electron environment\n  if (window.electronAPI && typeof window.electronAPI.openFileDialog === 'function') {\n    try {\n      const lutPath = await window.electronAPI.openFileDialog({\n        properties: ['openFile'],\n        filters: [{ name: 'CUBE Files', extensions: ['cube'] }]\n      });\n      \n      if (lutPath) {\n        // In a real implementation, we would read the file content here\n        console.log(\"Selected LUT:\", lutPath);\n        \n        // Placeholder for actual file reading logic\n        // The content would be returned and parsed elsewhere\n        return {\n          path: lutPath,\n          filename: lutPath.split('/').pop(),\n          content: \"# Placeholder for actual LUT content\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Error in Electron file dialog:\", error);\n      return null;\n    }\n  } else {\n    // Browser environment\n    return await fallbackLutUpload();\n  }\n  \n  return null;\n}\n\n// Fallback LUT upload function using HTML input for browser context\nexport function fallbackLutUpload() {\n  return new Promise((resolve) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.cube';\n    \n    input.addEventListener('change', function(e) {\n      if (this.files && this.files[0]) {\n        const file = this.files[0];\n        console.log(\"Selected LUT file:\", file.name);\n        \n        const reader = new FileReader();\n        reader.onload = function(event) {\n          resolve({\n            filename: file.name,\n            content: event.target.result\n          });\n        };\n        \n        reader.readAsText(file);\n      } else {\n        resolve(null);\n      }\n    });\n    \n    // Handle cancel case\n    input.addEventListener('cancel', function() {\n      resolve(null);\n    });\n    \n    input.click();\n  });\n}","// services/lut-generator.js\n// Import app state and utilities\nimport { appState } from '../app.js';\nimport { applyContrast } from '../components/basic-corrections/basic-corrections.js';\nimport { applyFadedFilm } from '../components/creative/creative-effects.js';\nimport { applyColorWheels } from '../components/color-wheels/color-wheels.js';\nimport { interpolateCurve, isLinearCurve } from '../components/curves/curves-panel.js';\n\n// Initialize the LUT generator service\nexport function initLutGenerator() {\n  console.log('Initializing LUT Generator Service');\n  \n  // Make the generator available globally\n  window.generateCubeLUT = generateCubeLUT;\n}\n\n// Generate a CUBE format LUT based on current parameters\nexport function generateCubeLUT() {\n  const lutParams = appState.currentLutParams;\n  const size = lutParams.size || 32;\n  let content = '';\n  \n  // Header\n  content += `# ${lutParams.title}\\n`;\n  content += '# Generated by LOTS App\\n\\n';\n  content += `LUT_3D_SIZE ${size}\\n`;\n  content += 'DOMAIN_MIN 0.0 0.0 0.0\\n';\n  content += 'DOMAIN_MAX 1.0 1.0 1.0\\n\\n';\n  \n  // Generate the 3D LUT entries\n  const step = 1.0 / (size - 1);\n  \n  for (let b = 0; b < size; b++) {\n    for (let g = 0; g < size; g++) {\n      for (let r = 0; r < size; r++) {\n        // Calculate normalized RGB values (0.0 to 1.0)\n        let redValue = r * step;\n        let greenValue = g * step;\n        let blueValue = b * step;\n        \n        // Apply adjustments based on the current mode\n        if (appState.activeMode === 'basic') {\n          const result = applyBasicLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        } else {\n          const result = applyAdvancedLutAdjustments(redValue, greenValue, blueValue);\n          redValue = result.r;\n          greenValue = result.g;\n          blueValue = result.b;\n        }\n        \n        // Clamp values to valid range\n        redValue = Math.min(1.0, Math.max(0.0, redValue));\n        greenValue = Math.min(1.0, Math.max(0.0, greenValue));\n        blueValue = Math.min(1.0, Math.max(0.0, blueValue));\n        \n        // Add the entry to the LUT\n        content += `${redValue.toFixed(6)} ${greenValue.toFixed(6)} ${blueValue.toFixed(6)}\\n`;\n      }\n    }\n  }\n  \n  return content;\n}\n\n// Apply basic mode adjustments to a single color point\nexport function applyBasicLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams.basic || {};\n  \n  // Apply contrast\n  r = applyContrast(r, params.contrast || 1.0);\n  g = applyContrast(g, params.contrast || 1.0);\n  b = applyContrast(b, params.contrast || 1.0);\n  \n  // Apply color balance\n  r *= params.redBalance || 1.0;\n  g *= params.greenBalance || 1.0;\n  b *= params.blueBalance || 1.0;\n  \n  // Apply shadow/highlight adjustments\n  if (params.shadowsShift && params.highlightsShift) {\n    let shadowEffect = Math.pow(1 - Math.max(r, Math.max(g, b)), 2);\n    let highlightEffect = Math.pow(Math.max(r, Math.max(g, b)), 2);\n    \n    r += params.shadowsShift[0] * shadowEffect + params.highlightsShift[0] * highlightEffect;\n    g += params.shadowsShift[1] * shadowEffect + params.highlightsShift[1] * highlightEffect;\n    b += params.shadowsShift[2] * shadowEffect + params.highlightsShift[2] * highlightEffect;\n  }\n  \n  // Apply saturation\n  if (params.saturation !== undefined && params.saturation !== 1.0) {\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    r = luminance + params.saturation * (r - luminance);\n    g = luminance + params.saturation * (g - luminance);\n    b = luminance + params.saturation * (b - luminance);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply advanced mode adjustments to a single color point\nexport function applyAdvancedLutAdjustments(r, g, b) {\n  const params = appState.currentLutParams;\n  \n  // 1. Apply temperature and tint\n  if (params.lumetri && (params.lumetri.temperature !== 0 || params.lumetri.tint !== 0)) {\n    const tempResult = applyTemperatureAndTint(\n      r, g, b, \n      params.lumetri.temperature / 150, \n      params.lumetri.tint / 150\n    );\n    r = tempResult.r;\n    g = tempResult.g;\n    b = tempResult.b;\n  }\n  \n  // 2. Apply exposure and contrast\n  if (params.lumetri) {\n    // Apply exposure\n    if (params.lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, params.lumetri.exposure / 150);\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (params.lumetri.contrast !== 0) {\n      const contrastValue = 1 + (params.lumetri.contrast / 150);\n      r = applyContrast(r, contrastValue);\n      g = applyContrast(g, contrastValue);\n      b = applyContrast(b, contrastValue);\n    }\n  }\n  \n  // 3. Apply highlights, shadows, whites, blacks adjustments\n  if (params.lumetri) {\n    const toneResult = applyToneAdjustments(\n      r, g, b,\n      params.lumetri.highlights / 150,\n      params.lumetri.shadows / 150,\n      params.lumetri.whites / 150,\n      params.lumetri.blacks / 150\n    );\n    r = toneResult.r;\n    g = toneResult.g;\n    b = toneResult.b;\n  }\n  \n  // 4. Apply color wheels tinting\n  if (params.colorWheels) {\n    const shadowTint = params.colorWheels.shadowTint;\n    const highlightTint = params.colorWheels.highlightTint;\n    const tintBalance = params.colorWheels.tintBalance / 150;\n    \n    if (shadowTint.r !== 128 || shadowTint.g !== 128 || shadowTint.b !== 128 ||\n        highlightTint.r !== 128 || highlightTint.g !== 128 || highlightTint.b !== 128 ||\n        tintBalance !== 0) {\n      \n      const colorWheelResult = applyColorWheels(r, g, b, shadowTint, highlightTint, tintBalance);\n      r = colorWheelResult.r;\n      g = colorWheelResult.g;\n      b = colorWheelResult.b;\n    }\n  }\n  \n  // 5. Apply curves\n  if (params.curves) {\n    // Apply RGB curve first\n    const rgbPoints = params.curves.rgb;\n    if (rgbPoints) {\n      r = interpolateCurve(rgbPoints, r);\n      g = interpolateCurve(rgbPoints, g);\n      b = interpolateCurve(rgbPoints, b);\n    }\n    \n    // Apply individual channel curves if not linear\n    if (params.curves.red && !isLinearCurve(params.curves.red)) {\n      r = interpolateCurve(params.curves.red, r);\n    }\n    \n    if (params.curves.green && !isLinearCurve(params.curves.green)) {\n      g = interpolateCurve(params.curves.green, g);\n    }\n    \n    if (params.curves.blue && !isLinearCurve(params.curves.blue)) {\n      b = interpolateCurve(params.curves.blue, b);\n    }\n  }\n  \n  // 6. Apply creative effects (vibrance, saturation, faded film)\n  if (params.creative) {\n    // Apply vibrance\n    if (params.creative.vibrance !== 0) {\n      const vibranceAmount = params.creative.vibrance / 150;\n      const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      const maxChannel = Math.max(r, g, b);\n      const minChannel = Math.min(r, g, b);\n      const saturationLevel = maxChannel === 0 ? 0 : (maxChannel - minChannel) / maxChannel;\n      const vibranceEffect = vibranceAmount * (1 - saturationLevel);\n      \n      r = luminance + (r - luminance) * (1 + vibranceEffect);\n      g = luminance + (g - luminance) * (1 + vibranceEffect);\n      b = luminance + (b - luminance) * (1 + vibranceEffect);\n    }\n    \n    // Apply faded film effect\n    if (params.creative.fadedFilm > 0) {\n      const fadedResult = applyFadedFilm(r, g, b, params.creative.fadedFilm / 100);\n      r = fadedResult.r;\n      g = fadedResult.g;\n      b = fadedResult.b;\n    }\n  }\n  \n  return { r, g, b };\n}\n\n// Apply temperature and tint adjustments\nexport function applyTemperatureAndTint(r, g, b, temperature, tint) {\n  // Temperature: blue-yellow shift\n  // Positive = cooler (more blue), Negative = warmer (more yellow)\n  const tempFactor = temperature;\n  \n  // Tint: green-magenta shift\n  // Positive = more magenta, Negative = more green\n  const tintFactor = tint;\n  \n  // Apply temperature (blue-yellow balance)\n  if (tempFactor < 0) {\n    // Warmer: boost red/green, reduce blue\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  } else if (tempFactor > 0) {\n    // Cooler: boost blue, reduce red/green\n    r = r * (1 - tempFactor * 0.4);\n    g = g * (1 - tempFactor * 0.2);\n    b = b * (1 + tempFactor * 0.6);\n  }\n  \n  // Apply tint (green-magenta balance)\n  if (tintFactor > 0) {\n    // More magenta: boost red and blue, reduce green\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  } else if (tintFactor < 0) {\n    // More green: boost green, reduce red and blue\n    r = r * (1 + tintFactor * 0.3);\n    g = g * (1 - tintFactor * 0.3);\n    b = b * (1 + tintFactor * 0.3);\n  }\n  \n  return { r, g, b };\n}\n\n// Apply tone adjustments (highlights, shadows, whites, blacks)\nexport function applyToneAdjustments(r, g, b, highlights, shadows, whites, blacks) {\n  // Calculate luminance\n  const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  \n  // Apply highlights adjustment (affects brighter areas)\n  let highlightEffect = Math.pow(luminance, 2) * highlights;\n  \n  // Apply shadows adjustment (affects darker areas)\n  let shadowEffect = Math.pow(1 - luminance, 2) * shadows;\n  \n  // Apply whites adjustment (affects the brightest areas)\n  let whitesEffect = Math.pow(luminance, 4) * whites;\n  \n  // Apply blacks adjustment (affects the darkest areas)\n  let blacksEffect = Math.pow(1 - luminance, 4) * blacks;\n  \n  // Combine all adjustments\n  const totalEffect = highlightEffect + shadowEffect + whitesEffect + blacksEffect;\n  \n  // Apply the combined effect to RGB channels\n  r += totalEffect;\n  g += totalEffect;\n  b += totalEffect;\n  \n  return { r, g, b };\n}","// services/export-service.js\n// Import app state and services\nimport { appState } from '../app.js';\nimport { saveLutFile } from './file-service.js';\nimport { generateCubeLUT } from './lut-generator.js';\nimport { showToast } from '../components/common/ui-elements.js';\n\n// Initialize the export service\nexport function initExportService() {\n  console.log('Initializing Export Service');\n  \n  // Set up export buttons\n  setupExportButtons();\n}\n\n// Set up export button click handlers\nfunction setupExportButtons() {\n  const saveLutBtn = document.getElementById('save-lut-btn');\n  const saveLutBtnAdvanced = document.getElementById('save-lut-btn-advanced');\n  \n  if (saveLutBtn) {\n    saveLutBtn.addEventListener('click', handleExportLut);\n  }\n  \n  if (saveLutBtnAdvanced) {\n    saveLutBtnAdvanced.addEventListener('click', handleExportLut);\n  }\n}\n\n// Handle the LUT export button click\nexport async function handleExportLut() {\n  console.log('Exporting LUT');\n  \n  try {\n    // Generate the LUT content\n    const lutContent = generateCubeLUT();\n    \n    // Format filename from title\n    const defaultFilename = formatFilename(appState.currentLutParams.title);\n    \n    // Save the file\n    const result = await saveLutFile(lutContent, defaultFilename);\n    \n    if (result) {\n      console.log('LUT exported successfully');\n    } else {\n      console.warn('LUT export was cancelled or failed');\n    }\n  } catch (error) {\n    console.error('Error exporting LUT:', error);\n    showToast('Failed to export LUT: ' + error.message, 'error');\n  }\n}\n\n// Format a filename from the LUT title\nexport function formatFilename(title) {\n  if (!title) return 'lut.cube';\n  \n  // Replace spaces with underscores and remove special characters\n  let filename = title.replace(/\\s+/g, '_')\n                      .replace(/[^a-zA-Z0-9_-]/g, '')\n                      .toLowerCase();\n  \n  // Add .cube extension if not present\n  if (!filename.endsWith('.cube')) {\n    filename += '.cube';\n  }\n  \n  return filename;\n}\n\n// Export the current image with adjustments applied\nexport async function exportProcessedImage() {\n  console.log('Exporting processed image');\n  \n  if (!appState.processedImageElement) {\n    showToast('No processed image to export', 'error');\n    return null;\n  }\n  \n  try {\n    // Get the processed image source (already contains the applied adjustments)\n    const imageDataUrl = appState.processedImageElement.src;\n    \n    // In Electron environment, we would save the file using Electron APIs\n    if (window.electronAPI && typeof window.electronAPI.saveImage === 'function') {\n      const defaultName = 'processed_image.jpg';\n      \n      const filePath = await window.electronAPI.saveImage({\n        dataUrl: imageDataUrl,\n        defaultPath: defaultName\n      });\n      \n      if (filePath) {\n        showToast(`Image saved to: ${filePath}`, 'success');\n        return filePath;\n      }\n    } else {\n      // Browser environment - offer download\n      const a = document.createElement('a');\n      a.href = imageDataUrl;\n      a.download = 'processed_image.jpg';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      \n      showToast('Image downloaded', 'success');\n      return 'processed_image.jpg';\n    }\n  } catch (error) {\n    console.error('Error exporting image:', error);\n    showToast('Failed to export image', 'error');\n    return null;\n  }\n}\n\n// Export all settings as a preset file\nexport function exportPreset() {\n  console.log('Exporting preset');\n  \n  try {\n    // Create a preset object with current settings\n    const preset = {\n      name: appState.currentLutParams.title || 'Unnamed Preset',\n      basic: { ...appState.currentLutParams.basic },\n      advanced: {\n        lumetri: appState.currentLutParams.lumetri ? { ...appState.currentLutParams.lumetri } : null,\n        colorWheels: appState.currentLutParams.colorWheels ? { ...appState.currentLutParams.colorWheels } : null,\n        curves: appState.currentLutParams.curves ? { ...appState.currentLutParams.curves } : null\n      },\n      version: '1.0'\n    };\n    \n    // Convert to JSON\n    const presetJson = JSON.stringify(preset, null, 2);\n    \n    // Format filename\n    const defaultFilename = `${formatFilename(preset.name).replace('.cube', '')}.lotspreset`;\n    \n    // Save the file using Electron or browser download\n    if (window.electronAPI && typeof window.electronAPI.savePreset === 'function') {\n      return window.electronAPI.savePreset({\n        content: presetJson,\n        defaultPath: defaultFilename\n      }).then(filePath => {\n        if (filePath) {\n          showToast(`Preset saved to: ${filePath}`, 'success');\n          return filePath;\n        }\n        return null;\n      });\n    } else {\n      // Browser environment - offer download\n      const blob = new Blob([presetJson], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = defaultFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast(`Preset downloaded as ${defaultFilename}`, 'success');\n      return Promise.resolve(defaultFilename);\n    }\n  } catch (error) {\n    console.error('Error exporting preset:', error);\n    showToast('Failed to export preset', 'error');\n    return Promise.resolve(null);\n  }\n}","// models/image-processor.js\n// Import necessary functions from other modules\nimport { appState } from '../app.js';\nimport { applyBasicCorrections } from '../components/basic-corrections/basic-corrections.js';\nimport { applyCreativeEffects } from '../components/creative/creative-effects.js';\nimport { applyColorWheelAdjustments } from '../components/color-wheels/color-wheels.js';\nimport { applyCurvesToImage } from '../components/curves/curves-panel.js';\n\n// Process an image with current adjustments in basic mode\nexport function processImageBasic(originalImage) {\n  console.log('Processing image with basic adjustments');\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply basic corrections\n    applyBasicCorrections(imageData);\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing image:', error);\n    return null;\n  }\n}\n\n// Process an image with current adjustments in advanced mode\nexport function processImageAdvanced(originalImage) {\n  console.log('Processing image with advanced adjustments');\n  console.log('Advanced parameters:', JSON.stringify(appState.currentLutParams.lumetri, null, 2));\n  \n  if (!originalImage) {\n    console.error('No image to process');\n    return null;\n  }\n  \n  try {\n    // Create an offscreen canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions to match the image\n    canvas.width = originalImage.naturalWidth;\n    canvas.height = originalImage.naturalHeight;\n    \n    // Draw the original image onto the canvas\n    ctx.drawImage(originalImage, 0, 0);\n    \n    // Get the image data\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    \n    // Apply adjustments in sequence\n    console.log('Applying advanced adjustments in sequence');\n    \n    // 1. First apply basic corrections as a base\n    console.log('1. Applying basic corrections');\n    applyBasicCorrections(imageData);\n    \n    // 2. Apply Lumetri adjustments\n    console.log('2. Applying Lumetri adjustments');\n    applyLumetriAdjustments(imageData);\n    \n    // 3. Apply color wheels adjustments\n    console.log('3. Applying color wheels adjustments');\n    applyColorWheelAdjustments(imageData);\n    \n    // 4. Apply creative effects (faded film, vibrance)\n    console.log('4. Applying creative effects');\n    applyCreativeEffects(imageData);\n    \n    // 5. Apply curves adjustments\n    console.log('5. Applying curves adjustments');\n    if (appState.curvesPanel) {\n      applyCurvesToImage(imageData);\n    } else {\n      console.warn('Curves panel not available, skipping curves adjustments');\n    }\n    \n    // Put the modified image data back on the canvas\n    ctx.putImageData(imageData, 0, 0);\n    \n    console.log('Advanced processing complete');\n    \n    // Return the data URL for the processed image\n    return canvas.toDataURL('image/jpeg', 1.0);\n  } catch (error) {\n    console.error('Error processing advanced image:', error);\n    return null;\n  }\n}\n\n// Apply Lumetri-style adjustments to image data\nfunction applyLumetriAdjustments(imageData) {\n  if (!appState.currentLutParams.lumetri) {\n    console.warn('No Lumetri parameters available');\n    return imageData;\n  }\n  \n  const lumetri = appState.currentLutParams.lumetri;\n  const data = imageData.data;\n  \n  console.log('Applying Lumetri adjustments with params:', \n    `exposure: ${lumetri.exposure}, `,\n    `contrast: ${lumetri.contrast}, `,\n    `highlights: ${lumetri.highlights}, `,\n    `shadows: ${lumetri.shadows}, `,\n    `whites: ${lumetri.whites}, `,\n    `blacks: ${lumetri.blacks}, `,\n    `temperature: ${lumetri.temperature}, `,\n    `tint: ${lumetri.tint}`);\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Get RGB values (0-255) and normalize to 0-1\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Apply exposure (exponential)\n    if (lumetri.exposure !== 0) {\n      const exposureFactor = Math.pow(2, lumetri.exposure / 150); // Adjust scaling for new range\n      r *= exposureFactor;\n      g *= exposureFactor;\n      b *= exposureFactor;\n    }\n    \n    // Apply contrast\n    if (lumetri.contrast !== 0) {\n      const contrastFactor = 1 + (lumetri.contrast / 150); // Scale from -150..150 to appropriate range\n      const midpoint = 0.5;\n      r = midpoint + (r - midpoint) * contrastFactor;\n      g = midpoint + (g - midpoint) * contrastFactor;\n      b = midpoint + (b - midpoint) * contrastFactor;\n    }\n    \n    // Calculate luminance for shadows/highlights adjustments\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    \n    // Apply highlights adjustments\n    if (lumetri.highlights !== 0) {\n      const highlightInfluence = Math.pow(luminance, 2); // Affects brighter areas more\n      const adjustment = (lumetri.highlights / 150) * 0.5; // Scale appropriately for new range\n      r += adjustment * highlightInfluence;\n      g += adjustment * highlightInfluence;\n      b += adjustment * highlightInfluence;\n    }\n    \n    // Apply shadows adjustments\n    if (lumetri.shadows !== 0) {\n      const shadowInfluence = Math.pow(1 - luminance, 2); // Affects darker areas more\n      const adjustment = (lumetri.shadows / 150) * 0.5; // Scale appropriately for new range\n      r += adjustment * shadowInfluence;\n      g += adjustment * shadowInfluence;\n      b += adjustment * shadowInfluence;\n    }\n    \n    // Apply whites/blacks adjustments\n    if (lumetri.whites !== 0) {\n      const whitesInfluence = Math.pow(luminance, 4); // Affects only the brightest areas\n      const adjustment = (lumetri.whites / 150) * 0.5; // Scale for new range\n      r += adjustment * whitesInfluence;\n      g += adjustment * whitesInfluence;\n      b += adjustment * whitesInfluence;\n    }\n    \n    if (lumetri.blacks !== 0) {\n      const blacksInfluence = Math.pow(1 - luminance, 4); // Affects only the darkest areas\n      const adjustment = (lumetri.blacks / 150) * 0.5; // Scale for new range\n      r += adjustment * blacksInfluence;\n      g += adjustment * blacksInfluence;\n      b += adjustment * blacksInfluence;\n    }\n    \n    // Apply temperature and tint\n    if (lumetri.temperature !== 0 || lumetri.tint !== 0) {\n      // Temperature: blue-yellow shift\n      const temp = lumetri.temperature / 150; // Scale to -1..1 for new range\n      if (temp < 0) {\n        // Warmer (more yellow)\n        r *= (1 - temp * 0.2);\n        g *= (1 - temp * 0.1);\n        b *= (1 + temp * 0.3);\n      } else {\n        // Cooler (more blue)\n        r *= (1 - temp * 0.2);\n        g *= (1 - temp * 0.1);\n        b *= (1 + temp * 0.3);\n      }\n      \n      // Tint: green-magenta shift\n      const tintVal = lumetri.tint / 150; // Scale to -1..1 for new range\n      if (tintVal > 0) {\n        // More magenta\n        r *= (1 + tintVal * 0.1);\n        g *= (1 - tintVal * 0.1);\n        b *= (1 + tintVal * 0.1);\n      } else {\n        // More green\n        r *= (1 + tintVal * 0.1);\n        g *= (1 - tintVal * 0.1);\n        b *= (1 + tintVal * 0.1);\n      }\n    }\n    \n    // Clamp values to valid range (0-1)\n    r = Math.min(1.0, Math.max(0.0, r));\n    g = Math.min(1.0, Math.max(0.0, g));\n    b = Math.min(1.0, Math.max(0.0, b));\n    \n    // Convert back to 0-255 range and update pixel data\n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n    // Alpha channel (data[i + 3]) remains unchanged\n  }\n  \n  return imageData;\n}\n\n// Process the image based on current app mode\nexport function processImage(originalImage) {\n  console.log(`Processing image in ${appState.activeMode} mode`);\n  \n  if (appState.activeMode === 'basic') {\n    return processImageBasic(originalImage);\n  } else {\n    return processImageAdvanced(originalImage);\n  }\n}\n\n// Apply the current adjustments to the displayed image\nexport function applyAdjustmentsToImage() {\n  const originalImage = appState.originalImageElement;\n  const processedImage = appState.processedImageElement;\n  \n  if (!originalImage || !processedImage) {\n    console.warn('Image elements not available');\n    return;\n  }\n  \n  console.log('Applying adjustments to image');\n  \n  // Process the image\n  const processedImageUrl = processImage(originalImage);\n  \n  if (processedImageUrl) {\n    // Update the processed image with the new data\n    processedImage.src = processedImageUrl;\n    console.log('Processed image updated successfully');\n  } else {\n    console.error('Failed to process image');\n  }\n}\n\n// Export the image processing functions\nexport default {\n  processImageBasic,\n  processImageAdvanced,\n  processImage,\n  applyAdjustmentsToImage\n};","// Import styles\nimport './styles/compare.css';\nimport './styles/base.css';\nimport './styles/layout.css';\nimport './styles/components.css';\nimport './styles/tools.css';\nimport './styles/themes.css';\nimport './styles/animations.css';\n\n// Import components\nimport { initCurvesPanel } from './components/curves/curves-panel.js';\nimport { initBasicCorrections, setupAdvancedControls } from './components/basic-corrections/basic-corrections.js';\nimport { initCreativeEffects } from './components/creative/creative-effects.js';\nimport { initColorWheels } from './components/color-wheels/color-wheels.js';\nimport { initImageComparison } from './components/image-preview/image-comparison.js';\nimport { initPreviewController } from './components/image-preview/preview-controller.js';\nimport { initPresets } from './components/presets/presets.js';\nimport { initUiElements } from './components/common/ui-elements.js';\n\n// Import services\nimport { initFileService } from './services/file-service.js';\nimport { initLutGenerator } from './services/lut-generator.js';\nimport { initExportService } from './services/export-service.js';\n\n// Import image processing utilities\nimport { processImage, applyAdjustmentsToImage } from './models/image-processor.js';\n\n// App state\nlet appState = {\n  activeMode: 'basic', // 'basic' or 'advanced'\n  originalImage: null,\n  processedImage: null,\n  currentLutParams: {\n    // Basic parameters\n    size: 32,\n    title: \"Signature Look\",\n    contrast: 0, // Changed from 1.2\n    saturation: 0, // Changed from 1.15\n    redBalance: 0, // Changed from 1.05\n    greenBalance: 0, // Changed from 0.95\n    blueBalance: 0, // Changed from 1.1\n    shadowsShift: [0, 0, 0], // Changed from [0.05, 0.0, -0.05]\n    highlightsShift: [0, 0, 0], // Changed from [0.03, 0.03, 0.0]\n    \n    // Advanced parameters\n    lumetri: {\n      exposure: 0,\n      contrast: 0,\n      highlights: 0,\n      shadows: 0,\n      whites: 0,\n      blacks: 0,\n      temperature: 0,\n      tint: 0\n    }\n  }\n};\n// Initialize the application\nfunction initApp() {\n  console.log('LOTS App initializing...');\n  \n  // Make app state available globally for modules\n  window.appState = appState;\n  \n  // Initialize UI components\n  initUiElements();\n  initBasicCorrections();\n  initCreativeEffects();\n  initColorWheels();\n  initCurvesPanel();\n  initImageComparison();\n  initPreviewController();\n  initPresets();\n  \n  // Initialize services\n  initFileService();\n  initLutGenerator();\n  initExportService();\n  \n  // Set up mode toggle\n  setupModeToggle();\n  \n  // Set up window control buttons\n  setupWindowControls();\n  \n  console.log('LOTS App initialized successfully');\n}\n\n// Set up mode toggle (basic/advanced)\nfunction setupModeToggle() {\n  console.log('Setting up mode toggle...');\n  const modeToggle = document.getElementById('mode-toggle');\n  const basicControls = document.getElementById('basic-controls');\n  const advancedControls = document.getElementById('advanced-controls');\n  \n  if (!modeToggle) {\n    console.error('Mode toggle element not found!');\n    return;\n  }\n  \n  if (!basicControls) {\n    console.error('Basic controls element not found!');\n    return;\n  }\n  \n  if (!advancedControls) {\n    console.error('Advanced controls element not found!');\n    return;\n  }\n  \n  console.log('Mode toggle elements found, adding event listener...');\n  \n  modeToggle.addEventListener('change', function() {\n    const isAdvancedMode = this.checked;\n    console.log(`Mode toggle changed. Advanced mode: ${isAdvancedMode}`);\n    \n    appState.activeMode = isAdvancedMode ? 'advanced' : 'basic';\n    \n    console.log(`Switching to ${appState.activeMode} mode`);\n    console.log(`Basic controls display: ${isAdvancedMode ? 'none' : 'block'}`);\n    console.log(`Advanced controls display: ${isAdvancedMode ? 'block' : 'none'}`);\n    \n    basicControls.style.display = isAdvancedMode ? 'none' : 'block';\n    advancedControls.style.display = isAdvancedMode ? 'block' : 'none';\n    \n    // When switching to advanced mode, ensure all advanced sections are properly initialized\n    if (isAdvancedMode && typeof setupAdvancedControls === 'function') {\n      try {\n        console.log('Setting up advanced controls...');\n        setupAdvancedControls();\n        console.log('Advanced controls setup complete');\n      } catch (error) {\n        console.error('Error setting up advanced controls:', error);\n      }\n    }\n    \n    // Apply current image adjustments with the new mode\n    if (appState.originalImage && appState.processedImage) {\n      console.log('Applying image adjustments after mode switch');\n      applyImageAdjustments();\n    }\n  });\n  \n  console.log('Mode toggle setup completed');\n}\n\n// Set up window control buttons for Electron\nfunction setupWindowControls() {\n  const minimizeBtn = document.getElementById('minimize-btn');\n  const maximizeBtn = document.getElementById('maximize-btn');\n  const closeBtn = document.getElementById('close-btn');\n  \n  if (minimizeBtn) {\n    minimizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('minimize');\n      }\n    });\n  }\n  \n  if (maximizeBtn) {\n    maximizeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('maximize');\n      }\n    });\n  }\n  \n  if (closeBtn) {\n    closeBtn.addEventListener('click', () => {\n      if (window.electronAPI) {\n        window.electronAPI.windowControl('close');\n      }\n    });\n  }\n}\n\n// Apply adjustments to image based on current mode and parameters\nfunction applyImageAdjustments() {\n  if (!appState.originalImage) {\n    console.warn('No original image to process');\n    return;\n  }\n  \n  console.log(`Applying image adjustments in ${appState.activeMode} mode`);\n  \n  // Actually process the image instead of just logging\n  try {\n    // Use the image processor to apply adjustments\n    const processedImageUrl = processImage(appState.originalImageElement);\n    \n    // Update the processed image with the new data\n    if (processedImageUrl && appState.processedImageElement) {\n      appState.processedImageElement.src = processedImageUrl;\n      console.log('Processed image updated');\n    } else {\n      console.warn('Failed to update processed image');\n    }\n  } catch (error) {\n    console.error('Error processing image:', error);\n  }\n}\n\n// In app.js, add a centralized section toggle function\nfunction setupAllSectionToggles() {\n  const toggles = document.querySelectorAll('.lumetri-section h3');\n  \n  toggles.forEach(toggle => {\n    // Remove any existing click listeners\n    const clone = toggle.cloneNode(true);\n    toggle.parentNode.replaceChild(clone, toggle);\n    \n    // Get the associated content section\n    const content = clone.nextElementSibling;\n    if (!content || !content.classList.contains('section-content')) {\n      console.error('Missing content section for toggle:', clone.id);\n      return;\n    }\n    \n    // Add new click listener\n    clone.addEventListener('click', () => {\n      console.log(`Toggle clicked for: ${clone.id} (centralized handler)`);\n      clone.classList.toggle('expanded');\n      content.classList.toggle('expanded');\n      \n      // Force redraw\n      content.offsetHeight;\n    });\n  });\n\n\n// Add this debugging code to app.js (anywhere after DOM load)\nfunction debugSections() {\n  console.log(\"======= DEBUG SECTIONS =======\");\n  \n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section' },\n    { toggle: 'creative-toggle', content: 'creative-section' },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section' },\n    { toggle: 'curves-toggle', content: 'curves-section' }\n  ];\n  \n  sections.forEach(section => {\n    const toggle = document.getElementById(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    console.log(`Toggle [${section.toggle}]: ${toggle ? 'Found' : 'NOT FOUND'}`);\n    console.log(`Content [${section.content}]: ${content ? 'Found' : 'NOT FOUND'}`);\n    \n    if (toggle && content) {\n      console.log(`- Toggle has 'expanded' class: ${toggle.classList.contains('expanded')}`);\n      console.log(`- Content has 'expanded' class: ${content.classList.contains('expanded')}`);\n      console.log(`- Content style.maxHeight: ${content.style.maxHeight}`);\n      console.log(`- Content offsetHeight: ${content.offsetHeight}px`);\n      console.log(`- Content computedStyle.maxHeight: ${window.getComputedStyle(content).maxHeight}`);\n      console.log(`- Content style.display: ${window.getComputedStyle(content).display}`);\n    }\n  });\n  \n  console.log(\"============================\");\n}\n\n// Call this debugging function after initialization\nsetTimeout(debugSections, 1000);\n\n\n\n// Add this to app.js or create a new file called section-fix.js\nfunction fixSectionToggles() {\n  // Remove all existing event listeners by cloning nodes\n  function removeExistingListeners(elementId) {\n    const element = document.getElementById(elementId);\n    if (!element) return null;\n    \n    const clone = element.cloneNode(true);\n    element.parentNode.replaceChild(clone, element);\n    return clone;\n  }\n  \n  // Get sections we need to fix\n  const sections = [\n    { toggle: 'basic-correction-toggle', content: 'basic-correction-section' },\n    { toggle: 'creative-toggle', content: 'creative-section' },\n    { toggle: 'color-wheels-toggle', content: 'color-wheels-section' },\n    { toggle: 'curves-toggle', content: 'curves-section' }\n  ];\n  \n  // Apply the fix to each section\n  sections.forEach(section => {\n    const toggle = removeExistingListeners(section.toggle);\n    const content = document.getElementById(section.content);\n    \n    if (!toggle || !content) {\n      console.error(`Cannot fix section - missing elements: ${section.toggle} or ${section.content}`);\n      return;\n    }\n    \n    // Set initial state directly\n    if (toggle.classList.contains('expanded')) {\n      content.style.display = 'block';\n      content.style.maxHeight = '1000px';\n      content.style.opacity = '1';\n    } else {\n      content.style.display = 'none';\n      content.style.maxHeight = '0';\n      content.style.opacity = '0';\n    }\n    \n    // Add a completely new click handler\n    toggle.addEventListener('click', function() {\n      console.log(`FIXED handler - Toggle clicked: ${section.toggle}`);\n      \n      // Toggle expanded class\n      this.classList.toggle('expanded');\n      \n      // Toggle visibility with direct style manipulation\n      if (this.classList.contains('expanded')) {\n        content.style.display = 'block';\n        // Force a reflow before changing properties for animation\n        content.offsetHeight;\n        content.style.maxHeight = '1000px';\n        content.style.opacity = '1';\n      } else {\n        content.style.maxHeight = '0';\n        content.style.opacity = '0';\n        // Hide after transition completes\n        setTimeout(() => {\n          if (!this.classList.contains('expanded')) {\n            content.style.display = 'none';\n          }\n        }, 300); // Match your CSS transition duration\n      }\n    });\n    \n    console.log(`Fixed toggle handler for: ${section.toggle}`);\n  });\n  \n  console.log(\"All section toggles have been fixed with direct style manipulation\");\n}\n\n// Call our fix function after DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Wait a short time to ensure all other initialization is done\n  setTimeout(fixSectionToggles, 500);\n});\n\n\nfunction addOverrideStyles() {\n  const styleElement = document.createElement('style');\n  styleElement.textContent = `\n    /* Override styles to fix section toggling */\n    .section-content {\n      transition: max-height 0.3s ease, opacity 0.3s ease;\n    }\n    \n    .lumetri-section h3.expanded + .section-content {\n      display: block !important;\n      max-height: 1000px !important;\n      opacity: 1 !important;\n      overflow: visible !important;\n    }\n    \n    .lumetri-section h3:not(.expanded) + .section-content {\n      max-height: 0 !important;\n      opacity: 0 !important;\n      overflow: hidden !important;\n    }\n    \n    /* Add a visual indicator for debug purposes */\n    .lumetri-section h3::after {\n      content: \" ▼\";\n      transition: transform 0.3s ease;\n    }\n    \n    .lumetri-section h3.expanded::after {\n      transform: rotate(180deg);\n    }\n  `;\n  \n  document.head.appendChild(styleElement);\n  console.log(\"Override styles added to fix section toggling\");\n}\n\n// Call this immediately\naddOverrideStyles();\n\n\n\n\n\n// Add these emergency buttons as a last resort\nsetTimeout(addEmergencyToggles, 1000);\n\n  console.log('All section toggles set up in centralized function');\n}\n\n// Call this after initializing all components\ndocument.addEventListener('DOMContentLoaded', () => {\n  // ... other initialization\n  setupAllSectionToggles();\n});\n\n// Apply basic mode adjustments\nfunction applyBasicAdjustments() {\n  console.log('Applying basic adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Apply advanced mode adjustments\nfunction applyAdvancedAdjustments() {\n  console.log('Applying advanced Lumetri-style adjustments to image');\n  applyAdjustmentsToImage();\n}\n\n// Make certain functions available globally\nwindow.applyImageAdjustments = applyImageAdjustments;\n\n// Initialize the app when the DOM is fully loaded\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// Export functions for use in other modules\nexport { \n  appState,\n  applyImageAdjustments,\n  applyBasicAdjustments,\n  applyAdvancedAdjustments\n};","// Import app state\nimport { appState } from '../../app.js';\n\n// Initialize image comparison\nexport function initImageComparison() {\n  console.log('Initializing Image Comparison');\n  // Will implement comparison slider functionality \n}\n\n// Export functions\nexport default {\n  initImageComparison\n};"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","defaultCurveParams","rgb","x","y","red","green","blue","currentChannel","isLinearCurve","points","i","length","expectedY","Math","abs","interpolateCurve","value","p1","p2","segmentLength","t","CurvesPanel","params","arguments","undefined","_classCallCheck","this","_objectSpread","JSON","parse","stringify","curveCanvas","curveCtx","channelButtons","activePoint","pointRadius","gridColor","baseLineColor","curveColors","shiftPressed","altPressed","init","bind","drawCurve","handleMouseDown","handleMouseMove","handleMouseUp","handleKeyDown","handleKeyUp","resetCurve","findNearestPoint","addPoint","removePoint","console","log","document","getElementById","getContext","setupEvents","updateChannelButtonUI","warn","_this","addEventListener","_loop","channel","btn","resetCurveBtn","e","style","cursor","classList","add","remove","applyImageAdjustments","width","height","strokeStyle","lineWidth","round","beginPath","moveTo","lineTo","stroke","clearRect","fillStyle","fillRect","drawGrid","curveColor","sortedPoints","_toConsumableArray","sort","a","b","drawDirectCurve","drawControlPoints","segmentT","_this2","forEach","point","index","isEndpoint","arc","PI","fill","minDistance","Infinity","nearestPoint","pointIndex","dx","dy","distance","sqrt","insertIndex","splice","rect","getBoundingClientRect","clientX","left","clientY","top","clampedX","max","min","clampedY","nearest","startX","startY","verticalOnly","prevX","nextX","r","g","rgbPoints","imageData","data","result","applyCurves","curvesPanel","resetBasicControls","appState","currentLutParams","basic","contrast","saturation","redBalance","greenBalance","blueBalance","shadowsShift","highlightsShift","sliders","values","textContent","setupSlider","slider","valueDisplay","paramName","toFixed","parseFloat","concat","tempToKelvin","createAdvancedSlider","container","options","id","label","step","initialValue","isTemperature","sliderContainer","createElement","className","labelElement","setAttribute","kelvinValue","appendChild","type","lumetri","error","resetAdvancedControls","exposure","highlights","shadows","whites","blacks","temperature","tint","querySelectorAll","split","applyBasicCorrections","applyContrast","luminance","shadowEffect","pow","highlightEffect","creative","applyVibrance","amount","maxChannel","minChannel","vibranceEffect","applyFadedFilm","fadeAmount","blackShift","setupColorWheel","wheel","innerHTML","canvas","clientWidth","clientHeight","background","backgroundImage","borderRadius","boxShadow","border","indicator","tintValue","colorWheels","centerX","centerY","maxDistance","normalizedR","normalizedG","normalizedB","hue","atan2","cos","sin","setWheelIndicatorPosition","isMouseDown","updateWheelFromEvent","angle","h","s","floor","f","p","q","hsvToRgb","mappedR","mappedG","mappedB","resetColorWheels","shadowTint","highlightTint","tintBalance","tintBalanceSlider","tintBalanceValue","shadowColorWheel","highlightColorWheel","shadowIndicator","querySelector","highlightIndicator","applyColorWheels","shadowInfluence","highlightInfluence","currentSliderPosition","handleImageUpload","window","electronAPI","openFileDialog","properties","filters","name","extensions","then","imagePath","originalImageElement","src","fallbackFileUpload","input","accept","files","file","reader","FileReader","onload","event","target","readAsDataURL","click","setViewMode","mode","resetPosition","viewSplitBtn","viewBeforeBtn","viewAfterBtn","originalImageContainer","comparisonSlider","verticalDivider","clipPath","display","builtInPresets","userPresets","updateSlider","sliderId","updateLUTPreview","fullPreview","lutPreview","lutContent","generateCubeLUT","slice","showToast","message","duration","toastContainer","body","toast","setTimeout","removeChild","_regeneratorRuntime","n","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","saveLutFile","_x","_saveLutFile","apply","_callee2","content","defaultFilename","filename","filePath","blob","url","_args2","_context2","endsWith","saveLut","defaultPath","Blob","URL","createObjectURL","href","download","revokeObjectURL","t0","_next","_throw","lutParams","size","title","redValue","greenValue","blueValue","activeMode","applyBasicLutAdjustments","applyAdvancedLutAdjustments","tempResult","applyTemperatureAndTint","exposureFactor","contrastValue","toneResult","totalEffect","applyToneAdjustments","colorWheelResult","curves","vibrance","vibranceAmount","fadedFilm","fadedResult","handleExportLut","_handleExportLut","_callee","_context","formatFilename","replace","toLowerCase","processImage","originalImage","ctx","naturalWidth","naturalHeight","drawImage","getImageData","putImageData","toDataURL","processImageBasic","contrastFactor","midpoint","adjustment","whitesInfluence","blacksInfluence","temp","tintVal","applyLumetriAdjustments","applyColorWheelAdjustments","applyCreativeEffects","applyCurvesToImage","processImageAdvanced","processedImage","processedImageUrl","processedImageElement","styleElement","fixSectionToggles","toggle","section","elementId","element","clone","cloneNode","parentNode","replaceChild","removeExistingListeners","contains","maxHeight","opacity","offsetHeight","nextElementSibling","getComputedStyle","head","addEmergencyToggles","setupAllSectionToggles","saveLutBtn","saveLutBtnAdvanced","minimizeBtn","maximizeBtn","closeBtn","viewCodeBtn","viewCodeBtnAdvanced","codeModal","closeModalBtn","modal","initModals","expanded","isExpanding","windowControl","resetBtn","contrastSlider","saturationSlider","redBalanceSlider","greenBalanceSlider","blueBalanceSlider","saturationValue","redBalanceValue","greenBalanceValue","blueBalanceValue","setupBasicControls","titleInput","lutSizeSelect","parseInt","initTitleAndSizeControls","fadedFilmSlider","vibranceSlider","fadedFilmValue","vibranceValue","initCreativeEffects","resetButton","initColorWheels","readyState","originalPlaceholder","comparisonContainer","imageUploadBtn","isSliding","startPercent","updateSliderPosition","percent","sliderLeft","preventDefault","deltaPercent","touches","closest","initComparisonSlider","initPreviewController","presetButtons","presetId","advancedParams","preset","activePresetId","advanced","savedPresets","localStorage","getItem","loadUserPresets","initPresets","modeToggle","basicControls","advancedControls","isAdvancedMode","checked","lumetriSection","basicCorrectionToggle","basicCorrectionSection","onclick","setupAdvancedControls","setupModeToggle","setupWindowControls"],"sourceRoot":""}